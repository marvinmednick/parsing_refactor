[
    {
        "page_number": 250,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-11 – Association of ctxIdx and syntax elements for each slice type in the initialization process"
            },
            {
                "line_number": 2,
                "text": "Slice type"
            },
            {
                "line_number": 3,
                "text": "Syntax element Table"
            },
            {
                "line_number": 4,
                "text": "SI I P, SP B"
            },
            {
                "line_number": 5,
                "text": "Table 9-18 85..104 85..104 85..104 85..104"
            },
            {
                "line_number": 6,
                "text": "coded_block_flag Table 9-25 460..483 460..483 460..483 460..483"
            },
            {
                "line_number": 7,
                "text": "Table 9-33 1012..1023 1012..1023 1012..1023"
            },
            {
                "line_number": 8,
                "text": "Table 9-19 105..165 105..165 105..165 105..165"
            },
            {
                "line_number": 9,
                "text": "Table 9-22 277..337 277..337 277..337 277..337"
            },
            {
                "line_number": 10,
                "text": "Table 9-24 402..416 402..416 402..416"
            },
            {
                "line_number": 11,
                "text": "Table 9-24 436..450 436..450 436..450"
            },
            {
                "line_number": 12,
                "text": "significant_coeff_flag[ ]"
            },
            {
                "line_number": 13,
                "text": "Table 9-26 484..571 484..571 484..571"
            },
            {
                "line_number": 14,
                "text": "Table 9-30 776..863 776..863 776..863"
            },
            {
                "line_number": 15,
                "text": "Table 9-28 660..689 660..689 660..689"
            },
            {
                "line_number": 16,
                "text": "Table 9-29 718..747 718..747 718..747"
            },
            {
                "line_number": 17,
                "text": "residual_block_cabac( ) Table 9-20 166..226 166..226 166..226 166..226"
            },
            {
                "line_number": 18,
                "text": "Table 9-23 338..398 338..398 338..398 338..398"
            },
            {
                "line_number": 19,
                "text": "Table 9-24 417..425 417..425 417..425"
            },
            {
                "line_number": 20,
                "text": "Table 9-24 451..459 451..459 451..459"
            },
            {
                "line_number": 21,
                "text": "last_significant_coeff_flag[ ]"
            },
            {
                "line_number": 22,
                "text": "Table 9-27 572..659 572..659 572..659"
            },
            {
                "line_number": 23,
                "text": "Table 9-31 864..951 864..951 864..951"
            },
            {
                "line_number": 24,
                "text": "Table 9-28 690..707 690..707 690..707"
            },
            {
                "line_number": 25,
                "text": "Table 9-29 748..765 748..765 748..765"
            },
            {
                "line_number": 26,
                "text": "Table 9-21 227..275 227..275 227..275 227..275"
            },
            {
                "line_number": 27,
                "text": "Table 9-24 426..435 426..435 426..435"
            },
            {
                "line_number": 28,
                "text": "coeff_abs_level_minus1[ ] Table 9-32 952..1011 952..1011 952..1011"
            },
            {
                "line_number": 29,
                "text": "Table 9-28 708..717 708..717 708..717"
            },
            {
                "line_number": 30,
                "text": "Table 9-29 766..775 766..775 766..775"
            },
            {
                "line_number": 31,
                "text": "NOTE 2 – ctxIdx equal to 276 is associated with the end_of_slice_flag and the bin of mb_type, which specifies the I_PCM"
            },
            {
                "line_number": 32,
                "text": "macroblock type. The decoding process specified in clause 9.3.3.2.4 applies to ctxIdx equal to 276. This decoding process, however,"
            },
            {
                "line_number": 33,
                "text": "may also be implemented by using the decoding process specified in clause 9.3.3.2.1. In this case, the initial values associated with"
            },
            {
                "line_number": 34,
                "text": "ctxIdx equal to 276 are specified to be pStateIdx = 63 and valMPS = 0, where pStateIdx = 63 represents a non-adapting probability"
            },
            {
                "line_number": 35,
                "text": "state."
            },
            {
                "line_number": 36,
                "text": "Table 9-12 – Values of variables m and n for ctxIdx from 0 to 10"
            },
            {
                "line_number": 37,
                "text": "ctxIdx"
            },
            {
                "line_number": 38,
                "text": "Initialization"
            },
            {
                "line_number": 39,
                "text": "variables"
            },
            {
                "line_number": 40,
                "text": "0 1 2 3 4 5 6 7 8 9 10"
            },
            {
                "line_number": 41,
                "text": "m 20 2 3 20 2 3 −28 −23 −6 −1 7"
            },
            {
                "line_number": 42,
                "text": "n −15 54 74 −15 54 74 127 104 53 54 51"
            },
            {
                "line_number": 43,
                "text": "Table 9-13 – Values of variables m and n for ctxIdx from 11 to 23"
            },
            {
                "line_number": 44,
                "text": "ctxIdx"
            },
            {
                "line_number": 45,
                "text": "Value of Initialization"
            },
            {
                "line_number": 46,
                "text": "cabac_init_idc variables"
            },
            {
                "line_number": 47,
                "text": "11 12 13 14 15 16 17 18 19 20 21 22 23"
            },
            {
                "line_number": 48,
                "text": "0 m 23 23 21 1 0 −37 5 −13 −11 1 12 −4 17"
            },
            {
                "line_number": 49,
                "text": "n 33 2 0 9 49 118 57 78 65 62 49 73 50"
            },
            {
                "line_number": 50,
                "text": "1 m 22 34 16 −2 4 −29 2 −6 −13 5 9 −3 10"
            },
            {
                "line_number": 51,
                "text": "n 25 0 0 9 41 118 65 71 79 52 50 70 54"
            },
            {
                "line_number": 52,
                "text": "2 m 29 25 14 −10 −3 −27 26 −4 −24 5 6 −17 14"
            },
            {
                "line_number": 53,
                "text": "n 16 0 0 51 62 99 16 85 102 57 57 73 57"
            },
            {
                "line_number": 54,
                "text": "228 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 251,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-14 – Values of variables m and n for ctxIdx from 24 to 39"
            },
            {
                "line_number": 2,
                "text": "ctxIdx"
            },
            {
                "line_number": 3,
                "text": "Value of Initializatio"
            },
            {
                "line_number": 4,
                "text": "cabac_init_idc n variables"
            },
            {
                "line_number": 5,
                "text": "24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39"
            },
            {
                "line_number": 6,
                "text": "0 m 9 −4 −2 −1 −1 −1"
            },
            {
                "line_number": 7,
                "text": "18 9 29 26 16 1 1 −6 −6 9"
            },
            {
                "line_number": 8,
                "text": "6 0 3 1 7"
            },
            {
                "line_number": 9,
                "text": "n 64 43 0 67 90 104 127 104 67 78 65 62 86 95 61 45"
            },
            {
                "line_number": 10,
                "text": "1 m 26 −4 −1 −1 −1"
            },
            {
                "line_number": 11,
                "text": "26 19 40 57 41 −4 −6 5 6 0 8"
            },
            {
                "line_number": 12,
                "text": "5 5 3 3"
            },
            {
                "line_number": 13,
                "text": "n 34 22 0 2 36 69 127 101 76 71 79 52 69 90 52 43"
            },
            {
                "line_number": 14,
                "text": "2 m 12 −3 −2 −2 −1"
            },
            {
                "line_number": 15,
                "text": "20 20 29 54 37 −2 −4 5 −6 −6 4"
            },
            {
                "line_number": 16,
                "text": "2 2 4 4"
            },
            {
                "line_number": 17,
                "text": "n 40 10 0 0 42 97 127 117 74 85 102 57 93 88 44 55"
            },
            {
                "line_number": 18,
                "text": "Table 9-15 – Values of variables m and n for ctxIdx from 40 to 53"
            },
            {
                "line_number": 19,
                "text": "ctxIdx"
            },
            {
                "line_number": 20,
                "text": "Value of Initialization"
            },
            {
                "line_number": 21,
                "text": "cabac_init_idc variables"
            },
            {
                "line_number": 22,
                "text": "40 41 42 43 44 45 46 47 48 49 50 51 52 53"
            },
            {
                "line_number": 23,
                "text": "0 m −3 −6 −11 6 7 −5 2 0 −3 −10 5 4 −3 0"
            },
            {
                "line_number": 24,
                "text": "n 69 81 96 55 67 86 88 58 76 94 54 69 81 88"
            },
            {
                "line_number": 25,
                "text": "1 m −2 −5 −10 2 2 −3 −3 1 −3 −6 0 −3 −7 −5"
            },
            {
                "line_number": 26,
                "text": "n 69 82 96 59 75 87 100 56 74 85 59 81 86 95"
            },
            {
                "line_number": 27,
                "text": "2 m −11 −15 −21 19 20 4 6 1 −5 −13 5 6 −3 −1"
            },
            {
                "line_number": 28,
                "text": "n 89 103 116 57 58 84 96 63 85 106 63 75 90 101"
            },
            {
                "line_number": 29,
                "text": "Table 9-16 – Values of variables m and n for ctxIdx from 54 to 59, and 399 to 401"
            },
            {
                "line_number": 30,
                "text": "ctxIdx"
            },
            {
                "line_number": 31,
                "text": "Value of cabac_init_idc Initialization variables"
            },
            {
                "line_number": 32,
                "text": "54 55 56 57 58 59 399 400 401"
            },
            {
                "line_number": 33,
                "text": "I slices m na na na na na na 31 31 25"
            },
            {
                "line_number": 34,
                "text": "n na na na na na na 21 31 50"
            },
            {
                "line_number": 35,
                "text": "0 m −7 −5 −4 −5 −7 1 12 11 14"
            },
            {
                "line_number": 36,
                "text": "n 67 74 74 80 72 58 40 51 59"
            },
            {
                "line_number": 37,
                "text": "1 m −1 −1 1 −2 −5 0 25 21 21"
            },
            {
                "line_number": 38,
                "text": "n 66 77 70 86 72 61 32 49 54"
            },
            {
                "line_number": 39,
                "text": "2 m 3 −4 −2 −12 −7 1 21 19 17"
            },
            {
                "line_number": 40,
                "text": "n 55 79 75 97 50 60 33 50 61"
            },
            {
                "line_number": 41,
                "text": "Rec. ITU-T H.264 (06/2019) 229"
            }
        ]
    },
    {
        "page_number": 252,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-17 – Values of variables m and n for ctxIdx from 60 to 69"
            },
            {
                "line_number": 2,
                "text": "ctxIdx"
            },
            {
                "line_number": 3,
                "text": "Initialization"
            },
            {
                "line_number": 4,
                "text": "variables"
            },
            {
                "line_number": 5,
                "text": "60 61 62 63 64 65 66 67 68 69"
            },
            {
                "line_number": 6,
                "text": "m 0 0 0 0 −9 4 0 −7 13 3"
            },
            {
                "line_number": 7,
                "text": "n 41 63 63 63 83 86 97 72 41 62"
            },
            {
                "line_number": 8,
                "text": "Table 9-18 – Values of variables m and n for ctxIdx from 70 to 104"
            },
            {
                "line_number": 9,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 10,
                "text": "I and SI"
            },
            {
                "line_number": 11,
                "text": "slices"
            },
            {
                "line_number": 12,
                "text": "slices"
            },
            {
                "line_number": 13,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 14,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 15,
                "text": "70 0 11 0 45 13 15 7 34 88 −11 115 −13 108 −4 92 5 78"
            },
            {
                "line_number": 16,
                "text": "71 1 55 −4 78 7 51 −9 88 89 −12 63 −3 46 0 39 −6 55"
            },
            {
                "line_number": 17,
                "text": "72 0 69 −3 96 2 80 −20 127 90 −2 68 −1 65 0 65 4 61"
            },
            {
                "line_number": 18,
                "text": "73 −17 127 −27 126 −39 127 −36 127 91 −15 84 −1 57 −15 84 −14 83"
            },
            {
                "line_number": 19,
                "text": "74 −13 102 −28 98 −18 91 −17 91 92 −13 104 −9 93 −35 127 −37 127"
            },
            {
                "line_number": 20,
                "text": "75 0 82 −25 101 −17 96 −14 95 93 −3 70 −3 74 −2 73 −5 79"
            },
            {
                "line_number": 21,
                "text": "76 −7 74 −23 67 −26 81 −25 84 94 −8 93 −9 92 −12 104 −11 104"
            },
            {
                "line_number": 22,
                "text": "77 −21 107 −28 82 −35 98 −25 86 95 −10 90 −8 87 −9 91 −11 91"
            },
            {
                "line_number": 23,
                "text": "78 −27 127 −20 94 −24 102 −12 89 96 −30 127 −23 126 −31 127 −30 127"
            },
            {
                "line_number": 24,
                "text": "79 −31 127 −16 83 −23 97 −17 91 97 −1 74 5 54 3 55 0 65"
            },
            {
                "line_number": 25,
                "text": "80 −24 127 −22 110 −27 119 −31 127 98 −6 97 6 60 7 56 −2 79"
            },
            {
                "line_number": 26,
                "text": "81 −18 95 −21 91 −24 99 −14 76 99 −7 91 6 59 7 55 0 72"
            },
            {
                "line_number": 27,
                "text": "82 −27 127 −18 102 −21 110 −18 103 100 −20 127 6 69 8 61 −4 92"
            },
            {
                "line_number": 28,
                "text": "83 −21 114 −13 93 −18 102 −13 90 101 −4 56 −1 48 −3 53 −6 56"
            },
            {
                "line_number": 29,
                "text": "84 −30 127 −29 127 −36 127 −37 127 102 −5 82 0 68 0 68 3 68"
            },
            {
                "line_number": 30,
                "text": "85 −17 123 −7 92 0 80 11 80 103 −7 76 −4 69 −7 74 −8 71"
            },
            {
                "line_number": 31,
                "text": "86 −12 115 −5 89 −5 89 5 76 104 −22 125 −8 88 −9 88 −13 98"
            },
            {
                "line_number": 32,
                "text": "87 −16 122 −7 96 −7 94 2 84"
            },
            {
                "line_number": 33,
                "text": "230 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 253,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-19 – Values of variables m and n for ctxIdx from 105 to 165"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "105 −7 93 −2 85 −13 103 −4 86 136 −13 101 5 53 0 58 −5 75"
            },
            {
                "line_number": 9,
                "text": "106 −11 87 −6 78 −13 91 −12 88 137 −13 91 −2 61 −1 60 −8 80"
            },
            {
                "line_number": 10,
                "text": "107 −3 77 −1 75 −9 89 −5 82 138 −12 94 0 56 −3 61 −21 83"
            },
            {
                "line_number": 11,
                "text": "108 −5 71 −7 77 −14 92 −3 72 139 −10 88 0 56 −8 67 −21 64"
            },
            {
                "line_number": 12,
                "text": "109 −4 63 2 54 −8 76 −4 67 140 −16 84 −13 63 −25 84 −13 31"
            },
            {
                "line_number": 13,
                "text": "110 −4 68 5 50 −12 87 −8 72 141 −10 86 −5 60 −14 74 −25 64"
            },
            {
                "line_number": 14,
                "text": "111 −12 84 −3 68 −23 110 −16 89 142 −7 83 −1 62 −5 65 −29 94"
            },
            {
                "line_number": 15,
                "text": "112 −7 62 1 50 −24 105 −9 69 143 −13 87 4 57 5 52 9 75"
            },
            {
                "line_number": 16,
                "text": "113 −7 65 6 42 −10 78 −1 59 144 −19 94 −6 69 2 57 17 63"
            },
            {
                "line_number": 17,
                "text": "114 8 61 −4 81 −20 112 5 66 145 1 70 4 57 0 61 −8 74"
            },
            {
                "line_number": 18,
                "text": "115 5 56 1 63 −17 99 4 57 146 0 72 14 39 −9 69 −5 35"
            },
            {
                "line_number": 19,
                "text": "116 −2 66 −4 70 −78 127 −4 71 147 −5 74 4 51 −11 70 −2 27"
            },
            {
                "line_number": 20,
                "text": "117 1 64 0 67 −70 127 −2 71 148 18 59 13 68 18 55 13 91"
            },
            {
                "line_number": 21,
                "text": "118 0 61 2 57 −50 127 2 58 149 −8 102 3 64 −4 71 3 65"
            },
            {
                "line_number": 22,
                "text": "119 −2 78 −2 76 −46 127 −1 74 150 −15 100 1 61 0 58 −7 69"
            },
            {
                "line_number": 23,
                "text": "120 1 50 11 35 −4 66 −4 44 151 0 95 9 63 7 61 8 77"
            },
            {
                "line_number": 24,
                "text": "121 7 52 4 64 −5 78 −1 69 152 −4 75 7 50 9 41 −10 66"
            },
            {
                "line_number": 25,
                "text": "122 10 35 1 61 −4 71 0 62 153 2 72 16 39 18 25 3 62"
            },
            {
                "line_number": 26,
                "text": "123 0 44 11 35 −8 72 −7 51 154 −11 75 5 44 9 32 −3 68"
            },
            {
                "line_number": 27,
                "text": "124 11 38 18 25 2 59 −4 47 155 −3 71 4 52 5 43 −20 81"
            },
            {
                "line_number": 28,
                "text": "125 1 45 12 24 −1 55 −6 42 156 15 46 11 48 9 47 0 30"
            },
            {
                "line_number": 29,
                "text": "126 0 46 13 29 −7 70 −3 41 157 −13 69 −5 60 0 44 1 7"
            },
            {
                "line_number": 30,
                "text": "127 5 44 13 36 −6 75 −6 53 158 0 62 −1 59 0 51 −3 23"
            },
            {
                "line_number": 31,
                "text": "128 31 17 −10 93 −8 89 8 76 159 0 65 0 59 2 46 −21 74"
            },
            {
                "line_number": 32,
                "text": "129 1 51 −7 73 −34 119 −9 78 160 21 37 22 33 19 38 16 66"
            },
            {
                "line_number": 33,
                "text": "130 7 50 −2 73 −3 75 −11 83 161 −15 72 5 44 −4 66 −23 124"
            },
            {
                "line_number": 34,
                "text": "131 28 19 13 46 32 20 9 52 162 9 57 14 43 15 38 17 37"
            },
            {
                "line_number": 35,
                "text": "132 16 33 9 49 30 22 0 67 163 16 54 −1 78 12 42 44 −18"
            },
            {
                "line_number": 36,
                "text": "133 14 62 −7 100 −44 127 −5 90 164 0 62 0 60 9 34 50 −34"
            },
            {
                "line_number": 37,
                "text": "134 −13 108 9 53 0 54 1 67 165 12 72 9 69 0 89 −22 127"
            },
            {
                "line_number": 38,
                "text": "135 −15 100 2 53 −5 61 −15 72"
            },
            {
                "line_number": 39,
                "text": "Rec. ITU-T H.264 (06/2019) 231"
            }
        ]
    },
    {
        "page_number": 254,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-20 – Values of variables m and n for ctxIdx from 166 to 226"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "166 24 0 11 28 4 45 4 39 197 26 −17 28 3 36 −28 28 −3"
            },
            {
                "line_number": 9,
                "text": "167 15 9 2 40 10 28 0 42 198 30 −25 28 4 38 −28 24 10"
            },
            {
                "line_number": 10,
                "text": "168 8 25 3 44 10 31 7 34 199 28 −20 32 0 38 −27 27 0"
            },
            {
                "line_number": 11,
                "text": "169 13 18 0 49 33 −11 11 29 200 33 −23 34 −1 34 −18 34 −14"
            },
            {
                "line_number": 12,
                "text": "170 15 9 0 46 52 −43 8 31 201 37 −27 30 6 35 −16 52 −44"
            },
            {
                "line_number": 13,
                "text": "171 13 19 2 44 18 15 6 37 202 33 −23 30 6 34 −14 39 −24"
            },
            {
                "line_number": 14,
                "text": "172 10 37 2 51 28 0 7 42 203 40 −28 32 9 32 −8 19 17"
            },
            {
                "line_number": 15,
                "text": "173 12 18 0 47 35 −22 3 40 204 38 −17 31 19 37 −6 31 25"
            },
            {
                "line_number": 16,
                "text": "174 6 29 4 39 38 −25 8 33 205 33 −11 26 27 35 0 36 29"
            },
            {
                "line_number": 17,
                "text": "175 20 33 2 62 34 0 13 43 206 40 −15 26 30 30 10 24 33"
            },
            {
                "line_number": 18,
                "text": "176 15 30 6 46 39 −18 13 36 207 41 −6 37 20 28 18 34 15"
            },
            {
                "line_number": 19,
                "text": "177 4 45 0 54 32 −12 4 47 208 38 1 28 34 26 25 30 20"
            },
            {
                "line_number": 20,
                "text": "178 1 58 3 54 102 −94 3 55 209 41 17 17 70 29 41 22 73"
            },
            {
                "line_number": 21,
                "text": "179 0 62 2 58 0 0 2 58 210 30 −6 1 67 0 75 20 34"
            },
            {
                "line_number": 22,
                "text": "180 7 61 4 63 56 −15 6 60 211 27 3 5 59 2 72 19 31"
            },
            {
                "line_number": 23,
                "text": "181 12 38 6 51 33 −4 8 44 212 26 22 9 67 8 77 27 44"
            },
            {
                "line_number": 24,
                "text": "182 11 45 6 57 29 10 11 44 213 37 −16 16 30 14 35 19 16"
            },
            {
                "line_number": 25,
                "text": "183 15 39 7 53 37 −5 14 42 214 35 −4 18 32 18 31 15 36"
            },
            {
                "line_number": 26,
                "text": "184 11 42 6 52 51 −29 7 48 215 38 −8 18 35 17 35 15 36"
            },
            {
                "line_number": 27,
                "text": "185 13 44 6 55 39 −9 4 56 216 38 −3 22 29 21 30 21 28"
            },
            {
                "line_number": 28,
                "text": "186 16 45 11 45 52 −34 4 52 217 37 3 24 31 17 45 25 21"
            },
            {
                "line_number": 29,
                "text": "187 12 41 14 36 69 −58 13 37 218 38 5 23 38 20 42 30 20"
            },
            {
                "line_number": 30,
                "text": "188 10 49 8 53 67 −63 9 49 219 42 0 18 43 18 45 31 12"
            },
            {
                "line_number": 31,
                "text": "189 30 34 −1 82 44 −5 19 58 220 35 16 20 41 27 26 27 16"
            },
            {
                "line_number": 32,
                "text": "190 18 42 7 55 32 7 10 48 221 39 22 11 63 16 54 24 42"
            },
            {
                "line_number": 33,
                "text": "191 10 55 −3 78 55 −29 12 45 222 14 48 9 59 7 66 0 93"
            },
            {
                "line_number": 34,
                "text": "192 17 51 15 46 32 1 0 69 223 27 37 9 64 16 56 14 56"
            },
            {
                "line_number": 35,
                "text": "193 17 46 22 31 0 0 20 33 224 21 60 −1 94 11 73 15 57"
            },
            {
                "line_number": 36,
                "text": "194 0 89 −1 84 27 36 8 63 225 12 68 −2 89 10 67 26 38"
            },
            {
                "line_number": 37,
                "text": "195 26 −19 25 7 33 −25 35 −18 226 2 97 −9 108 −10 116 −24 127"
            },
            {
                "line_number": 38,
                "text": "196 22 −17 30 −7 34 −30 33 −25"
            },
            {
                "line_number": 39,
                "text": "232 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 255,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-21 – Values of variables m and n for ctxIdx from 227 to 275"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "227 −3 71 −6 76 −23 112 −24 115 252 −12 73 −6 55 −16 72 −14 75"
            },
            {
                "line_number": 9,
                "text": "228 −6 42 −2 44 −15 71 −22 82 253 −8 76 0 58 −7 69 −10 79"
            },
            {
                "line_number": 10,
                "text": "229 −5 50 0 45 −7 61 −9 62 254 −7 80 0 64 −4 69 −9 83"
            },
            {
                "line_number": 11,
                "text": "230 −3 54 0 52 0 53 0 53 255 −9 88 −3 74 −5 74 −12 92"
            },
            {
                "line_number": 12,
                "text": "231 −2 62 −3 64 −5 66 0 59 256 −17 110 −10 90 −9 86 −18 108"
            },
            {
                "line_number": 13,
                "text": "232 0 58 −2 59 −11 77 −14 85 257 −11 97 0 70 2 66 −4 79"
            },
            {
                "line_number": 14,
                "text": "233 1 63 −4 70 −9 80 −13 89 258 −20 84 −4 29 −9 34 −22 69"
            },
            {
                "line_number": 15,
                "text": "234 −2 72 −4 75 −9 84 −13 94 259 −11 79 5 31 1 32 −16 75"
            },
            {
                "line_number": 16,
                "text": "235 −1 74 −8 82 −10 87 −11 92 260 −6 73 7 42 11 31 −2 58"
            },
            {
                "line_number": 17,
                "text": "236 −9 91 −17 102 −34 127 −29 127 261 −4 74 1 59 5 52 1 58"
            },
            {
                "line_number": 18,
                "text": "237 −5 67 −9 77 −21 101 −21 100 262 −13 86 −2 58 −2 55 −13 78"
            },
            {
                "line_number": 19,
                "text": "238 −5 27 3 24 −3 39 −14 57 263 −13 96 −3 72 −2 67 −9 83"
            },
            {
                "line_number": 20,
                "text": "239 −3 39 0 42 −5 53 −12 67 264 −11 97 −3 81 0 73 −4 81"
            },
            {
                "line_number": 21,
                "text": "240 −2 44 0 48 −7 61 −11 71 265 −19 117 −11 97 −8 89 −13 99"
            },
            {
                "line_number": 22,
                "text": "241 0 46 0 55 −11 75 −10 77 266 −8 78 0 58 3 52 −13 81"
            },
            {
                "line_number": 23,
                "text": "242 −16 64 −6 59 −15 77 −21 85 267 −5 33 8 5 7 4 −6 38"
            },
            {
                "line_number": 24,
                "text": "243 −8 68 −7 71 −17 91 −16 88 268 −4 48 10 14 10 8 −13 62"
            },
            {
                "line_number": 25,
                "text": "244 −10 78 −12 83 −25 107 −23 104 269 −2 53 14 18 17 8 −6 58"
            },
            {
                "line_number": 26,
                "text": "245 −6 77 −11 87 −25 111 −15 98 270 −3 62 13 27 16 19 −2 59"
            },
            {
                "line_number": 27,
                "text": "246 −10 86 −30 119 −28 122 −37 127 271 −13 71 2 40 3 37 −16 73"
            },
            {
                "line_number": 28,
                "text": "247 −12 92 1 58 −11 76 −10 82 272 −10 79 0 58 −1 61 −10 76"
            },
            {
                "line_number": 29,
                "text": "248 −15 55 −3 29 −10 44 −8 48 273 −12 86 −3 70 −5 73 −13 86"
            },
            {
                "line_number": 30,
                "text": "249 −10 60 −1 36 −10 52 −8 61 274 −13 90 −6 79 −1 70 −9 83"
            },
            {
                "line_number": 31,
                "text": "250 −6 62 1 38 −10 57 −8 66 275 −14 97 −8 85 −4 78 −10 87"
            },
            {
                "line_number": 32,
                "text": "251 −4 65 2 43 −9 58 −7 70"
            },
            {
                "line_number": 33,
                "text": "Rec. ITU-T H.264 (06/2019) 233"
            }
        ]
    },
    {
        "page_number": 256,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-22 – Values of variables m and n for ctxIdx from 277 to 337"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "277 −6 93 −13 106 −21 126 −22 127 308 −16 96 −1 51 −16 77 −10 67"
            },
            {
                "line_number": 9,
                "text": "278 −6 84 −16 106 −23 124 −25 127 309 −7 88 7 49 −2 64 1 68"
            },
            {
                "line_number": 10,
                "text": "279 −8 79 −10 87 −20 110 −25 120 310 −8 85 8 52 2 61 0 77"
            },
            {
                "line_number": 11,
                "text": "280 0 66 −21 114 −26 126 −27 127 311 −7 85 9 41 −6 67 2 64"
            },
            {
                "line_number": 12,
                "text": "281 −1 71 −18 110 −25 124 −19 114 312 −9 85 6 47 −3 64 0 68"
            },
            {
                "line_number": 13,
                "text": "282 0 62 −14 98 −17 105 −23 117 313 −13 88 2 55 2 57 −5 78"
            },
            {
                "line_number": 14,
                "text": "283 −2 60 −22 110 −27 121 −25 118 314 4 66 13 41 −3 65 7 55"
            },
            {
                "line_number": 15,
                "text": "284 −2 59 −21 106 −27 117 −26 117 315 −3 77 10 44 −3 66 5 59"
            },
            {
                "line_number": 16,
                "text": "285 −5 75 −18 103 −17 102 −24 113 316 −3 76 6 50 0 62 2 65"
            },
            {
                "line_number": 17,
                "text": "286 −3 62 −21 107 −26 117 −28 118 317 −6 76 5 53 9 51 14 54"
            },
            {
                "line_number": 18,
                "text": "287 −4 58 −23 108 −27 116 −31 120 318 10 58 13 49 −1 66 15 44"
            },
            {
                "line_number": 19,
                "text": "288 −9 66 −26 112 −33 122 −37 124 319 −1 76 4 63 −2 71 5 60"
            },
            {
                "line_number": 20,
                "text": "289 −1 79 −10 96 −10 95 −10 94 320 −1 83 6 64 −2 75 2 70"
            },
            {
                "line_number": 21,
                "text": "290 0 71 −12 95 −14 100 −15 102 321 −7 99 −2 69 −1 70 −2 76"
            },
            {
                "line_number": 22,
                "text": "291 3 68 −5 91 −8 95 −10 99 322 −14 95 −2 59 −9 72 −18 86"
            },
            {
                "line_number": 23,
                "text": "292 10 44 −9 93 −17 111 −13 106 323 2 95 6 70 14 60 12 70"
            },
            {
                "line_number": 24,
                "text": "293 −7 62 −22 94 −28 114 −50 127 324 0 76 10 44 16 37 5 64"
            },
            {
                "line_number": 25,
                "text": "294 15 36 −5 86 −6 89 −5 92 325 −5 74 9 31 0 47 −12 70"
            },
            {
                "line_number": 26,
                "text": "295 14 40 9 67 −2 80 17 57 326 0 70 12 43 18 35 11 55"
            },
            {
                "line_number": 27,
                "text": "296 16 27 −4 80 −4 82 −5 86 327 −11 75 3 53 11 37 5 56"
            },
            {
                "line_number": 28,
                "text": "297 12 29 −10 85 −9 85 −13 94 328 1 68 14 34 12 41 0 69"
            },
            {
                "line_number": 29,
                "text": "298 1 44 −1 70 −8 81 −12 91 329 0 65 10 38 10 41 2 65"
            },
            {
                "line_number": 30,
                "text": "299 20 36 7 60 −1 72 −2 77 330 −14 73 −3 52 2 48 −6 74"
            },
            {
                "line_number": 31,
                "text": "300 18 32 9 58 5 64 0 71 331 3 62 13 40 12 41 5 54"
            },
            {
                "line_number": 32,
                "text": "301 5 42 5 61 1 67 −1 73 332 4 62 17 32 13 41 7 54"
            },
            {
                "line_number": 33,
                "text": "302 1 48 12 50 9 56 4 64 333 −1 68 7 44 0 59 −6 76"
            },
            {
                "line_number": 34,
                "text": "303 10 62 15 50 0 69 −7 81 334 −13 75 7 38 3 50 −11 82"
            },
            {
                "line_number": 35,
                "text": "304 17 46 18 49 1 69 5 64 335 11 55 13 50 19 40 −2 77"
            },
            {
                "line_number": 36,
                "text": "305 9 64 17 54 7 69 15 57 336 5 64 10 57 3 66 −2 77"
            },
            {
                "line_number": 37,
                "text": "306 −12 104 10 41 −7 69 1 67 337 12 70 26 43 18 50 25 42"
            },
            {
                "line_number": 38,
                "text": "307 −11 97 7 46 −6 67 0 68"
            },
            {
                "line_number": 39,
                "text": "234 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 257,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-23 – Values of variables m and n for ctxIdx from 338 to 398"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "338 15 6 14 11 19 −6 17 −13 369 32 −26 31 −4 40 −37 37 −17"
            },
            {
                "line_number": 9,
                "text": "339 6 19 11 14 18 −6 16 −9 370 37 −30 27 6 38 −30 32 1"
            },
            {
                "line_number": 10,
                "text": "340 7 16 9 11 14 0 17 −12 371 44 −32 34 8 46 −33 34 15"
            },
            {
                "line_number": 11,
                "text": "341 12 14 18 11 26 −12 27 −21 372 34 −18 30 10 42 −30 29 15"
            },
            {
                "line_number": 12,
                "text": "342 18 13 21 9 31 −16 37 −30 373 34 −15 24 22 40 −24 24 25"
            },
            {
                "line_number": 13,
                "text": "343 13 11 23 −2 33 −25 41 −40 374 40 −15 33 19 49 −29 34 22"
            },
            {
                "line_number": 14,
                "text": "344 13 15 32 −15 33 −22 42 −41 375 33 −7 22 32 38 −12 31 16"
            },
            {
                "line_number": 15,
                "text": "345 15 16 32 −15 37 −28 48 −47 376 35 −5 26 31 40 −10 35 18"
            },
            {
                "line_number": 16,
                "text": "346 12 23 34 −21 39 −30 39 −32 377 33 0 21 41 38 −3 31 28"
            },
            {
                "line_number": 17,
                "text": "347 13 23 39 −23 42 −30 46 −40 378 38 2 26 44 46 −5 33 41"
            },
            {
                "line_number": 18,
                "text": "348 15 20 42 −33 47 −42 52 −51 379 33 13 23 47 31 20 36 28"
            },
            {
                "line_number": 19,
                "text": "349 14 26 41 −31 45 −36 46 −41 380 23 35 16 65 29 30 27 47"
            },
            {
                "line_number": 20,
                "text": "350 14 44 46 −28 49 −34 52 −39 381 13 58 14 71 25 44 21 62"
            },
            {
                "line_number": 21,
                "text": "351 17 40 38 −12 41 −17 43 −19 382 29 −3 8 60 12 48 18 31"
            },
            {
                "line_number": 22,
                "text": "352 17 47 21 29 32 9 32 11 383 26 0 6 63 11 49 19 26"
            },
            {
                "line_number": 23,
                "text": "353 24 17 45 −24 69 −71 61 −55 384 22 30 17 65 26 45 36 24"
            },
            {
                "line_number": 24,
                "text": "354 21 21 53 −45 63 −63 56 −46 385 31 −7 21 24 22 22 24 23"
            },
            {
                "line_number": 25,
                "text": "355 25 22 48 −26 66 −64 62 −50 386 35 −15 23 20 23 22 27 16"
            },
            {
                "line_number": 26,
                "text": "356 31 27 65 −43 77 −74 81 −67 387 34 −3 26 23 27 21 24 30"
            },
            {
                "line_number": 27,
                "text": "357 22 29 43 −19 54 −39 45 −20 388 34 3 27 32 33 20 31 29"
            },
            {
                "line_number": 28,
                "text": "358 19 35 39 −10 52 −35 35 −2 389 36 −1 28 23 26 28 22 41"
            },
            {
                "line_number": 29,
                "text": "359 14 50 30 9 41 −10 28 15 390 34 5 28 24 30 24 22 42"
            },
            {
                "line_number": 30,
                "text": "360 10 57 18 26 36 0 34 1 391 32 11 23 40 27 34 16 60"
            },
            {
                "line_number": 31,
                "text": "361 7 63 20 27 40 −1 39 1 392 35 5 24 32 18 42 15 52"
            },
            {
                "line_number": 32,
                "text": "362 −2 77 0 57 30 14 30 17 393 34 12 28 29 25 39 14 60"
            },
            {
                "line_number": 33,
                "text": "363 −4 82 −14 82 28 26 20 38 394 39 11 23 42 18 50 3 78"
            },
            {
                "line_number": 34,
                "text": "364 −3 94 −5 75 23 37 18 45 395 30 29 19 57 12 70 −16 123"
            },
            {
                "line_number": 35,
                "text": "365 9 69 −19 97 12 55 15 54 396 34 26 22 53 21 54 21 53"
            },
            {
                "line_number": 36,
                "text": "366 −12 109 −35 125 11 65 0 79 397 29 39 22 61 14 71 22 56"
            },
            {
                "line_number": 37,
                "text": "367 36 −35 27 0 37 −33 36 −16 398 19 66 11 86 11 83 25 61"
            },
            {
                "line_number": 38,
                "text": "368 36 −34 28 0 39 −36 37 −14"
            },
            {
                "line_number": 39,
                "text": "Rec. ITU-T H.264 (06/2019) 235"
            }
        ]
    },
    {
        "page_number": 258,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-24 – Values of variables m and n for ctxIdx from 402 to 459"
            },
            {
                "line_number": 2,
                "text": "I Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "402 −17 120 −4 79 −5 85 −3 78 431 −2 55 −12 56 −9 57 −12 59"
            },
            {
                "line_number": 9,
                "text": "403 −20 112 −7 71 −6 81 −8 74 432 0 61 −6 60 −6 63 −8 63"
            },
            {
                "line_number": 10,
                "text": "404 −18 114 −5 69 −10 77 −9 72 433 1 64 −5 62 −4 65 −9 67"
            },
            {
                "line_number": 11,
                "text": "405 −11 85 −9 70 −7 81 −10 72 434 0 68 −8 66 −4 67 −6 68"
            },
            {
                "line_number": 12,
                "text": "406 −15 92 −8 66 −17 80 −18 75 435 −9 92 −8 76 −7 82 −10 79"
            },
            {
                "line_number": 13,
                "text": "407 −14 89 −10 68 −18 73 −12 71 436 −14 106 −5 85 −3 81 −3 78"
            },
            {
                "line_number": 14,
                "text": "408 −26 71 −19 73 −4 74 −11 63 437 −13 97 −6 81 −3 76 −8 74"
            },
            {
                "line_number": 15,
                "text": "409 −15 81 −12 69 −10 83 −5 70 438 −15 90 −10 77 −7 72 −9 72"
            },
            {
                "line_number": 16,
                "text": "410 −14 80 −16 70 −9 71 −17 75 439 −12 90 −7 81 −6 78 −10 72"
            },
            {
                "line_number": 17,
                "text": "411 0 68 −15 67 −9 67 −14 72 440 −18 88 −17 80 −12 72 −18 75"
            },
            {
                "line_number": 18,
                "text": "412 −14 70 −20 62 −1 61 −16 67 441 −10 73 −18 73 −14 68 −12 71"
            },
            {
                "line_number": 19,
                "text": "413 −24 56 −19 70 −8 66 −8 53 442 −9 79 −4 74 −3 70 −11 63"
            },
            {
                "line_number": 20,
                "text": "414 −23 68 −16 66 −14 66 −14 59 443 −14 86 −10 83 −6 76 −5 70"
            },
            {
                "line_number": 21,
                "text": "415 −24 50 −22 65 0 59 −9 52 444 −10 73 −9 71 −5 66 −17 75"
            },
            {
                "line_number": 22,
                "text": "416 −11 74 −20 63 2 59 −11 68 445 −10 70 −9 67 −5 62 −14 72"
            },
            {
                "line_number": 23,
                "text": "417 23 −13 9 −2 17 −10 9 −2 446 −10 69 −1 61 0 57 −16 67"
            },
            {
                "line_number": 24,
                "text": "418 26 −13 26 −9 32 −13 30 −10 447 −5 66 −8 66 −4 61 −8 53"
            },
            {
                "line_number": 25,
                "text": "419 40 −15 33 −9 42 −9 31 −4 448 −9 64 −14 66 −9 60 −14 59"
            },
            {
                "line_number": 26,
                "text": "420 49 −14 39 −7 49 −5 33 −1 449 −5 58 0 59 1 54 −9 52"
            },
            {
                "line_number": 27,
                "text": "421 44 3 41 −2 53 0 33 7 450 2 59 2 59 2 58 −11 68"
            },
            {
                "line_number": 28,
                "text": "422 45 6 45 3 64 3 31 12 451 21 −10 21 −13 17 −10 9 −2"
            },
            {
                "line_number": 29,
                "text": "423 44 34 49 9 68 10 37 23 452 24 −11 33 −14 32 −13 30 −10"
            },
            {
                "line_number": 30,
                "text": "424 33 54 45 27 66 27 31 38 453 28 −8 39 −7 42 −9 31 −4"
            },
            {
                "line_number": 31,
                "text": "425 19 82 36 59 47 57 20 64 454 28 −1 46 −2 49 −5 33 −1"
            },
            {
                "line_number": 32,
                "text": "426 −3 75 −6 66 −5 71 −9 71 455 29 3 51 2 53 0 33 7"
            },
            {
                "line_number": 33,
                "text": "427 −1 23 −7 35 0 24 −7 37 456 29 9 60 6 64 3 31 12"
            },
            {
                "line_number": 34,
                "text": "428 1 34 −7 42 −1 36 −8 44 457 35 20 61 17 68 10 37 23"
            },
            {
                "line_number": 35,
                "text": "429 1 43 −8 45 −2 42 −11 49 458 29 36 55 34 66 27 31 38"
            },
            {
                "line_number": 36,
                "text": "430 0 54 −5 48 −2 52 −10 56 459 14 67 42 62 47 57 20 64"
            },
            {
                "line_number": 37,
                "text": "236 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 259,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-25 – Values of variables m and n for ctxIdx from 460 to 483"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "460 −17 123 −7 92 0 80 11 80 472 −17 123 −7 92 0 80 11 80"
            },
            {
                "line_number": 9,
                "text": "461 −12 115 −5 89 −5 89 5 76 473 −12 115 −5 89 −5 89 5 76"
            },
            {
                "line_number": 10,
                "text": "462 −16 122 −7 96 −7 94 2 84 474 −16 122 −7 96 −7 94 2 84"
            },
            {
                "line_number": 11,
                "text": "463 −11 115 −13 108 −4 92 5 78 475 −11 115 −13 108 −4 92 5 78"
            },
            {
                "line_number": 12,
                "text": "464 −12 63 −3 46 0 39 −6 55 476 −12 63 −3 46 0 39 −6 55"
            },
            {
                "line_number": 13,
                "text": "465 −2 68 −1 65 0 65 4 61 477 −2 68 −1 65 0 65 4 61"
            },
            {
                "line_number": 14,
                "text": "466 −15 84 −1 57 −15 84 −14 83 478 −15 84 −1 57 −15 84 −14 83"
            },
            {
                "line_number": 15,
                "text": "467 −13 104 −9 93 −35 127 −37 127 479 −13 104 −9 93 −35 127 −37 127"
            },
            {
                "line_number": 16,
                "text": "468 −3 70 −3 74 −2 73 −5 79 480 −3 70 −3 74 −2 73 −5 79"
            },
            {
                "line_number": 17,
                "text": "469 −8 93 −9 92 −12 104 −11 104 481 −8 93 −9 92 −12 104 −11 104"
            },
            {
                "line_number": 18,
                "text": "470 −10 90 −8 87 −9 91 −11 91 482 −10 90 −8 87 −9 91 −11 91"
            },
            {
                "line_number": 19,
                "text": "471 −30 127 −23 126 −31 127 −30 127 483 −30 127 −23 126 −31 127 −30 127"
            },
            {
                "line_number": 20,
                "text": "Table 9-26 – Values of variables m and n for ctxIdx from 484 to 571"
            },
            {
                "line_number": 21,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 22,
                "text": "I and SI"
            },
            {
                "line_number": 23,
                "text": "slices"
            },
            {
                "line_number": 24,
                "text": "slices"
            },
            {
                "line_number": 25,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 26,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 27,
                "text": "484 −7 93 −2 85 −13 103 −4 86 528 −7 93 −2 85 −13 103 −4 86"
            },
            {
                "line_number": 28,
                "text": "485 −11 87 −6 78 −13 91 −12 88 529 −11 87 −6 78 −13 91 −12 88"
            },
            {
                "line_number": 29,
                "text": "486 −3 77 −1 75 −9 89 −5 82 530 −3 77 −1 75 −9 89 −5 82"
            },
            {
                "line_number": 30,
                "text": "487 −5 71 −7 77 −14 92 −3 72 531 −5 71 −7 77 −14 92 −3 72"
            },
            {
                "line_number": 31,
                "text": "488 −4 63 2 54 −8 76 −4 67 532 −4 63 2 54 −8 76 −4 67"
            },
            {
                "line_number": 32,
                "text": "489 −4 68 5 50 −12 87 −8 72 533 −4 68 5 50 −12 87 −8 72"
            },
            {
                "line_number": 33,
                "text": "490 −12 84 −3 68 −23 110 −16 89 534 −12 84 −3 68 −23 110 −16 89"
            },
            {
                "line_number": 34,
                "text": "491 −7 62 1 50 −24 105 −9 69 535 −7 62 1 50 −24 105 −9 69"
            },
            {
                "line_number": 35,
                "text": "492 −7 65 6 42 −10 78 −1 59 536 −7 65 6 42 −10 78 −1 59"
            },
            {
                "line_number": 36,
                "text": "493 8 61 −4 81 −20 112 5 66 537 8 61 −4 81 −20 112 5 66"
            },
            {
                "line_number": 37,
                "text": "494 5 56 1 63 −17 99 4 57 538 5 56 1 63 −17 99 4 57"
            },
            {
                "line_number": 38,
                "text": "495 −2 66 −4 70 −78 127 −4 71 539 −2 66 −4 70 −78 127 −4 71"
            },
            {
                "line_number": 39,
                "text": "496 1 64 0 67 −70 127 −2 71 540 1 64 0 67 −70 127 −2 71"
            },
            {
                "line_number": 40,
                "text": "497 0 61 2 57 −50 127 2 58 641 0 61 2 57 −50 127 2 58"
            },
            {
                "line_number": 41,
                "text": "498 −2 78 −2 76 −46 127 −1 74 542 −2 78 −2 76 −46 127 −1 74"
            },
            {
                "line_number": 42,
                "text": "Rec. ITU-T H.264 (06/2019) 237"
            }
        ]
    },
    {
        "page_number": 260,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-26 – Values of variables m and n for ctxIdx from 484 to 571"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "499 1 50 11 35 −4 66 −4 44 543 1 50 11 35 −4 66 −4 44"
            },
            {
                "line_number": 9,
                "text": "500 7 52 4 64 −5 78 −1 69 544 7 52 4 64 −5 78 −1 69"
            },
            {
                "line_number": 10,
                "text": "501 10 35 1 61 −4 71 0 62 545 10 35 1 61 −4 71 0 62"
            },
            {
                "line_number": 11,
                "text": "502 0 44 11 35 −8 72 −7 51 546 0 44 11 35 −8 72 −7 51"
            },
            {
                "line_number": 12,
                "text": "503 11 38 18 25 2 59 −4 47 547 11 38 18 25 2 59 −4 47"
            },
            {
                "line_number": 13,
                "text": "504 1 45 12 24 −1 55 −6 42 548 1 45 12 24 −1 55 −6 42"
            },
            {
                "line_number": 14,
                "text": "505 0 46 13 29 −7 70 −3 41 549 0 46 13 29 −7 70 −3 41"
            },
            {
                "line_number": 15,
                "text": "506 5 44 13 36 −6 75 −6 53 550 5 44 13 36 −6 75 −6 53"
            },
            {
                "line_number": 16,
                "text": "507 31 17 −10 93 −8 89 8 76 551 31 17 −10 93 −8 89 8 76"
            },
            {
                "line_number": 17,
                "text": "508 1 51 −7 73 −34 119 −9 78 552 1 51 −7 73 −34 119 −9 78"
            },
            {
                "line_number": 18,
                "text": "509 7 50 −2 73 −3 75 −11 83 553 7 50 −2 73 −3 75 −11 83"
            },
            {
                "line_number": 19,
                "text": "510 28 19 13 46 32 20 9 52 554 28 19 13 46 32 20 9 52"
            },
            {
                "line_number": 20,
                "text": "511 16 33 9 49 30 22 0 67 555 16 33 9 49 30 22 0 67"
            },
            {
                "line_number": 21,
                "text": "512 14 62 −7 100 −44 127 −5 90 556 14 62 −7 100 −44 127 −5 90"
            },
            {
                "line_number": 22,
                "text": "513 −13 108 9 53 0 54 1 67 557 −13 108 9 53 0 54 1 67"
            },
            {
                "line_number": 23,
                "text": "514 −15 100 2 53 −5 61 −15 72 558 −15 100 2 53 −5 61 −15 72"
            },
            {
                "line_number": 24,
                "text": "515 −13 101 5 53 0 58 −5 75 559 −13 101 5 53 0 58 −5 75"
            },
            {
                "line_number": 25,
                "text": "516 −13 91 −2 61 −1 60 −8 80 560 −13 91 −2 61 −1 60 −8 80"
            },
            {
                "line_number": 26,
                "text": "517 −12 94 0 56 −3 61 −21 83 561 −12 94 0 56 −3 61 −21 83"
            },
            {
                "line_number": 27,
                "text": "518 −10 88 0 56 −8 67 −21 64 562 −10 88 0 56 −8 67 −21 64"
            },
            {
                "line_number": 28,
                "text": "519 −16 84 −13 63 −25 84 −13 31 563 −16 84 −13 63 −25 84 −13 31"
            },
            {
                "line_number": 29,
                "text": "520 −10 86 −5 60 −14 74 −25 64 564 −10 86 −5 60 −14 74 −25 64"
            },
            {
                "line_number": 30,
                "text": "521 −7 83 −1 62 −5 65 −29 94 565 −7 83 −1 62 −5 65 −29 94"
            },
            {
                "line_number": 31,
                "text": "522 −13 87 4 57 5 52 9 75 566 −13 87 4 57 5 52 9 75"
            },
            {
                "line_number": 32,
                "text": "523 −19 94 −6 69 2 57 17 63 567 −19 94 −6 69 2 57 17 63"
            },
            {
                "line_number": 33,
                "text": "524 1 70 4 57 0 61 −8 74 568 1 70 4 57 0 61 −8 74"
            },
            {
                "line_number": 34,
                "text": "525 0 72 14 39 −9 69 −5 35 569 0 72 14 39 −9 69 −5 35"
            },
            {
                "line_number": 35,
                "text": "526 −5 74 4 51 −11 70 −2 27 570 −5 74 4 51 −11 70 −2 27"
            },
            {
                "line_number": 36,
                "text": "527 18 59 13 68 18 55 13 91 571 18 59 13 68 18 55 13 91"
            },
            {
                "line_number": 37,
                "text": "238 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 261,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-27 – Values of variables m and n for ctxIdx from 572 to 659"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "572 24 0 11 28 4 45 4 39 616 24 0 11 28 4 45 4 39"
            },
            {
                "line_number": 9,
                "text": "573 15 9 2 40 10 28 0 42 617 15 9 2 40 10 28 0 42"
            },
            {
                "line_number": 10,
                "text": "574 8 25 3 44 10 31 7 34 618 8 25 3 44 10 31 7 34"
            },
            {
                "line_number": 11,
                "text": "575 13 18 0 49 33 −11 11 29 619 13 18 0 49 33 −11 11 29"
            },
            {
                "line_number": 12,
                "text": "576 15 9 0 46 52 −43 8 31 620 15 9 0 46 52 −43 8 31"
            },
            {
                "line_number": 13,
                "text": "577 13 19 2 44 18 15 6 37 621 13 19 2 44 18 15 6 37"
            },
            {
                "line_number": 14,
                "text": "578 10 37 2 51 28 0 7 42 622 10 37 2 51 28 0 7 42"
            },
            {
                "line_number": 15,
                "text": "579 12 18 0 47 35 −22 3 40 623 12 18 0 47 35 −22 3 40"
            },
            {
                "line_number": 16,
                "text": "580 6 29 4 39 38 −25 8 33 624 6 29 4 39 38 −25 8 33"
            },
            {
                "line_number": 17,
                "text": "581 20 33 2 62 34 0 13 43 625 20 33 2 62 34 0 13 43"
            },
            {
                "line_number": 18,
                "text": "582 15 30 6 46 39 −18 13 36 626 15 30 6 46 39 −18 13 36"
            },
            {
                "line_number": 19,
                "text": "583 4 45 0 54 32 −12 4 47 627 4 45 0 54 32 −12 4 47"
            },
            {
                "line_number": 20,
                "text": "584 1 58 3 54 102 −94 3 55 628 1 58 3 54 102 −94 3 55"
            },
            {
                "line_number": 21,
                "text": "585 0 62 2 58 0 0 2 58 629 0 62 2 58 0 0 2 58"
            },
            {
                "line_number": 22,
                "text": "586 7 61 4 63 56 −15 6 60 630 7 61 4 63 56 −15 6 60"
            },
            {
                "line_number": 23,
                "text": "587 12 38 6 51 33 −4 8 44 631 12 38 6 51 33 −4 8 44"
            },
            {
                "line_number": 24,
                "text": "588 11 45 6 57 29 10 11 44 632 11 45 6 57 29 10 11 44"
            },
            {
                "line_number": 25,
                "text": "589 15 39 7 53 37 −5 14 42 633 15 39 7 53 37 −5 14 42"
            },
            {
                "line_number": 26,
                "text": "590 11 42 6 52 51 −29 7 48 634 11 42 6 52 51 −29 7 48"
            },
            {
                "line_number": 27,
                "text": "591 13 44 6 55 39 −9 4 56 635 13 44 6 55 39 −9 4 56"
            },
            {
                "line_number": 28,
                "text": "592 16 45 11 45 52 −34 4 52 636 16 45 11 45 52 −34 4 52"
            },
            {
                "line_number": 29,
                "text": "593 12 41 14 36 69 −58 13 37 637 12 41 14 36 69 −58 13 37"
            },
            {
                "line_number": 30,
                "text": "594 10 49 8 53 67 −63 9 49 638 10 49 8 53 67 −63 9 49"
            },
            {
                "line_number": 31,
                "text": "595 30 34 −1 82 44 −5 19 58 639 30 34 −1 82 44 −5 19 58"
            },
            {
                "line_number": 32,
                "text": "596 18 42 7 55 32 7 10 48 640 18 42 7 55 32 7 10 48"
            },
            {
                "line_number": 33,
                "text": "597 10 55 −3 78 55 −29 12 45 641 10 55 −3 78 55 −29 12 45"
            },
            {
                "line_number": 34,
                "text": "598 17 51 15 46 32 1 0 69 642 17 51 15 46 32 1 0 69"
            },
            {
                "line_number": 35,
                "text": "599 17 46 22 31 0 0 20 33 643 17 46 22 31 0 0 20 33"
            },
            {
                "line_number": 36,
                "text": "600 0 89 −1 84 27 36 8 63 644 0 89 −1 84 27 36 8 63"
            },
            {
                "line_number": 37,
                "text": "601 26 −19 25 7 33 −25 35 −18 645 26 −19 25 7 33 −25 35 −18"
            },
            {
                "line_number": 38,
                "text": "602 22 −17 30 −7 34 −30 33 −25 646 22 −17 30 −7 34 −30 33 −25"
            },
            {
                "line_number": 39,
                "text": "Rec. ITU-T H.264 (06/2019) 239"
            }
        ]
    },
    {
        "page_number": 262,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-27 – Values of variables m and n for ctxIdx from 572 to 659"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "603 26 −17 28 3 36 −28 28 −3 647 26 −17 28 3 36 −28 28 −3"
            },
            {
                "line_number": 9,
                "text": "604 30 −25 28 4 38 −28 24 10 648 30 −25 28 4 38 −28 24 10"
            },
            {
                "line_number": 10,
                "text": "605 28 −20 32 0 38 −27 27 0 649 28 −20 32 0 38 −27 27 0"
            },
            {
                "line_number": 11,
                "text": "606 33 −23 34 −1 34 −18 34 −14 650 33 −23 34 −1 34 −18 34 −14"
            },
            {
                "line_number": 12,
                "text": "607 37 −27 30 6 35 −16 52 −44 651 37 −27 30 6 35 −16 52 −44"
            },
            {
                "line_number": 13,
                "text": "608 33 −23 30 6 34 −14 39 −24 652 33 −23 30 6 34 −14 39 −24"
            },
            {
                "line_number": 14,
                "text": "609 40 −28 32 9 32 −8 19 17 653 40 −28 32 9 32 −8 19 17"
            },
            {
                "line_number": 15,
                "text": "610 38 −17 31 19 37 −6 31 25 654 38 −17 31 19 37 −6 31 25"
            },
            {
                "line_number": 16,
                "text": "611 33 −11 26 27 35 0 36 29 655 33 −11 26 27 35 0 36 29"
            },
            {
                "line_number": 17,
                "text": "612 40 −15 26 30 30 10 24 33 656 40 −15 26 30 30 10 24 33"
            },
            {
                "line_number": 18,
                "text": "613 41 −6 37 20 28 18 34 15 657 41 −6 37 20 28 18 34 15"
            },
            {
                "line_number": 19,
                "text": "614 38 1 28 34 26 25 30 20 658 38 1 28 34 26 25 30 20"
            },
            {
                "line_number": 20,
                "text": "615 41 17 17 70 29 41 22 73 659 41 17 17 70 29 41 22 73"
            },
            {
                "line_number": 21,
                "text": "240 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 263,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-28 – Values of variables m and n for ctxIdx from 660 to 717"
            },
            {
                "line_number": 2,
                "text": "I Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "660 −17 120 −4 79 −5 85 −3 78 689 2 59 2 59 2 58 −11 68"
            },
            {
                "line_number": 9,
                "text": "661 −20 112 −7 71 −6 81 −8 74 690 23 −13 9 −2 17 −10 9 −2"
            },
            {
                "line_number": 10,
                "text": "662 −18 114 −5 69 −10 77 −9 72 691 26 −13 26 −9 32 −13 30 −10"
            },
            {
                "line_number": 11,
                "text": "663 −11 85 −9 70 −7 81 −10 72 692 40 −15 33 −9 42 −9 31 −4"
            },
            {
                "line_number": 12,
                "text": "664 −15 92 −8 66 −17 80 −18 75 693 49 −14 39 −7 49 −5 33 −1"
            },
            {
                "line_number": 13,
                "text": "665 −14 89 −10 68 −18 73 −12 71 694 44 3 41 −2 53 0 33 7"
            },
            {
                "line_number": 14,
                "text": "666 −26 71 −19 73 −4 74 −11 63 695 45 6 45 3 64 3 31 12"
            },
            {
                "line_number": 15,
                "text": "667 −15 81 −12 69 −10 83 −5 70 696 44 34 49 9 68 10 37 23"
            },
            {
                "line_number": 16,
                "text": "668 −14 80 −16 70 −9 71 −17 75 697 33 54 45 27 66 27 31 38"
            },
            {
                "line_number": 17,
                "text": "669 0 68 −15 67 −9 67 −14 72 698 19 82 36 59 47 57 20 64"
            },
            {
                "line_number": 18,
                "text": "670 −14 70 −20 62 −1 61 −16 67 699 21 −10 21 −13 17 −10 9 −2"
            },
            {
                "line_number": 19,
                "text": "671 −24 56 −19 70 −8 66 −8 53 700 24 −11 33 −14 32 −13 30 −10"
            },
            {
                "line_number": 20,
                "text": "672 −23 68 −16 66 −14 66 −14 59 701 28 −8 39 −7 42 −9 31 −4"
            },
            {
                "line_number": 21,
                "text": "673 −24 50 −22 65 0 59 −9 52 702 28 −1 46 −2 49 −5 33 −1"
            },
            {
                "line_number": 22,
                "text": "674 −11 74 −20 63 2 59 −11 68 703 29 3 51 2 53 0 33 7"
            },
            {
                "line_number": 23,
                "text": "675 −14 106 −5 85 −3 81 −3 78 704 29 9 60 6 64 3 31 12"
            },
            {
                "line_number": 24,
                "text": "676 −13 97 −6 81 −3 76 −8 74 705 35 20 61 17 68 10 37 23"
            },
            {
                "line_number": 25,
                "text": "677 −15 90 −10 77 −7 72 −9 72 706 29 36 55 34 66 27 31 38"
            },
            {
                "line_number": 26,
                "text": "678 −12 90 −7 81 −6 78 −10 72 707 14 67 42 62 47 57 20 64"
            },
            {
                "line_number": 27,
                "text": "679 −18 88 -17 80 −12 72 −18 75 708 −3 75 −6 66 −5 71 −9 71"
            },
            {
                "line_number": 28,
                "text": "680 −10 73 −18 73 −14 68 −12 71 709 −1 23 −7 35 0 24 −7 37"
            },
            {
                "line_number": 29,
                "text": "681 −9 79 −4 74 −3 70 −11 63 710 1 34 −7 42 −1 36 −8 44"
            },
            {
                "line_number": 30,
                "text": "682 −14 86 −10 83 −6 76 −5 70 711 1 43 −8 45 −2 42 −11 49"
            },
            {
                "line_number": 31,
                "text": "683 −10 73 −9 71 −5 66 −17 75 712 0 54 −5 48 −2 52 −10 56"
            },
            {
                "line_number": 32,
                "text": "684 −10 70 −9 67 −5 62 −14 72 713 −2 55 −12 56 −9 57 −12 59"
            },
            {
                "line_number": 33,
                "text": "685 −10 69 −1 61 0 57 −16 67 714 0 61 −6 60 −6 63 −8 63"
            },
            {
                "line_number": 34,
                "text": "686 −5 66 −8 66 −4 61 −8 53 715 1 64 −5 62 −4 65 −9 67"
            },
            {
                "line_number": 35,
                "text": "687 −9 64 −14 66 −9 60 −14 59 716 0 68 −8 66 −4 67 −6 68"
            },
            {
                "line_number": 36,
                "text": "688 −5 58 0 59 1 54 −9 52 717 −9 92 −8 76 −7 82 −10 79"
            },
            {
                "line_number": 37,
                "text": "Rec. ITU-T H.264 (06/2019) 241"
            }
        ]
    },
    {
        "page_number": 264,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-29 – Values of variables m and n for ctxIdx from 718 to 775"
            },
            {
                "line_number": 2,
                "text": "I Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "718 −17 120 −4 79 −5 85 −3 78 747 2 59 2 59 2 58 −11 68"
            },
            {
                "line_number": 9,
                "text": "719 −20 112 −7 71 −6 81 −8 74 748 23 −13 9 −2 17 −10 9 −2"
            },
            {
                "line_number": 10,
                "text": "720 −18 114 −5 69 −10 77 −9 72 749 26 −13 26 −9 32 −13 30 −10"
            },
            {
                "line_number": 11,
                "text": "721 −11 85 −9 70 −7 81 −10 72 750 40 −15 33 −9 42 −9 31 −4"
            },
            {
                "line_number": 12,
                "text": "722 −15 92 −8 66 −17 80 −18 75 751 49 −14 39 −7 49 −5 33 −1"
            },
            {
                "line_number": 13,
                "text": "723 −14 89 −10 68 −18 73 −12 71 752 44 3 41 −2 53 0 33 7"
            },
            {
                "line_number": 14,
                "text": "724 −26 71 −19 73 −4 74 −11 63 753 45 6 45 3 64 3 31 12"
            },
            {
                "line_number": 15,
                "text": "725 −15 81 −12 69 −10 83 −5 70 754 44 34 49 9 68 10 37 23"
            },
            {
                "line_number": 16,
                "text": "726 −14 80 −16 70 −9 71 −17 75 755 33 54 45 27 66 27 31 38"
            },
            {
                "line_number": 17,
                "text": "727 0 68 −15 67 −9 67 −14 72 756 19 82 36 59 47 57 20 64"
            },
            {
                "line_number": 18,
                "text": "728 −14 70 −20 62 −1 61 −16 67 757 21 −10 21 −13 17 −10 9 −2"
            },
            {
                "line_number": 19,
                "text": "729 −24 56 −19 70 −8 66 −8 53 758 24 −11 33 −14 32 −13 30 −10"
            },
            {
                "line_number": 20,
                "text": "730 −23 68 −16 66 −14 66 −14 59 759 28 −8 39 −7 42 −9 31 −4"
            },
            {
                "line_number": 21,
                "text": "731 −24 50 −22 65 0 59 −9 52 760 28 −1 46 −2 49 −5 33 −1"
            },
            {
                "line_number": 22,
                "text": "732 −11 74 −20 63 2 59 −11 68 761 29 3 51 2 53 0 33 7"
            },
            {
                "line_number": 23,
                "text": "733 −14 106 −5 85 −3 81 −3 78 762 29 9 60 6 64 3 31 12"
            },
            {
                "line_number": 24,
                "text": "734 −13 97 −6 81 −3 76 −8 74 763 35 20 61 17 68 10 37 23"
            },
            {
                "line_number": 25,
                "text": "735 −15 90 −10 77 −7 72 −9 72 764 29 36 55 34 66 27 31 38"
            },
            {
                "line_number": 26,
                "text": "736 −12 90 −7 81 −6 78 −10 72 765 14 67 42 62 47 57 20 64"
            },
            {
                "line_number": 27,
                "text": "737 −18 88 −17 80 −12 72 −18 75 766 −3 75 −6 66 −5 71 −9 71"
            },
            {
                "line_number": 28,
                "text": "738 −10 73 −18 73 −14 68 −12 71 767 −1 23 −7 35 0 24 −7 37"
            },
            {
                "line_number": 29,
                "text": "739 −9 79 −4 74 −3 70 −11 63 768 1 34 −7 42 −1 36 −8 44"
            },
            {
                "line_number": 30,
                "text": "740 −14 86 −10 83 −6 76 −5 70 769 1 43 −8 45 −2 42 −11 49"
            },
            {
                "line_number": 31,
                "text": "741 −10 73 −9 71 −5 66 −17 75 770 0 54 −5 48 −2 52 −10 56"
            },
            {
                "line_number": 32,
                "text": "742 −10 70 −9 67 −5 62 −14 72 771 −2 55 −12 56 −9 57 −12 59"
            },
            {
                "line_number": 33,
                "text": "743 −10 69 −1 61 0 57 −16 67 772 0 61 −6 60 −6 63 −8 63"
            },
            {
                "line_number": 34,
                "text": "744 −5 66 −8 66 −4 61 −8 53 773 1 64 −5 62 −4 65 −9 67"
            },
            {
                "line_number": 35,
                "text": "745 −9 64 −14 66 −9 60 −14 59 774 0 68 −8 66 −4 67 −6 68"
            },
            {
                "line_number": 36,
                "text": "746 −5 58 0 59 1 54 −9 52 775 −9 92 −8 76 −7 82 −10 79"
            },
            {
                "line_number": 37,
                "text": "242 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 265,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-30 – Values of variables m and n for ctxIdx from 776 to 863"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "776 −6 93 −13 106 −21 126 −22 127 820 −6 93 −13 106 −21 126 −22 127"
            },
            {
                "line_number": 9,
                "text": "777 −6 84 −16 106 −23 124 −25 127 821 −6 84 −16 106 −23 124 −25 127"
            },
            {
                "line_number": 10,
                "text": "778 −8 79 −10 87 −20 110 −25 120 822 −8 79 −10 87 −20 110 −25 120"
            },
            {
                "line_number": 11,
                "text": "779 0 66 −21 114 −26 126 −27 127 823 0 66 −21 114 −26 126 −27 127"
            },
            {
                "line_number": 12,
                "text": "780 −1 71 −18 110 −25 124 −19 114 824 −1 71 −18 110 −25 124 −19 114"
            },
            {
                "line_number": 13,
                "text": "781 0 62 −14 98 −17 105 −23 117 825 0 62 −14 98 −17 105 −23 117"
            },
            {
                "line_number": 14,
                "text": "782 −2 60 −22 110 −27 121 −25 118 826 −2 60 −22 110 −27 121 −25 118"
            },
            {
                "line_number": 15,
                "text": "783 −2 59 −21 106 −27 117 −26 117 827 −2 59 −21 106 −27 117 −26 117"
            },
            {
                "line_number": 16,
                "text": "784 −5 75 −18 103 −17 102 −24 113 828 −5 75 −18 103 −17 102 −24 113"
            },
            {
                "line_number": 17,
                "text": "785 −3 62 −21 107 −26 117 −28 118 829 −3 62 −21 107 −26 117 −28 118"
            },
            {
                "line_number": 18,
                "text": "786 −4 58 −23 108 −27 116 −31 120 830 −4 58 −23 108 −27 116 −31 120"
            },
            {
                "line_number": 19,
                "text": "787 −9 66 −26 112 −33 122 −37 124 831 −9 66 −26 112 −33 122 −37 124"
            },
            {
                "line_number": 20,
                "text": "788 −1 79 −10 96 −10 95 −10 94 832 −1 79 −10 96 −10 95 −10 94"
            },
            {
                "line_number": 21,
                "text": "789 0 71 −12 95 −14 100 −15 102 833 0 71 −12 95 −14 100 −15 102"
            },
            {
                "line_number": 22,
                "text": "790 3 68 −5 91 −8 95 −10 99 834 3 68 −5 91 −8 95 −10 99"
            },
            {
                "line_number": 23,
                "text": "791 10 44 −9 93 −17 111 −13 106 835 10 44 −9 93 −17 111 −13 106"
            },
            {
                "line_number": 24,
                "text": "792 −7 62 −22 94 −28 114 −50 127 836 −7 62 −22 94 −28 114 −50 127"
            },
            {
                "line_number": 25,
                "text": "793 15 36 −5 86 −6 89 −5 92 837 15 36 −5 86 −6 89 −5 92"
            },
            {
                "line_number": 26,
                "text": "794 14 40 9 67 −2 80 17 57 838 14 40 9 67 −2 80 17 57"
            },
            {
                "line_number": 27,
                "text": "795 16 27 −4 80 −4 82 −5 86 839 16 27 −4 80 −4 82 −5 86"
            },
            {
                "line_number": 28,
                "text": "796 12 29 −10 85 −9 85 −13 94 840 12 29 −10 85 −9 85 −13 94"
            },
            {
                "line_number": 29,
                "text": "797 1 44 −1 70 −8 81 −12 91 841 1 44 −1 70 −8 81 −12 91"
            },
            {
                "line_number": 30,
                "text": "798 20 36 7 60 −1 72 −2 77 842 20 36 7 60 −1 72 −2 77"
            },
            {
                "line_number": 31,
                "text": "799 18 32 9 58 5 64 0 71 843 18 32 9 58 5 64 0 71"
            },
            {
                "line_number": 32,
                "text": "800 5 42 5 61 1 67 −1 73 844 5 42 5 61 1 67 −1 73"
            },
            {
                "line_number": 33,
                "text": "801 1 48 12 50 9 56 4 64 845 1 48 12 50 9 56 4 64"
            },
            {
                "line_number": 34,
                "text": "802 10 62 15 50 0 69 −7 81 846 10 62 15 50 0 69 −7 81"
            },
            {
                "line_number": 35,
                "text": "803 17 46 18 49 1 69 5 64 847 17 46 18 49 1 69 5 64"
            },
            {
                "line_number": 36,
                "text": "804 9 64 17 54 7 69 15 57 848 9 64 17 54 7 69 15 57"
            },
            {
                "line_number": 37,
                "text": "805 −12 104 10 41 −7 69 1 67 849 −12 104 10 41 −7 69 1 67"
            },
            {
                "line_number": 38,
                "text": "806 −11 97 7 46 −6 67 0 68 850 −11 97 7 46 −6 67 0 68"
            },
            {
                "line_number": 39,
                "text": "Rec. ITU-T H.264 (06/2019) 243"
            }
        ]
    },
    {
        "page_number": 266,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-30 – Values of variables m and n for ctxIdx from 776 to 863"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "807 −16 96 −1 51 −16 77 −10 67 851 −16 96 −1 51 −16 77 −10 67"
            },
            {
                "line_number": 9,
                "text": "808 −7 88 7 49 −2 64 1 68 852 −7 88 7 49 −2 64 1 68"
            },
            {
                "line_number": 10,
                "text": "809 −8 85 8 52 2 61 0 77 853 −8 85 8 52 2 61 0 77"
            },
            {
                "line_number": 11,
                "text": "810 −7 85 9 41 −6 67 2 64 854 −7 85 9 41 −6 67 2 64"
            },
            {
                "line_number": 12,
                "text": "811 −9 85 6 47 −3 64 0 68 855 −9 85 6 47 −3 64 0 68"
            },
            {
                "line_number": 13,
                "text": "812 −13 88 2 55 2 57 −5 78 856 −13 88 2 55 2 57 −5 78"
            },
            {
                "line_number": 14,
                "text": "813 4 66 13 41 −3 65 7 55 857 4 66 13 41 −3 65 7 55"
            },
            {
                "line_number": 15,
                "text": "814 −3 77 10 44 −3 66 5 59 858 −3 77 10 44 −3 66 5 59"
            },
            {
                "line_number": 16,
                "text": "815 −3 76 6 50 0 62 2 65 859 −3 76 6 50 0 62 2 65"
            },
            {
                "line_number": 17,
                "text": "816 −6 76 5 53 9 51 14 54 860 −6 76 5 53 9 51 14 54"
            },
            {
                "line_number": 18,
                "text": "817 10 58 13 49 −1 66 15 44 861 10 58 13 49 −1 66 15 44"
            },
            {
                "line_number": 19,
                "text": "818 −1 76 4 63 −2 71 5 60 862 −1 76 4 63 −2 71 5 60"
            },
            {
                "line_number": 20,
                "text": "819 −1 83 6 64 −2 75 2 70 863 −1 83 6 64 −2 75 2 70"
            },
            {
                "line_number": 21,
                "text": "244 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 267,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-31 – Values of variables m and n for ctxIdx from 864 to 951"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "864 15 6 14 11 19 −6 17 −13 908 15 6 14 11 19 −6 17 −13"
            },
            {
                "line_number": 9,
                "text": "865 6 19 11 14 18 −6 16 −9 909 6 19 11 14 18 −6 16 −9"
            },
            {
                "line_number": 10,
                "text": "866 7 16 9 11 14 0 17 −12 910 7 16 9 11 14 0 17 −12"
            },
            {
                "line_number": 11,
                "text": "867 12 14 18 11 26 −12 27 −21 911 12 14 18 11 26 −12 27 −21"
            },
            {
                "line_number": 12,
                "text": "868 18 13 21 9 31 −16 37 −30 912 18 13 21 9 31 −16 37 −30"
            },
            {
                "line_number": 13,
                "text": "869 13 11 23 −2 33 −25 41 −40 913 13 11 23 −2 33 −25 41 −40"
            },
            {
                "line_number": 14,
                "text": "870 13 15 32 −15 33 −22 42 −41 914 13 15 32 −15 33 −22 42 −41"
            },
            {
                "line_number": 15,
                "text": "871 15 16 32 −15 37 −28 48 −47 915 15 16 32 −15 37 −28 48 −47"
            },
            {
                "line_number": 16,
                "text": "872 12 23 34 −21 39 −30 39 −32 916 12 23 34 −21 39 −30 39 −32"
            },
            {
                "line_number": 17,
                "text": "873 13 23 39 −23 42 −30 46 −40 917 13 23 39 −23 42 −30 46 −40"
            },
            {
                "line_number": 18,
                "text": "874 15 20 42 −33 47 −42 52 −51 918 15 20 42 −33 47 −42 52 −51"
            },
            {
                "line_number": 19,
                "text": "875 14 26 41 −31 45 −36 46 −41 919 14 26 41 −31 45 −36 46 −41"
            },
            {
                "line_number": 20,
                "text": "876 14 44 46 −28 49 −34 52 −39 920 14 44 46 −28 49 −34 52 −39"
            },
            {
                "line_number": 21,
                "text": "877 17 40 38 −12 41 −17 43 −19 921 17 40 38 −12 41 −17 43 −19"
            },
            {
                "line_number": 22,
                "text": "878 17 47 21 29 32 9 32 11 922 17 47 21 29 32 9 32 11"
            },
            {
                "line_number": 23,
                "text": "879 24 17 45 −24 69 −71 61 −55 923 24 17 45 −24 69 −71 61 −55"
            },
            {
                "line_number": 24,
                "text": "880 21 21 53 −45 63 −63 56 −46 924 21 21 53 −45 63 −63 56 −46"
            },
            {
                "line_number": 25,
                "text": "881 25 22 48 −26 66 −64 62 −50 925 25 22 48 −26 66 −64 62 −50"
            },
            {
                "line_number": 26,
                "text": "882 31 27 65 −43 77 −74 81 −67 926 31 27 65 −43 77 −74 81 −67"
            },
            {
                "line_number": 27,
                "text": "883 22 29 43 −19 54 −39 45 −20 927 22 29 43 −19 54 −39 45 −20"
            },
            {
                "line_number": 28,
                "text": "884 19 35 39 −10 52 −35 35 −2 928 19 35 39 −10 52 −35 35 −2"
            },
            {
                "line_number": 29,
                "text": "885 14 50 30 9 41 −10 28 15 929 14 50 30 9 41 −10 28 15"
            },
            {
                "line_number": 30,
                "text": "886 10 57 18 26 36 0 34 1 930 10 57 18 26 36 0 34 1"
            },
            {
                "line_number": 31,
                "text": "887 7 63 20 27 40 −1 39 1 931 7 63 20 27 40 −1 39 1"
            },
            {
                "line_number": 32,
                "text": "888 −2 77 0 57 30 14 30 17 932 −2 77 0 57 30 14 30 17"
            },
            {
                "line_number": 33,
                "text": "889 −4 82 −14 82 28 26 20 38 933 −4 82 −14 82 28 26 20 38"
            },
            {
                "line_number": 34,
                "text": "890 −3 94 −5 75 23 37 18 45 934 −3 94 −5 75 23 37 18 45"
            },
            {
                "line_number": 35,
                "text": "891 9 69 −19 97 12 55 15 54 935 9 69 −19 97 12 55 15 54"
            },
            {
                "line_number": 36,
                "text": "892 −12 109 −35 125 11 65 0 79 936 −12 109 −35 125 11 65 0 79"
            },
            {
                "line_number": 37,
                "text": "893 36 −35 27 0 37 −33 36 −16 937 36 −35 27 0 37 −33 36 −16"
            },
            {
                "line_number": 38,
                "text": "894 36 −34 28 0 39 −36 37 −14 938 36 −34 28 0 39 −36 37 −14"
            },
            {
                "line_number": 39,
                "text": "Rec. ITU-T H.264 (06/2019) 245"
            }
        ]
    },
    {
        "page_number": 268,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-31 – Values of variables m and n for ctxIdx from 864 to 951"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "895 32 −26 31 −4 40 −37 37 −17 939 32 −26 31 −4 40 −37 37 −17"
            },
            {
                "line_number": 9,
                "text": "896 37 −30 27 6 38 −30 32 1 940 37 −30 27 6 38 −30 32 1"
            },
            {
                "line_number": 10,
                "text": "897 44 −32 34 8 46 −33 34 15 941 44 −32 34 8 46 −33 34 15"
            },
            {
                "line_number": 11,
                "text": "898 34 −18 30 10 42 −30 29 15 942 34 −18 30 10 42 −30 29 15"
            },
            {
                "line_number": 12,
                "text": "899 34 −15 24 22 40 −24 24 25 943 34 −15 24 22 40 −24 24 25"
            },
            {
                "line_number": 13,
                "text": "900 40 −15 33 19 49 −29 34 22 944 40 −15 33 19 49 −29 34 22"
            },
            {
                "line_number": 14,
                "text": "901 33 −7 22 32 38 −12 31 16 945 33 −7 22 32 38 −12 31 16"
            },
            {
                "line_number": 15,
                "text": "902 35 −5 26 31 40 −10 35 18 946 35 −5 26 31 40 −10 35 18"
            },
            {
                "line_number": 16,
                "text": "903 33 0 21 41 38 −3 31 28 947 33 0 21 41 38 −3 31 28"
            },
            {
                "line_number": 17,
                "text": "904 38 2 26 44 46 −5 33 41 948 38 2 26 44 46 −5 33 41"
            },
            {
                "line_number": 18,
                "text": "905 33 13 23 47 31 20 36 28 949 33 13 23 47 31 20 36 28"
            },
            {
                "line_number": 19,
                "text": "906 23 35 16 65 29 30 27 47 950 23 35 16 65 29 30 27 47"
            },
            {
                "line_number": 20,
                "text": "907 13 58 14 71 25 44 21 62 951 13 58 14 71 25 44 21 62"
            },
            {
                "line_number": 21,
                "text": "246 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 269,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-32 – Values of variables m and n for ctxIdx from 952 to 1011"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m n m n"
            },
            {
                "line_number": 8,
                "text": "952 −3 71 −6 76 −23 112 −24 115 982 −3 71 −6 76 −23 112 −24 115"
            },
            {
                "line_number": 9,
                "text": "953 −6 42 −2 44 −15 71 −22 82 983 −6 42 −2 44 −15 71 −22 82"
            },
            {
                "line_number": 10,
                "text": "954 −5 50 0 45 −7 61 −9 62 984 −5 50 0 45 −7 61 −9 62"
            },
            {
                "line_number": 11,
                "text": "955 −3 54 0 52 0 53 0 53 985 −3 54 0 52 0 53 0 53"
            },
            {
                "line_number": 12,
                "text": "956 −2 62 −3 64 −5 66 0 59 986 −2 62 −3 64 −5 66 0 59"
            },
            {
                "line_number": 13,
                "text": "957 0 58 −2 59 −11 77 −14 85 987 0 58 −2 59 −11 77 −14 85"
            },
            {
                "line_number": 14,
                "text": "958 1 63 −4 70 −9 80 −13 89 988 1 63 −4 70 −9 80 −13 89"
            },
            {
                "line_number": 15,
                "text": "959 −2 72 −4 75 −9 84 −13 94 989 −2 72 −4 75 −9 84 −13 94"
            },
            {
                "line_number": 16,
                "text": "960 −1 74 −8 82 −10 87 −11 92 990 −1 74 −8 82 −10 87 −11 92"
            },
            {
                "line_number": 17,
                "text": "961 −9 91 −17 102 −34 127 −29 127 991 −9 91 −17 102 −34 127 −29 127"
            },
            {
                "line_number": 18,
                "text": "962 −5 67 −9 77 −21 101 −21 100 992 −5 67 −9 77 −21 101 −21 100"
            },
            {
                "line_number": 19,
                "text": "963 −5 27 3 24 −3 39 −14 57 993 −5 27 3 24 −3 39 −14 57"
            },
            {
                "line_number": 20,
                "text": "964 −3 39 0 42 −5 53 −12 67 994 −3 39 0 42 −5 53 −12 67"
            },
            {
                "line_number": 21,
                "text": "965 −2 44 0 48 −7 61 −11 71 995 −2 44 0 48 −7 61 −11 71"
            },
            {
                "line_number": 22,
                "text": "966 0 46 0 55 −11 75 −10 77 996 0 46 0 55 −11 75 −10 77"
            },
            {
                "line_number": 23,
                "text": "967 −16 64 −6 59 −15 77 −21 85 997 −16 64 −6 59 −15 77 −21 85"
            },
            {
                "line_number": 24,
                "text": "968 −8 68 −7 71 −17 91 −16 88 998 −8 68 −7 71 −17 91 −16 88"
            },
            {
                "line_number": 25,
                "text": "969 −10 78 −12 83 −25 107 −23 104 999 −10 78 −12 83 −25 107 −23 104"
            },
            {
                "line_number": 26,
                "text": "970 −6 77 −11 87 −25 111 −15 98 1000 −6 77 −11 87 −25 111 −15 98"
            },
            {
                "line_number": 27,
                "text": "971 −10 86 −30 119 −28 122 −37 127 1001 −10 86 −30 119 −28 122 −37 127"
            },
            {
                "line_number": 28,
                "text": "972 −12 92 1 58 −11 76 −10 82 1002 −12 92 1 58 −11 76 −10 82"
            },
            {
                "line_number": 29,
                "text": "973 −15 55 −3 29 −10 44 −8 48 1003 −15 55 −3 29 −10 44 −8 48"
            },
            {
                "line_number": 30,
                "text": "974 −10 60 −1 36 −10 52 −8 61 1004 −10 60 −1 36 −10 52 −8 61"
            },
            {
                "line_number": 31,
                "text": "975 −6 62 1 38 −10 57 −8 66 1005 −6 62 1 38 −10 57 −8 66"
            },
            {
                "line_number": 32,
                "text": "976 −4 65 2 43 −9 58 −7 70 1006 −4 65 2 43 −9 58 −7 70"
            },
            {
                "line_number": 33,
                "text": "977 −12 73 −6 55 −16 72 −14 75 1007 −12 73 −6 55 −16 72 −14 75"
            },
            {
                "line_number": 34,
                "text": "978 −8 76 0 58 −7 69 −10 79 1008 −8 76 0 58 −7 69 −10 79"
            },
            {
                "line_number": 35,
                "text": "979 −7 80 0 64 −4 69 −9 83 1009 −7 80 0 64 −4 69 −9 83"
            },
            {
                "line_number": 36,
                "text": "980 −9 88 −3 74 −5 74 −12 92 1010 −9 88 −3 74 −5 74 −12 92"
            },
            {
                "line_number": 37,
                "text": "981 −17 110 −10 90 −9 86 −18 108 1011 −17 110 −10 90 −9 86 −18 108"
            },
            {
                "line_number": 38,
                "text": "Rec. ITU-T H.264 (06/2019) 247"
            }
        ]
    },
    {
        "page_number": 270,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-33 – Values of variables m and n for ctxIdx from 1012 to 1023"
            },
            {
                "line_number": 2,
                "text": "I and SI Value of cabac_init_idc Value of cabac_init_idc"
            },
            {
                "line_number": 3,
                "text": "I and SI"
            },
            {
                "line_number": 4,
                "text": "slices"
            },
            {
                "line_number": 5,
                "text": "slices"
            },
            {
                "line_number": 6,
                "text": "ctxIdx 0 1 2 ctxIdx 0 1 2"
            },
            {
                "line_number": 7,
                "text": "m n m n m n m n m n m n m N m n"
            },
            {
                "line_number": 8,
                "text": "1012 −3 70 −3 74 −2 73 −5 79 1018 −10 90 −8 87 −9 91 −11 91"
            },
            {
                "line_number": 9,
                "text": "1013 −8 93 −9 92 −12 104 −11 104 1019 −30 127 −23 126 −31 127 −30 127"
            },
            {
                "line_number": 10,
                "text": "1014 −10 90 −8 87 −9 91 −11 91 1020 −3 70 −3 74 −2 73 −5 79"
            },
            {
                "line_number": 11,
                "text": "1015 −30 127 −23 126 −31 127 −30 127 1021 −8 93 −9 92 −12 104 −11 104"
            },
            {
                "line_number": 12,
                "text": "1016 −3 70 −3 74 −2 73 −5 79 1022 −10 90 −8 87 −9 91 −11 91"
            },
            {
                "line_number": 13,
                "text": "1017 −8 93 −9 92 −12 104 −11 104 1023 −30 127 −23 126 −31 127 −30 127"
            },
            {
                "line_number": 14,
                "text": "9.3.1.2 Initialization process for the arithmetic decoding engine"
            },
            {
                "line_number": 15,
                "text": "This process is invoked before decoding the first macroblock of a slice or after the decoding of any"
            },
            {
                "line_number": 16,
                "text": "pcm_alignment_zero_bit and all pcm_sample_luma and pcm_sample_chroma data for a macroblock of type I_PCM."
            },
            {
                "line_number": 17,
                "text": "Outputs of this process are the initialized decoding engine registers codIRange and codIOffset both in 16 bit register"
            },
            {
                "line_number": 18,
                "text": "precision."
            },
            {
                "line_number": 19,
                "text": "The status of the arithmetic decoding engine is represented by the variables codIRange and codIOffset. In the initialization"
            },
            {
                "line_number": 20,
                "text": "procedure of the arithmetic decoding process, codIRange is set equal to 510 and codIOffset is set equal to the value returned"
            },
            {
                "line_number": 21,
                "text": "from read_bits( 9 ) interpreted as a 9 bit binary representation of an unsigned integer with most significant bit written first."
            },
            {
                "line_number": 22,
                "text": "The bitstream shall not contain data that result in a value of codIOffset being equal to 510 or 511."
            },
            {
                "line_number": 23,
                "text": "NOTE – The description of the arithmetic decoding engine in this Recommendation | International Standard utilizes 16 bit register"
            },
            {
                "line_number": 24,
                "text": "precision. However, a minimum register precision of 9 bits is required for storing the values of the variables codIRange and"
            },
            {
                "line_number": 25,
                "text": "codIOffset after invocation of the arithmetic decoding process (DecodeBin) as specified in clause 9.3.3.2. The arithmetic decoding"
            },
            {
                "line_number": 26,
                "text": "process for a binary decision (DecodeDecision) as specified in clause 9.3.3.2.1 and the decoding process for a binary decision before"
            },
            {
                "line_number": 27,
                "text": "termination (DecodeTerminate) as specified in clause 9.3.3.2.4 require a minimum register precision of 9 bits for the variables"
            },
            {
                "line_number": 28,
                "text": "codIRange and codIOffset. The bypass decoding process for binary decisions (DecodeBypass) as specified in clause 9.3.3.2.3"
            },
            {
                "line_number": 29,
                "text": "requires a minimum register precision of 10 bits for the variable codIOffset and a minimum register precision of 9 bits for the"
            },
            {
                "line_number": 30,
                "text": "variable codIRange."
            },
            {
                "line_number": 31,
                "text": "9.3.2 Binarization process"
            },
            {
                "line_number": 32,
                "text": "Input to this process is a request for a syntax element."
            },
            {
                "line_number": 33,
                "text": "Output of this process is the binarization of the syntax element, maxBinIdxCtx, ctxIdxOffset, and bypassFlag."
            },
            {
                "line_number": 34,
                "text": "Table 9-34 specifies the type of binarization process, maxBinIdxCtx, and ctxIdxOffset associated with each syntax"
            },
            {
                "line_number": 35,
                "text": "element."
            },
            {
                "line_number": 36,
                "text": "The specification of the unary (U) binarization process, the truncated unary (TU) binarization process, the concatenated"
            },
            {
                "line_number": 37,
                "text": "unary / k-th order Exp-Golomb (UEGk) binarization process, and the fixed-length (FL) binarization process are given in"
            },
            {
                "line_number": 38,
                "text": "clauses 9.3.2.1 to 9.3.2.4, respectively. Other binarizations are specified in clauses 9.3.2.5 to 9.3.2.7."
            },
            {
                "line_number": 39,
                "text": "Except for I slices, the binarizations for the syntax element mb_type as specified in clause 9.3.2.5 consist of bin strings"
            },
            {
                "line_number": 40,
                "text": "given by a concatenation of prefix and suffix bit strings. The UEGk binarization as specified in clause 9.3.2.3, which is"
            },
            {
                "line_number": 41,
                "text": "used for the binarization of the syntax elements mvd_lX (X = 0, 1) and coeff_abs_level_minus1, and the binarization of"
            },
            {
                "line_number": 42,
                "text": "the coded_block_pattern also consist of a concatenation of prefix and suffix bit strings. For these binarization processes,"
            },
            {
                "line_number": 43,
                "text": "the prefix and the suffix bit string are separately indexed using the binIdx variable as specified further in clause 9.3.3. The"
            },
            {
                "line_number": 44,
                "text": "two sets of prefix bit strings and suffix bit strings are referred to as the binarization prefix part and the binarization suffix"
            },
            {
                "line_number": 45,
                "text": "part, respectively."
            },
            {
                "line_number": 46,
                "text": "Associated with each binarization or binarization part of a syntax element is a specific value of the context index offset"
            },
            {
                "line_number": 47,
                "text": "(ctxIdxOffset) variable and a specific value of the maxBinIdxCtx variable as given in Table 9-34. When two values for"
            },
            {
                "line_number": 48,
                "text": "each of these variables are specified for one syntax element in Table 9-34, the value in the upper row is related to the prefix"
            },
            {
                "line_number": 49,
                "text": "part while the value in the lower row is related to the suffix part of the binarization of the corresponding syntax element."
            },
            {
                "line_number": 50,
                "text": "The use of the DecodeBypass process and the variable bypassFlag is derived as follows:"
            },
            {
                "line_number": 51,
                "text": "248 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 271,
        "lines": [
            {
                "line_number": 1,
                "text": "– If no value is assigned to ctxIdxOffset for the corresponding binarization or binarization part in Table 9-34 labelled"
            },
            {
                "line_number": 2,
                "text": "as \"na\", all bins of the bit strings of the corresponding binarization or of the binarization prefix/suffix part are decoded"
            },
            {
                "line_number": 3,
                "text": "by invoking the DecodeBypass process as specified in clause 9.3.3.2.3. In such a case, bypassFlag is set equal to 1,"
            },
            {
                "line_number": 4,
                "text": "where bypassFlag is used to indicate that for parsing the value of the bin from the bitstream the DecodeBypass process"
            },
            {
                "line_number": 5,
                "text": "is applied."
            },
            {
                "line_number": 6,
                "text": "– Otherwise, for each possible value of binIdx up to the specified value of maxBinIdxCtx given in Table 9-34, a specific"
            },
            {
                "line_number": 7,
                "text": "value of the variable ctxIdx is further specified in clause 9.3.3. bypassFlag is set equal to 0."
            },
            {
                "line_number": 8,
                "text": "The possible values of the context index ctxIdx are in the range 0 to 1023, inclusive. The value assigned to ctxIdxOffset"
            },
            {
                "line_number": 9,
                "text": "specifies the lower value of the range of ctxIdx assigned to the corresponding binarization or binarization part of a syntax"
            },
            {
                "line_number": 10,
                "text": "element."
            },
            {
                "line_number": 11,
                "text": "ctxIdx = ctxIdxOffset = 276 is assigned to the syntax element end_of_slice_flag and the bin of mb_type, which specifies"
            },
            {
                "line_number": 12,
                "text": "the I_PCM macroblock type as further specified in clause 9.3.3.1. For parsing the value of the corresponding bin from the"
            },
            {
                "line_number": 13,
                "text": "bitstream, the arithmetic decoding process for decisions before termination (DecodeTerminate) as specified in"
            },
            {
                "line_number": 14,
                "text": "clause 9.3.3.2.4 is applied."
            },
            {
                "line_number": 15,
                "text": "NOTE – The bins of mb_type in I slices and the bins of the suffix for mb_type in SI slices that correspond to the same value of"
            },
            {
                "line_number": 16,
                "text": "binIdx share the same ctxIdx. The last bin of the prefix of mb_type and the first bin of the suffix of mb_type in P, SP, and B slices"
            },
            {
                "line_number": 17,
                "text": "may share the same ctxIdx."
            },
            {
                "line_number": 18,
                "text": "Table 9-34 – Syntax elements and associated types of binarization, maxBinIdxCtx, and ctxIdxOffset"
            },
            {
                "line_number": 19,
                "text": "Syntax element Type of binarization maxBinIdxCtx ctxIdxOffset"
            },
            {
                "line_number": 20,
                "text": "mb_type prefix and suffix prefix: 0 prefix: 0"
            },
            {
                "line_number": 21,
                "text": "(SI slices only) as specified in clause 9.3.2.5 suffix: 6 suffix: 3"
            },
            {
                "line_number": 22,
                "text": "mb_type (I slices only) as specified in clause 9.3.2.5 6 3"
            },
            {
                "line_number": 23,
                "text": "mb_skip_flag"
            },
            {
                "line_number": 24,
                "text": "FL, cMax=1 0 11"
            },
            {
                "line_number": 25,
                "text": "(P, SP slices only)"
            },
            {
                "line_number": 26,
                "text": "prefix and suffix prefix: 2 prefix: 14"
            },
            {
                "line_number": 27,
                "text": "mb_type (P, SP slices only)"
            },
            {
                "line_number": 28,
                "text": "as specified in clause 9.3.2.5 suffix: 5 suffix: 17"
            },
            {
                "line_number": 29,
                "text": "sub_mb_type[ ]"
            },
            {
                "line_number": 30,
                "text": "as specified in clause 9.3.2.5 2 21"
            },
            {
                "line_number": 31,
                "text": "(P, SP slices only)"
            },
            {
                "line_number": 32,
                "text": "mb_skip_flag"
            },
            {
                "line_number": 33,
                "text": "FL, cMax=1 0 24"
            },
            {
                "line_number": 34,
                "text": "(B slices only)"
            },
            {
                "line_number": 35,
                "text": "prefix and suffix prefix: 3 prefix: 27"
            },
            {
                "line_number": 36,
                "text": "mb_type (B slices only)"
            },
            {
                "line_number": 37,
                "text": "as specified in clause 9.3.2.5 suffix: 5 suffix: 32"
            },
            {
                "line_number": 38,
                "text": "sub_mb_type[ ] (B slices only) as specified in clause 9.3.2.5 3 36"
            },
            {
                "line_number": 39,
                "text": "prefix: 4 prefix: 40"
            },
            {
                "line_number": 40,
                "text": "mvd_l0[ ][ ][ 0 ], mvd_l1[ ][ ][ 0 ]"
            },
            {
                "line_number": 41,
                "text": "suffix: na suffix: na (uses DecodeBypass)"
            },
            {
                "line_number": 42,
                "text": "prefix and suffix as given by UEG3"
            },
            {
                "line_number": 43,
                "text": "with signedValFlag=1, uCoff=9"
            },
            {
                "line_number": 44,
                "text": "prefix: 4 prefix: 47"
            },
            {
                "line_number": 45,
                "text": "mvd_l0[ ][ ][ 1 ], mvd_l1[ ][ ][ 1 ]"
            },
            {
                "line_number": 46,
                "text": "suffix: na suffix: na (uses DecodeBypass)"
            },
            {
                "line_number": 47,
                "text": "ref_idx_l0, ref_idx_l1 U 2 54"
            },
            {
                "line_number": 48,
                "text": "mb_qp_delta as specified in clause 9.3.2.7 2 60"
            },
            {
                "line_number": 49,
                "text": "intra_chroma_pred_mode TU, cMax=3 1 64"
            },
            {
                "line_number": 50,
                "text": "prev_intra4x4_pred_mode_flag, 0 68"
            },
            {
                "line_number": 51,
                "text": "FL, cMax=1"
            },
            {
                "line_number": 52,
                "text": "prev_intra8x8_pred_mode_flag"
            },
            {
                "line_number": 53,
                "text": "rem_intra4x4_pred_mode, 0 69"
            },
            {
                "line_number": 54,
                "text": "FL, cMax=7"
            },
            {
                "line_number": 55,
                "text": "rem_intra8x8_pred_mode"
            },
            {
                "line_number": 56,
                "text": "mb_field_decoding_flag FL, cMax=1 0 70"
            },
            {
                "line_number": 57,
                "text": "Rec. ITU-T H.264 (06/2019) 249"
            }
        ]
    },
    {
        "page_number": 272,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-34 – Syntax elements and associated types of binarization, maxBinIdxCtx, and ctxIdxOffset"
            },
            {
                "line_number": 2,
                "text": "Syntax element Type of binarization maxBinIdxCtx ctxIdxOffset"
            },
            {
                "line_number": 3,
                "text": "prefix and suffix prefix: 3 prefix: 73"
            },
            {
                "line_number": 4,
                "text": "coded_block_pattern"
            },
            {
                "line_number": 5,
                "text": "as specified in clause 9.3.2.6 suffix: 1 suffix: 77"
            },
            {
                "line_number": 6,
                "text": "coded_block_flag 0 85"
            },
            {
                "line_number": 7,
                "text": "FL, cMax=1"
            },
            {
                "line_number": 8,
                "text": "(blocks with ctxBlockCat < 5)"
            },
            {
                "line_number": 9,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 10,
                "text": "FL, cMax=1 0 105"
            },
            {
                "line_number": 11,
                "text": "(frame coded blocks with ctxBlockCat < 5)"
            },
            {
                "line_number": 12,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 13,
                "text": "FL, cMax=1 0 166"
            },
            {
                "line_number": 14,
                "text": "(frame coded blocks with ctxBlockCat < 5)"
            },
            {
                "line_number": 15,
                "text": "coeff_abs_level_minus1 prefix and suffix as given by UEG0 prefix: 1 prefix: 227"
            },
            {
                "line_number": 16,
                "text": "(blocks with ctxBlockCat < 5) with signedValFlag=0, uCoff=14 suffix: na suffix: na, (uses DecodeBypass)"
            },
            {
                "line_number": 17,
                "text": "coeff_sign_flag FL, cMax=1 0 na, (uses DecodeBypass)"
            },
            {
                "line_number": 18,
                "text": "end_of_slice_flag FL, cMax=1 0 276"
            },
            {
                "line_number": 19,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 20,
                "text": "FL, cMax=1 0 277"
            },
            {
                "line_number": 21,
                "text": "(field coded blocks with ctxBlockCat < 5)"
            },
            {
                "line_number": 22,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 23,
                "text": "FL, cMax=1 0 338"
            },
            {
                "line_number": 24,
                "text": "(field coded blocks with ctxBlockCat < 5)"
            },
            {
                "line_number": 25,
                "text": "transform_size_8x8_flag FL, cMax=1 0 399"
            },
            {
                "line_number": 26,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 27,
                "text": "FL, cMax=1 0 402"
            },
            {
                "line_number": 28,
                "text": "(frame coded blocks with ctxBlockCat = = 5)"
            },
            {
                "line_number": 29,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 30,
                "text": "FL, cMax=1 0 417"
            },
            {
                "line_number": 31,
                "text": "(frame coded blocks with ctxBlockCat = = 5)"
            },
            {
                "line_number": 32,
                "text": "coeff_abs_level_minus1 prefix and suffix as given by UEG0 prefix: 1 prefix: 426"
            },
            {
                "line_number": 33,
                "text": "(blocks with ctxBlockCat = = 5) with signedValFlag=0, uCoff=14 suffix: na suffix: na, (uses DecodeBypass)"
            },
            {
                "line_number": 34,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 35,
                "text": "FL, cMax=1 0 436"
            },
            {
                "line_number": 36,
                "text": "(field coded blocks with ctxBlockCat = = 5)"
            },
            {
                "line_number": 37,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 38,
                "text": "FL, cMax=1 0 451"
            },
            {
                "line_number": 39,
                "text": "(field coded blocks with ctxBlockCat = = 5)"
            },
            {
                "line_number": 40,
                "text": "coded_block_flag"
            },
            {
                "line_number": 41,
                "text": "FL, cMax=1 0 460"
            },
            {
                "line_number": 42,
                "text": "(5 < ctxBlockCat < 9)"
            },
            {
                "line_number": 43,
                "text": "coded_block_flag"
            },
            {
                "line_number": 44,
                "text": "FL, cMax=1 0 472"
            },
            {
                "line_number": 45,
                "text": "(9 < ctxBlockCat < 13)"
            },
            {
                "line_number": 46,
                "text": "coded_block_flag"
            },
            {
                "line_number": 47,
                "text": "FL, cMax=1 0 1012"
            },
            {
                "line_number": 48,
                "text": "(ctxBlockCat = = 5, 9, or 13)"
            },
            {
                "line_number": 49,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 50,
                "text": "(frame coded blocks FL, cMax=1 0 484"
            },
            {
                "line_number": 51,
                "text": "with 5 < ctxBlockCat < 9)"
            },
            {
                "line_number": 52,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 53,
                "text": "(frame coded blocks with FL, cMax=1 0 528"
            },
            {
                "line_number": 54,
                "text": "9 < ctxBlockCat < 13)"
            },
            {
                "line_number": 55,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 56,
                "text": "(frame coded blocks with FL, cMax=1 0 572"
            },
            {
                "line_number": 57,
                "text": "5 < ctxBlockCat < 9)"
            },
            {
                "line_number": 58,
                "text": "250 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 273,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-34 – Syntax elements and associated types of binarization, maxBinIdxCtx, and ctxIdxOffset"
            },
            {
                "line_number": 2,
                "text": "Syntax element Type of binarization maxBinIdxCtx ctxIdxOffset"
            },
            {
                "line_number": 3,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 4,
                "text": "(frame coded blocks with FL, cMax=1 0 616"
            },
            {
                "line_number": 5,
                "text": "9 < ctxBlockCat < 13)"
            },
            {
                "line_number": 6,
                "text": "coeff_abs_level_minus1 prefix and suffix as given by UEG0 prefix: 1 prefix: 952"
            },
            {
                "line_number": 7,
                "text": "(blocks with 5 < ctxBlockCat < 9) with signedValFlag=0, uCoff=14 suffix: na suffix: na, (uses DecodeBypass)"
            },
            {
                "line_number": 8,
                "text": "coeff_abs_level_minus1 prefix and suffix as given by UEG0 prefix: 1 prefix: 982"
            },
            {
                "line_number": 9,
                "text": "(blocks with 9 < ctxBlockCat < 13) with signedValFlag=0, uCoff=14 suffix: na suffix: na, (uses DecodeBypass)"
            },
            {
                "line_number": 10,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 11,
                "text": "FL, cMax=1 0 776"
            },
            {
                "line_number": 12,
                "text": "(field coded blocks with 5 < ctxBlockCat < 9)"
            },
            {
                "line_number": 13,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 14,
                "text": "(field coded blocks with FL, cMax=1 0 820"
            },
            {
                "line_number": 15,
                "text": "9 < ctxBlockCat < 13)"
            },
            {
                "line_number": 16,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 17,
                "text": "FL, cMax=1 0 864"
            },
            {
                "line_number": 18,
                "text": "(field coded blocks with 5 < ctxBlockCat < 9)"
            },
            {
                "line_number": 19,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 20,
                "text": "(field coded blocks with FL, cMax=1 0 908"
            },
            {
                "line_number": 21,
                "text": "9 < ctxBlockCat < 13)"
            },
            {
                "line_number": 22,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 23,
                "text": "FL, cMax=1 0 660"
            },
            {
                "line_number": 24,
                "text": "(frame coded blocks with ctxBlockCat = = 9)"
            },
            {
                "line_number": 25,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 26,
                "text": "(frame coded blocks with FL, cMax=1 0 718"
            },
            {
                "line_number": 27,
                "text": "ctxBlockCat = = 13)"
            },
            {
                "line_number": 28,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 29,
                "text": "FL, cMax=1 0 690"
            },
            {
                "line_number": 30,
                "text": "(frame coded blocks with ctxBlockCat = = 9)"
            },
            {
                "line_number": 31,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 32,
                "text": "(frame coded blocks with FL, cMax=1 0 748"
            },
            {
                "line_number": 33,
                "text": "ctxBlockCat = = 13)"
            },
            {
                "line_number": 34,
                "text": "coeff_abs_level_minus1 prefix and suffix as given by UEG0 prefix: 1 prefix: 708"
            },
            {
                "line_number": 35,
                "text": "(blocks with ctxBlockCat = = 9) with signedValFlag=0, uCoff=14 suffix: na suffix: na, (uses DecodeBypass)"
            },
            {
                "line_number": 36,
                "text": "coeff_abs_level_minus1 prefix and suffix as given by UEG0 prefix: 1 prefix: 766"
            },
            {
                "line_number": 37,
                "text": "(blocks with ctxBlockCat = = 13) with signedValFlag=0, uCoff=14 suffix: na suffix: na, (uses DecodeBypass)"
            },
            {
                "line_number": 38,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 39,
                "text": "FL, cMax=1 0 675"
            },
            {
                "line_number": 40,
                "text": "(field coded blocks with ctxBlockCat = = 9)"
            },
            {
                "line_number": 41,
                "text": "significant_coeff_flag"
            },
            {
                "line_number": 42,
                "text": "FL, cMax=1 0 733"
            },
            {
                "line_number": 43,
                "text": "(field coded blocks with ctxBlockCat = = 13)"
            },
            {
                "line_number": 44,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 45,
                "text": "FL, cMax=1 0 699"
            },
            {
                "line_number": 46,
                "text": "(field coded blocks with ctxBlockCat = = 9)"
            },
            {
                "line_number": 47,
                "text": "last_significant_coeff_flag"
            },
            {
                "line_number": 48,
                "text": "FL, cMax=1 0 757"
            },
            {
                "line_number": 49,
                "text": "(field coded blocks with ctxBlockCat = = 13)"
            },
            {
                "line_number": 50,
                "text": "9.3.2.1 Unary (U) binarization process"
            },
            {
                "line_number": 51,
                "text": "Input to this process is a request for a U binarization for a syntax element."
            },
            {
                "line_number": 52,
                "text": "Output of this process is the U binarization of the syntax element."
            },
            {
                "line_number": 53,
                "text": "The bin string of a syntax element having (unsigned integer) value synElVal is a bit string of length synElVal + 1 indexed"
            },
            {
                "line_number": 54,
                "text": "by binIdx. The bins for binIdx less than synElVal are equal to 1. The bin with binIdx equal to synElVal is equal to 0."
            },
            {
                "line_number": 55,
                "text": "Table 9-35 illustrates the bin strings of the unary binarization for a syntax element."
            },
            {
                "line_number": 56,
                "text": "Rec. ITU-T H.264 (06/2019) 251"
            }
        ]
    },
    {
        "page_number": 274,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-35 – Bin string of the unary binarization (informative)"
            },
            {
                "line_number": 2,
                "text": "Value of syntax element Bin string"
            },
            {
                "line_number": 3,
                "text": "0 (I_NxN) 0"
            },
            {
                "line_number": 4,
                "text": "1 1 0"
            },
            {
                "line_number": 5,
                "text": "2 1 1 0"
            },
            {
                "line_number": 6,
                "text": "3 1 1 1 0"
            },
            {
                "line_number": 7,
                "text": "4 1 1 1 1 0"
            },
            {
                "line_number": 8,
                "text": "5 1 1 1 1 1 0"
            },
            {
                "line_number": 9,
                "text": "…"
            },
            {
                "line_number": 10,
                "text": "binIdx 0 1 2 3 4 5"
            },
            {
                "line_number": 11,
                "text": "9.3.2.2 Truncated unary (TU) binarization process"
            },
            {
                "line_number": 12,
                "text": "Input to this process is a request for a TU binarization for a syntax element and cMax."
            },
            {
                "line_number": 13,
                "text": "Output of this process is the TU binarization of the syntax element."
            },
            {
                "line_number": 14,
                "text": "For syntax element (unsigned integer) values less than cMax, the U binarization process as specified in clause 9.3.2.1 is"
            },
            {
                "line_number": 15,
                "text": "invoked. For the syntax element value equal to cMax the bin string is a bit string of length cMax with all bins being equal"
            },
            {
                "line_number": 16,
                "text": "to 1."
            },
            {
                "line_number": 17,
                "text": "NOTE – TU binarization is always invoked with a cMax value equal to the largest possible value of the syntax element being"
            },
            {
                "line_number": 18,
                "text": "decoded."
            },
            {
                "line_number": 19,
                "text": "9.3.2.3 Concatenated unary/ k-th order Exp-Golomb (UEGk) binarization process"
            },
            {
                "line_number": 20,
                "text": "Input to this process is a request for a UEGk binarization for a syntax element, signedValFlag and uCoff."
            },
            {
                "line_number": 21,
                "text": "Output of this process is the UEGk binarization of the syntax element."
            },
            {
                "line_number": 22,
                "text": "A UEGk bin string is a concatenation of a prefix bit string and a suffix bit string. The prefix of the binarization is specified"
            },
            {
                "line_number": 23,
                "text": "by invoking the TU binarization process for the prefix part Min( uCoff, Abs( synElVal ) ) of a syntax element value"
            },
            {
                "line_number": 24,
                "text": "synElVal as specified in clause 9.3.2.2 with cMax = uCoff, where uCoff > 0."
            },
            {
                "line_number": 25,
                "text": "The variable k for a UEGk bin string is dependent on the syntax element for which a UEGk binarization is requested."
            },
            {
                "line_number": 26,
                "text": "Table 9-34 specifies the associated types of binarization for syntax elements, including the value of k for syntax elements"
            },
            {
                "line_number": 27,
                "text": "that use UEGk binarization."
            },
            {
                "line_number": 28,
                "text": "NOTE 1 – For the syntax elements mvd_l0[ ][ ][ ] and mvd_l1[ ][ ][ ] a UEG3 binarization is used (k is equal to 3). For the syntax"
            },
            {
                "line_number": 29,
                "text": "element coeff_abs_level_minus1 a UEG0 binarization is used (k is equal to 0)."
            },
            {
                "line_number": 30,
                "text": "The UEGk bin string is derived as follows:"
            },
            {
                "line_number": 31,
                "text": "– If one of the following is true, the bin string of a syntax element having value synElVal consists only of a prefix bit"
            },
            {
                "line_number": 32,
                "text": "string:"
            },
            {
                "line_number": 33,
                "text": "– signedValFlag is equal to 0 and the prefix bit string is not equal to the bit string of length uCoff with all bits"
            },
            {
                "line_number": 34,
                "text": "equal to 1,"
            },
            {
                "line_number": 35,
                "text": "– signedValFlag is equal to 1 and the prefix bit string is equal to the bit string that consists of a single bit with"
            },
            {
                "line_number": 36,
                "text": "value equal to 0."
            },
            {
                "line_number": 37,
                "text": "252 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 275,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise, the bin string of the UEGk suffix part of a syntax element value synElVal is specified by a process"
            },
            {
                "line_number": 2,
                "text": "equivalent to the following pseudo-code with k being initialized to the value that is specified in Table 9-34 for the"
            },
            {
                "line_number": 3,
                "text": "requested UEGk binarization process. At the beginning of the following pseudo-code, the bin string of a syntax"
            },
            {
                "line_number": 4,
                "text": "element having value synElVal is set equal to the empty string. Each call of the function put( X ), with X being equal"
            },
            {
                "line_number": 5,
                "text": "to 0 or 1, adds the binary value X at the end of the bin string."
            },
            {
                "line_number": 6,
                "text": "if( Abs( synElVal ) >= uCoff ) {"
            },
            {
                "line_number": 7,
                "text": "sufS = Abs( synElVal ) − uCoff"
            },
            {
                "line_number": 8,
                "text": "stopLoop = 0"
            },
            {
                "line_number": 9,
                "text": "do {"
            },
            {
                "line_number": 10,
                "text": "if( sufS >= ( 1 << k ) ) {"
            },
            {
                "line_number": 11,
                "text": "put( 1 )"
            },
            {
                "line_number": 12,
                "text": "sufS = sufS − ( 1<<k )"
            },
            {
                "line_number": 13,
                "text": "k++"
            },
            {
                "line_number": 14,
                "text": "} else {"
            },
            {
                "line_number": 15,
                "text": "put( 0 ) (9-6)"
            },
            {
                "line_number": 16,
                "text": "while( k− − )"
            },
            {
                "line_number": 17,
                "text": "put( ( sufS >> k ) & 1 )"
            },
            {
                "line_number": 18,
                "text": "stopLoop = 1"
            },
            {
                "line_number": 19,
                "text": "}"
            },
            {
                "line_number": 20,
                "text": "} while( !stopLoop )"
            },
            {
                "line_number": 21,
                "text": "}"
            },
            {
                "line_number": 22,
                "text": "if( signedValFlag && synElVal ! = 0)"
            },
            {
                "line_number": 23,
                "text": "if( synElVal > 0 )"
            },
            {
                "line_number": 24,
                "text": "put( 0 )"
            },
            {
                "line_number": 25,
                "text": "else"
            },
            {
                "line_number": 26,
                "text": "put( 1 )"
            },
            {
                "line_number": 27,
                "text": "NOTE 2 – The specification for the k-th order Exp-Golomb (EGk) code uses 1's and 0's in reverse meaning for the unary part of the"
            },
            {
                "line_number": 28,
                "text": "Exp-Golomb code of 0-th order as specified in clause 9.1."
            },
            {
                "line_number": 29,
                "text": "9.3.2.4 Fixed-length (FL) binarization process"
            },
            {
                "line_number": 30,
                "text": "Input to this process is a request for a FL binarization for a syntax element and cMax."
            },
            {
                "line_number": 31,
                "text": "Output of this process is the FL binarization of the syntax element."
            },
            {
                "line_number": 32,
                "text": "FL binarization is constructed by using a fixedLength-bit unsigned integer bin string of the syntax element value, where"
            },
            {
                "line_number": 33,
                "text": "fixedLength = Ceil( Log2( cMax + 1 ) ). The indexing of bins for the FL binarization is such that the binIdx = 0 relates to"
            },
            {
                "line_number": 34,
                "text": "the least significant bit with increasing values of binIdx towards the most significant bit."
            },
            {
                "line_number": 35,
                "text": "9.3.2.5 Binarization process for macroblock type and sub-macroblock type"
            },
            {
                "line_number": 36,
                "text": "Input to this process is a request for a binarization for syntax elements mb_type or sub_mb_type[ ]."
            },
            {
                "line_number": 37,
                "text": "Output of this process is the binarization of the syntax element."
            },
            {
                "line_number": 38,
                "text": "The binarization scheme for decoding of macroblock type in I slices is specified in Table 9-36."
            },
            {
                "line_number": 39,
                "text": "For macroblock types in SI slices, the binarization consists of bin strings specified as a concatenation of a prefix and a"
            },
            {
                "line_number": 40,
                "text": "suffix bit string as follows."
            },
            {
                "line_number": 41,
                "text": "The prefix bit string consists of a single bit, which is specified by b = ( ( mb_type = = SI ) ? 0 : 1 ). For the syntax"
            },
            {
                "line_number": 42,
                "text": "0"
            },
            {
                "line_number": 43,
                "text": "element value for which b is equal to 0, the bin string only consists of the prefix bit string. For the syntax element value"
            },
            {
                "line_number": 44,
                "text": "0"
            },
            {
                "line_number": 45,
                "text": "for which b is equal to 1, the binarization is given by concatenating the prefix b and the suffix bit string as specified in"
            },
            {
                "line_number": 46,
                "text": "0 0"
            },
            {
                "line_number": 47,
                "text": "Table 9-36 for macroblock type in I slices indexed by subtracting 1 from the value of mb_type in SI slices."
            },
            {
                "line_number": 48,
                "text": "Rec. ITU-T H.264 (06/2019) 253"
            }
        ]
    },
    {
        "page_number": 276,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-36 – Binarization for macroblock types in I slices"
            },
            {
                "line_number": 2,
                "text": "Value (name) of mb_type Bin string"
            },
            {
                "line_number": 3,
                "text": "0 (I_NxN) 0"
            },
            {
                "line_number": 4,
                "text": "1 (I_16x16_0_0_0) 1 0 0 0 0 0"
            },
            {
                "line_number": 5,
                "text": "2 (I_16x16_1_0_0) 1 0 0 0 0 1"
            },
            {
                "line_number": 6,
                "text": "3 (I_16x16_2_0_0) 1 0 0 0 1 0"
            },
            {
                "line_number": 7,
                "text": "4 (I_16x16_3_0_0) 1 0 0 0 1 1"
            },
            {
                "line_number": 8,
                "text": "5 (I_16x16_0_1_0) 1 0 0 1 0 0 0"
            },
            {
                "line_number": 9,
                "text": "6 (I_16x16_1_1_0) 1 0 0 1 0 0 1"
            },
            {
                "line_number": 10,
                "text": "7 (I_16x16_2_1_0) 1 0 0 1 0 1 0"
            },
            {
                "line_number": 11,
                "text": "8 (I_16x16_3_1_0) 1 0 0 1 0 1 1"
            },
            {
                "line_number": 12,
                "text": "9 (I_16x16_0_2_0) 1 0 0 1 1 0 0"
            },
            {
                "line_number": 13,
                "text": "10 (I_16x16_1_2_0) 1 0 0 1 1 0 1"
            },
            {
                "line_number": 14,
                "text": "11 (I_16x16_2_2_0) 1 0 0 1 1 1 0"
            },
            {
                "line_number": 15,
                "text": "12 (I_16x16_3_2_0) 1 0 0 1 1 1 1"
            },
            {
                "line_number": 16,
                "text": "13 (I_16x16_0_0_1) 1 0 1 0 0 0"
            },
            {
                "line_number": 17,
                "text": "14 (I_16x16_1_0_1) 1 0 1 0 0 1"
            },
            {
                "line_number": 18,
                "text": "15 (I_16x16_2_0_1) 1 0 1 0 1 0"
            },
            {
                "line_number": 19,
                "text": "16 (I_16x16_3_0_1) 1 0 1 0 1 1"
            },
            {
                "line_number": 20,
                "text": "17 (I_16x16_0_1_1) 1 0 1 1 0 0 0"
            },
            {
                "line_number": 21,
                "text": "18 (I_16x16_1_1_1) 1 0 1 1 0 0 1"
            },
            {
                "line_number": 22,
                "text": "19 (I_16x16_2_1_1) 1 0 1 1 0 1 0"
            },
            {
                "line_number": 23,
                "text": "20 (I_16x16_3_1_1) 1 0 1 1 0 1 1"
            },
            {
                "line_number": 24,
                "text": "21 (I_16x16_0_2_1) 1 0 1 1 1 0 0"
            },
            {
                "line_number": 25,
                "text": "22 (I_16x16_1_2_1) 1 0 1 1 1 0 1"
            },
            {
                "line_number": 26,
                "text": "23 (I_16x16_2_2_1) 1 0 1 1 1 1 0"
            },
            {
                "line_number": 27,
                "text": "24 (I_16x16_3_2_1) 1 0 1 1 1 1 1"
            },
            {
                "line_number": 28,
                "text": "25 (I_PCM) 1 1"
            },
            {
                "line_number": 29,
                "text": "binIdx 0 1 2 3 4 5 6"
            },
            {
                "line_number": 30,
                "text": "The binarization schemes for P macroblock types in P and SP slices and for B macroblocks in B slices are specified in"
            },
            {
                "line_number": 31,
                "text": "Table 9-37."
            },
            {
                "line_number": 32,
                "text": "The bin string for I macroblock types in P and SP slices corresponding to mb_type values 5 to 30 consists of a concatenation"
            },
            {
                "line_number": 33,
                "text": "of a prefix, which consists of a single bit with value equal to 1 as specified in Table 9-37 and a suffix as specified in"
            },
            {
                "line_number": 34,
                "text": "Table 9-36, indexed by subtracting 5 from the value of mb_type."
            },
            {
                "line_number": 35,
                "text": "mb_type equal to 4 (P_8x8ref0) is not allowed."
            },
            {
                "line_number": 36,
                "text": "For I macroblock types in B slices (mb_type values 23 to 48) the binarization consists of bin strings specified as a"
            },
            {
                "line_number": 37,
                "text": "concatenation of a prefix bit string as specified in Table 9-37 and suffix bit strings as specified in Table 9-36, indexed by"
            },
            {
                "line_number": 38,
                "text": "subtracting 23 from the value of mb_type."
            },
            {
                "line_number": 39,
                "text": "254 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 277,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-37 – Binarization for macroblock types in P, SP, and B slices"
            },
            {
                "line_number": 2,
                "text": "Slice type Value (name) of mb_type Bin string"
            },
            {
                "line_number": 3,
                "text": "0 (P_L0_16x16) 0 0 0"
            },
            {
                "line_number": 4,
                "text": "1 (P_L0_L0_16x8) 0 1 1"
            },
            {
                "line_number": 5,
                "text": "2 (P_L0_L0_8x16) 0 1 0"
            },
            {
                "line_number": 6,
                "text": "P, SP slice"
            },
            {
                "line_number": 7,
                "text": "3 (P_8x8) 0 0 1"
            },
            {
                "line_number": 8,
                "text": "4 (P_8x8ref0) na"
            },
            {
                "line_number": 9,
                "text": "5 to 30 (Intra, prefix only) 1"
            },
            {
                "line_number": 10,
                "text": "0 (B_Direct_16x16) 0"
            },
            {
                "line_number": 11,
                "text": "1 (B_L0_16x16) 1 0 0"
            },
            {
                "line_number": 12,
                "text": "2 (B_L1_16x16) 1 0 1"
            },
            {
                "line_number": 13,
                "text": "3 (B_Bi_16x16) 1 1 0 0 0 0"
            },
            {
                "line_number": 14,
                "text": "4 (B_L0_L0_16x8) 1 1 0 0 0 1"
            },
            {
                "line_number": 15,
                "text": "5 (B_L0_L0_8x16) 1 1 0 0 1 0"
            },
            {
                "line_number": 16,
                "text": "6 (B_L1_L1_16x8) 1 1 0 0 1 1"
            },
            {
                "line_number": 17,
                "text": "7 (B_L1_L1_8x16) 1 1 0 1 0 0"
            },
            {
                "line_number": 18,
                "text": "8 (B_L0_L1_16x8) 1 1 0 1 0 1"
            },
            {
                "line_number": 19,
                "text": "9 (B_L0_L1_8x16) 1 1 0 1 1 0"
            },
            {
                "line_number": 20,
                "text": "10 (B_L1_L0_16x8) 1 1 0 1 1 1"
            },
            {
                "line_number": 21,
                "text": "11 (B_L1_L0_8x16) 1 1 1 1 1 0"
            },
            {
                "line_number": 22,
                "text": "B slice"
            },
            {
                "line_number": 23,
                "text": "12 (B_L0_Bi_16x8) 1 1 1 0 0 0 0"
            },
            {
                "line_number": 24,
                "text": "13 (B_L0_Bi_8x16) 1 1 1 0 0 0 1"
            },
            {
                "line_number": 25,
                "text": "14 (B_L1_Bi_16x8) 1 1 1 0 0 1 0"
            },
            {
                "line_number": 26,
                "text": "15 (B_L1_Bi_8x16) 1 1 1 0 0 1 1"
            },
            {
                "line_number": 27,
                "text": "16 (B_Bi_L0_16x8) 1 1 1 0 1 0 0"
            },
            {
                "line_number": 28,
                "text": "17 (B_Bi_L0_8x16) 1 1 1 0 1 0 1"
            },
            {
                "line_number": 29,
                "text": "18 (B_Bi_L1_16x8) 1 1 1 0 1 1 0"
            },
            {
                "line_number": 30,
                "text": "19 (B_Bi_L1_8x16) 1 1 1 0 1 1 1"
            },
            {
                "line_number": 31,
                "text": "20 (B_Bi_Bi_16x8) 1 1 1 1 0 0 0"
            },
            {
                "line_number": 32,
                "text": "21 (B_Bi_Bi_8x16) 1 1 1 1 0 0 1"
            },
            {
                "line_number": 33,
                "text": "22 (B_8x8) 1 1 1 1 1 1"
            },
            {
                "line_number": 34,
                "text": "23 to 48 (Intra, prefix only) 1 1 1 1 0 1"
            },
            {
                "line_number": 35,
                "text": "binIdx 0 1 2 3 4 5 6"
            },
            {
                "line_number": 36,
                "text": "For P, SP, and B slices the specification of the binarization for sub_mb_type[ ] is given in Table 9-38."
            },
            {
                "line_number": 37,
                "text": "Rec. ITU-T H.264 (06/2019) 255"
            }
        ]
    },
    {
        "page_number": 278,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-38 – Binarization for sub-macroblock types in P, SP, and B slices"
            },
            {
                "line_number": 2,
                "text": "Slice type Value (name) of sub_mb_type[ ] Bin string"
            },
            {
                "line_number": 3,
                "text": "0 (P_L0_8x8) 1"
            },
            {
                "line_number": 4,
                "text": "1 (P_L0_8x4) 0 0"
            },
            {
                "line_number": 5,
                "text": "P, SP slice"
            },
            {
                "line_number": 6,
                "text": "2 (P_L0_4x8) 0 1 1"
            },
            {
                "line_number": 7,
                "text": "3 (P_L0_4x4) 0 1 0"
            },
            {
                "line_number": 8,
                "text": "0 (B_Direct_8x8) 0"
            },
            {
                "line_number": 9,
                "text": "1 (B_L0_8x8) 1 0 0"
            },
            {
                "line_number": 10,
                "text": "2 (B_L1_8x8) 1 0 1"
            },
            {
                "line_number": 11,
                "text": "3 (B_Bi_8x8) 1 1 0 0 0"
            },
            {
                "line_number": 12,
                "text": "4 (B_L0_8x4) 1 1 0 0 1"
            },
            {
                "line_number": 13,
                "text": "5 (B_L0_4x8) 1 1 0 1 0"
            },
            {
                "line_number": 14,
                "text": "B slice 6 (B_L1_8x4) 1 1 0 1 1"
            },
            {
                "line_number": 15,
                "text": "7 (B_L1_4x8) 1 1 1 0 0 0"
            },
            {
                "line_number": 16,
                "text": "8 (B_Bi_8x4) 1 1 1 0 0 1"
            },
            {
                "line_number": 17,
                "text": "9 (B_Bi_4x8) 1 1 1 0 1 0"
            },
            {
                "line_number": 18,
                "text": "10 (B_L0_4x4) 1 1 1 0 1 1"
            },
            {
                "line_number": 19,
                "text": "11 (B_L1_4x4) 1 1 1 1 0"
            },
            {
                "line_number": 20,
                "text": "12 (B_Bi_4x4) 1 1 1 1 1"
            },
            {
                "line_number": 21,
                "text": "binIdx 0 1 2 3 4 5"
            },
            {
                "line_number": 22,
                "text": "9.3.2.6 Binarization process for coded block pattern"
            },
            {
                "line_number": 23,
                "text": "Input to this process is a request for a binarization for the syntax element coded_block_pattern."
            },
            {
                "line_number": 24,
                "text": "Output of this process is the binarization of the syntax element."
            },
            {
                "line_number": 25,
                "text": "The binarization of coded_block_pattern consists of a prefix part and (when present) a suffix part. The prefix part of the"
            },
            {
                "line_number": 26,
                "text": "binarization is given by the FL binarization of CodedBlockPatternLuma with cMax = 15. When ChromaArrayType is not"
            },
            {
                "line_number": 27,
                "text": "equal to 0 or 3, the suffix part is present and consists of the TU binarization of CodedBlockPatternChroma with cMax = 2."
            },
            {
                "line_number": 28,
                "text": "The relationship between the value of the syntax element coded_block_pattern and the values of CodedBlockPatternLuma"
            },
            {
                "line_number": 29,
                "text": "and CodedBlockPatternChroma is given as specified in clause 7.4.5."
            },
            {
                "line_number": 30,
                "text": "9.3.2.7 Binarization process for mb_qp_delta"
            },
            {
                "line_number": 31,
                "text": "Input to this process is a request for a binarization for the syntax element mb_qp_delta."
            },
            {
                "line_number": 32,
                "text": "Output of this process is the binarization of the syntax element."
            },
            {
                "line_number": 33,
                "text": "The bin string of mb_qp_delta is derived by the U binarization of the mapped value of the syntax element mb_qp_delta,"
            },
            {
                "line_number": 34,
                "text": "where the assignment rule between the signed value of mb_qp_delta and its mapped value is given as specified in Table 9-3."
            },
            {
                "line_number": 35,
                "text": "9.3.3 Decoding process flow"
            },
            {
                "line_number": 36,
                "text": "Input to this process is a binarization of the requested syntax element, maxBinIdxCtx, bypassFlag and ctxIdxOffset as"
            },
            {
                "line_number": 37,
                "text": "specified in clause 9.3.2."
            },
            {
                "line_number": 38,
                "text": "Output of this process is the value of the syntax element."
            },
            {
                "line_number": 39,
                "text": "This process specifies how each bit of a bit string is parsed for each syntax element."
            },
            {
                "line_number": 40,
                "text": "256 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 279,
        "lines": [
            {
                "line_number": 1,
                "text": "After parsing each bit, the resulting bit string is compared to all bin strings of the binarization of the syntax element and"
            },
            {
                "line_number": 2,
                "text": "the following applies:"
            },
            {
                "line_number": 3,
                "text": "– If the bit string is equal to one of the bin strings, the corresponding value of the syntax element is the output."
            },
            {
                "line_number": 4,
                "text": "– Otherwise (the bit string is not equal to one of the bin strings), the next bit is parsed."
            },
            {
                "line_number": 5,
                "text": "While parsing each bin, the variable binIdx is incremented by 1 starting with binIdx being set equal to 0 for the first bin."
            },
            {
                "line_number": 6,
                "text": "When the binarization of the corresponding syntax element consists of a prefix and a suffix binarization part,, the variable"
            },
            {
                "line_number": 7,
                "text": "binIdx is set equal to 0 for the first bin of each part of the bin string (prefix part or suffix part). In this case, after parsing"
            },
            {
                "line_number": 8,
                "text": "the prefix bit string, the parsing process of the suffix bit string related to the binarizations specified in clauses 9.3.2.3 and"
            },
            {
                "line_number": 9,
                "text": "9.3.2.5 is invoked depending on the resulting prefix bit string as specified in clauses 9.3.2.3 and 9.3.2.5. Note that for the"
            },
            {
                "line_number": 10,
                "text": "binarization of the syntax element coded_block_pattern, the suffix bit string is present regardless of the prefix bit string of"
            },
            {
                "line_number": 11,
                "text": "length 4 as specified in clause 9.3.2.6."
            },
            {
                "line_number": 12,
                "text": "Depending on the variable bypassFlag, the following applies:"
            },
            {
                "line_number": 13,
                "text": "– If bypassFlag is equal to 1, the bypass decoding process as specified in clause 9.3.3.2.3 is applied for parsing the value"
            },
            {
                "line_number": 14,
                "text": "of the bins from the bitstream."
            },
            {
                "line_number": 15,
                "text": "– Otherwise (bypassFlag is equal to 0), the parsing of each bin is specified by the following two ordered steps:"
            },
            {
                "line_number": 16,
                "text": "1. Given binIdx, maxBinIdxCtx and ctxIdxOffset, ctxIdx is derived as specified in clause 9.3.3.1."
            },
            {
                "line_number": 17,
                "text": "2. Given ctxIdx, the value of the bin from the bitstream as specified in clause 9.3.3.2 is decoded."
            },
            {
                "line_number": 18,
                "text": "9.3.3.1 Derivation process for ctxIdx"
            },
            {
                "line_number": 19,
                "text": "Inputs to this process are binIdx, maxBinIdxCtx and ctxIdxOffset."
            },
            {
                "line_number": 20,
                "text": "Output of this process is ctxIdx."
            },
            {
                "line_number": 21,
                "text": "Table 9-39 shows the assignment of ctxIdx increments (ctxIdxInc) to binIdx for all ctxIdxOffset values except those related"
            },
            {
                "line_number": 22,
                "text": "to the syntax elements coded_block_flag, significant_coeff_flag, last_significant_coeff_flag, and coeff_abs_level_minus1."
            },
            {
                "line_number": 23,
                "text": "The ctxIdx to be used with a specific binIdx is specified by first determining the ctxIdxOffset associated with the given"
            },
            {
                "line_number": 24,
                "text": "bin string or part thereof. The ctxIdx is determined as follows:"
            },
            {
                "line_number": 25,
                "text": "– If the ctxIdxOffset is listed in Table 9-39, the ctxIdx for a binIdx is the sum of ctxIdxOffset and ctxIdxInc, which is"
            },
            {
                "line_number": 26,
                "text": "found in Table 9-39. When more than one value is listed in Table 9-39 for a binIdx, the assignment process for"
            },
            {
                "line_number": 27,
                "text": "ctxIdxInc for that binIdx is further specified in the clauses given in parenthesis of the corresponding table entry."
            },
            {
                "line_number": 28,
                "text": "– Otherwise (ctxIdxOffset is not listed in Table 9-39), the ctxIdx is specified to be the sum of the following terms:"
            },
            {
                "line_number": 29,
                "text": "ctxIdxOffset and ctxIdxBlockCatOffset(ctxBlockCat) as specified in Table 9-40 and ctxIdxInc(ctxBlockCat)."
            },
            {
                "line_number": 30,
                "text": "Clause 9.3.3.1.3 specifies which ctxBlockCat is used. Clause 9.3.3.1.1.9 specifies the assignment of"
            },
            {
                "line_number": 31,
                "text": "ctxIdxInc(ctxBlockCat) for coded_block_flag, and clause 9.3.3.1.3 specifies the assignment of"
            },
            {
                "line_number": 32,
                "text": "ctxIdxInc(ctxBlockCat) for significant_coeff_flag, last_significant_coeff_flag, and coeff_abs_level_minus1."
            },
            {
                "line_number": 33,
                "text": "All bins with binIdx greater than maxBinIdxCtx are parsed using the value of ctxIdx being assigned to binIdx equal to"
            },
            {
                "line_number": 34,
                "text": "maxBinIdxCtx."
            },
            {
                "line_number": 35,
                "text": "All entries in Table 9-39 labelled with \"na\" correspond to values of binIdx that do not occur for the corresponding"
            },
            {
                "line_number": 36,
                "text": "ctxIdxOffset."
            },
            {
                "line_number": 37,
                "text": "ctxIdx = 276 is assigned to the binIdx of mb_type indicating the I_PCM mode. For parsing the value of the corresponding"
            },
            {
                "line_number": 38,
                "text": "bins from the bitstream, the arithmetic decoding process for decisions before termination as specified in clause 9.3.3.2.4 is"
            },
            {
                "line_number": 39,
                "text": "applied."
            },
            {
                "line_number": 40,
                "text": "Rec. ITU-T H.264 (06/2019) 257"
            }
        ]
    },
    {
        "page_number": 280,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-39 – Assignment of ctxIdxInc to binIdx for all ctxIdxOffset values except those related to the syntax"
            },
            {
                "line_number": 2,
                "text": "elements coded_block_flag, significant_coeff_flag, last_significant_coeff_flag, and coeff_abs_level_minus1"
            },
            {
                "line_number": 3,
                "text": "binIdx"
            },
            {
                "line_number": 4,
                "text": "ctxIdxOffset"
            },
            {
                "line_number": 5,
                "text": "0 1 2 3 4 5 >= 6"
            },
            {
                "line_number": 6,
                "text": "0,1,2"
            },
            {
                "line_number": 7,
                "text": "0 na na na na na na"
            },
            {
                "line_number": 8,
                "text": "(clause 9.3.3.1.1.3)"
            },
            {
                "line_number": 9,
                "text": "5,6 6,7"
            },
            {
                "line_number": 10,
                "text": "0,1,2"
            },
            {
                "line_number": 11,
                "text": "3 ctxIdx=276 3 4 (clause (clause 7"
            },
            {
                "line_number": 12,
                "text": "(clause 9.3.3.1.1.3)"
            },
            {
                "line_number": 13,
                "text": "9.3.3.1.2) 9.3.3.1.2)"
            },
            {
                "line_number": 14,
                "text": "0,1,2"
            },
            {
                "line_number": 15,
                "text": "11 na na na na na na"
            },
            {
                "line_number": 16,
                "text": "(clause 9.3.3.1.1.1)"
            },
            {
                "line_number": 17,
                "text": "2,3"
            },
            {
                "line_number": 18,
                "text": "14 0 1 (clause na na na na"
            },
            {
                "line_number": 19,
                "text": "9.3.3.1.2)"
            },
            {
                "line_number": 20,
                "text": "2,3"
            },
            {
                "line_number": 21,
                "text": "17 0 ctxIdx=276 1 2 (clause 3 3"
            },
            {
                "line_number": 22,
                "text": "9.3.3.1.2)"
            },
            {
                "line_number": 23,
                "text": "21 0 1 2 na na na na"
            },
            {
                "line_number": 24,
                "text": "0,1,2"
            },
            {
                "line_number": 25,
                "text": "24 na na na na na na"
            },
            {
                "line_number": 26,
                "text": "(clause 9.3.3.1.1.1)"
            },
            {
                "line_number": 27,
                "text": "4,5"
            },
            {
                "line_number": 28,
                "text": "0,1,2"
            },
            {
                "line_number": 29,
                "text": "27 3 (clause 5 5 5 5"
            },
            {
                "line_number": 30,
                "text": "(clause 9.3.3.1.1.3)"
            },
            {
                "line_number": 31,
                "text": "9.3.3.1.2)"
            },
            {
                "line_number": 32,
                "text": "2,3"
            },
            {
                "line_number": 33,
                "text": "32 0 ctxIdx=276 1 2 (clause 3 3"
            },
            {
                "line_number": 34,
                "text": "9.3.3.1.2)"
            },
            {
                "line_number": 35,
                "text": "2,3"
            },
            {
                "line_number": 36,
                "text": "36 0 1 (clause 3 3 3 na"
            },
            {
                "line_number": 37,
                "text": "9.3.3.1.2)"
            },
            {
                "line_number": 38,
                "text": "0,1,2"
            },
            {
                "line_number": 39,
                "text": "40 3 4 5 6 6 6"
            },
            {
                "line_number": 40,
                "text": "(clause 9.3.3.1.1.7)"
            },
            {
                "line_number": 41,
                "text": "0,1,2"
            },
            {
                "line_number": 42,
                "text": "47 3 4 5 6 6 6"
            },
            {
                "line_number": 43,
                "text": "(clause 9.3.3.1.1.7)"
            },
            {
                "line_number": 44,
                "text": "0,1,2,3"
            },
            {
                "line_number": 45,
                "text": "54 4 5 5 5 5 5"
            },
            {
                "line_number": 46,
                "text": "(clause 9.3.3.1.1.6)"
            },
            {
                "line_number": 47,
                "text": "0,1"
            },
            {
                "line_number": 48,
                "text": "60 2 3 3 3 3 3"
            },
            {
                "line_number": 49,
                "text": "(clause 9.3.3.1.1.5)"
            },
            {
                "line_number": 50,
                "text": "0,1,2"
            },
            {
                "line_number": 51,
                "text": "64 3 3 na na na na"
            },
            {
                "line_number": 52,
                "text": "(clause 9.3.3.1.1.8)"
            },
            {
                "line_number": 53,
                "text": "68 0 na na na na na na"
            },
            {
                "line_number": 54,
                "text": "69 0 0 0 na na na na"
            },
            {
                "line_number": 55,
                "text": "0,1,2"
            },
            {
                "line_number": 56,
                "text": "70 na na na na na na"
            },
            {
                "line_number": 57,
                "text": "(clause 9.3.3.1.1.2)"
            },
            {
                "line_number": 58,
                "text": "0,1,2,3 0,1,2,3 0,1,2,3"
            },
            {
                "line_number": 59,
                "text": "0,1,2,3"
            },
            {
                "line_number": 60,
                "text": "73 (clause (clause (clause na na na"
            },
            {
                "line_number": 61,
                "text": "(clause 9.3.3.1.1.4)"
            },
            {
                "line_number": 62,
                "text": "9.3.3.1.1.4) 9.3.3.1.1.4) 9.3.3.1.1.4)"
            },
            {
                "line_number": 63,
                "text": "4,5,6,7"
            },
            {
                "line_number": 64,
                "text": "0,1,2,3"
            },
            {
                "line_number": 65,
                "text": "77 (clause na na na na na"
            },
            {
                "line_number": 66,
                "text": "(clause 9.3.3.1.1.4)"
            },
            {
                "line_number": 67,
                "text": "9.3.3.1.1.4)"
            },
            {
                "line_number": 68,
                "text": "276 0 na na na na na na"
            },
            {
                "line_number": 69,
                "text": "0,1,2"
            },
            {
                "line_number": 70,
                "text": "399 na na na na na na"
            },
            {
                "line_number": 71,
                "text": "(clause 9.3.3.1.1.10)"
            },
            {
                "line_number": 72,
                "text": "258 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 281,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-40 shows the values of ctxIdxBlockCatOffset depending on ctxBlockCat for the syntax elements"
            },
            {
                "line_number": 2,
                "text": "coded_block_flag, significant_coeff_flag, last_significant_coeff_flag, and coeff_abs_level_minus1. The specification of"
            },
            {
                "line_number": 3,
                "text": "ctxBlockCat is given in Table 9-42."
            },
            {
                "line_number": 4,
                "text": "Table 9-40 – Assignment of ctxIdxBlockCatOffset to ctxBlockCat for syntax elements coded_block_flag,"
            },
            {
                "line_number": 5,
                "text": "significant_coeff_flag, last_significant_coeff_flag, and coeff_abs_level_minus1"
            },
            {
                "line_number": 6,
                "text": "ctxBlockCat (as specified in Table 9-42)"
            },
            {
                "line_number": 7,
                "text": "Syntax element"
            },
            {
                "line_number": 8,
                "text": "0 1 2 3 4 5 6 7 8 9 10 11 12 13"
            },
            {
                "line_number": 9,
                "text": "coded_block_flag 0 4 8 12 16 0 0 4 8 4 0 4 8 8"
            },
            {
                "line_number": 10,
                "text": "significant_coeff_flag 0 15 29 44 47 0 0 15 29 0 0 15 29 0"
            },
            {
                "line_number": 11,
                "text": "last_significant_coeff_flag 0 15 29 44 47 0 0 15 29 0 0 15 29 0"
            },
            {
                "line_number": 12,
                "text": "coeff_abs_level_minus1 0 10 20 30 39 0 0 10 20 0 0 10 20 0"
            },
            {
                "line_number": 13,
                "text": "9.3.3.1.1 Assignment process of ctxIdxInc using neighbouring syntax elements"
            },
            {
                "line_number": 14,
                "text": "Clause 9.3.3.1.1.1 specifies the derivation process of ctxIdxInc for the syntax element mb_skip_flag."
            },
            {
                "line_number": 15,
                "text": "Clause 9.3.3.1.1.2 specifies the derivation process of ctxIdxInc for the syntax element mb_field_decoding_flag."
            },
            {
                "line_number": 16,
                "text": "Clause 9.3.3.1.1.3 specifies the derivation process of ctxIdxInc for the syntax element mb_type."
            },
            {
                "line_number": 17,
                "text": "Clause 9.3.3.1.1.4 specifies the derivation process of ctxIdxInc for the syntax element coded_block_pattern."
            },
            {
                "line_number": 18,
                "text": "Clause 9.3.3.1.1.5 specifies the derivation process of ctxIdxInc for the syntax element mb_qp_delta."
            },
            {
                "line_number": 19,
                "text": "Clause 9.3.3.1.1.6 specifies the derivation process of ctxIdxInc for the syntax elements ref_idx_l0 and ref_idx_l1."
            },
            {
                "line_number": 20,
                "text": "Clause 9.3.3.1.1.7 specifies the derivation process of ctxIdxInc for the syntax elements mvd_l0 and mvd_l1."
            },
            {
                "line_number": 21,
                "text": "Clause 9.3.3.1.1.8 specifies the derivation process of ctxIdxInc for the syntax element intra_chroma_pred_mode."
            },
            {
                "line_number": 22,
                "text": "Clause 9.3.3.1.1.9 specifies the derivation process of ctxIdxInc for the syntax element coded_block_flag."
            },
            {
                "line_number": 23,
                "text": "Clause 9.3.3.1.1.10 specifies the derivation process of ctxIdxInc for the syntax element transform_size_8x8_flag."
            },
            {
                "line_number": 24,
                "text": "9.3.3.1.1.1 Derivation process of ctxIdxInc for the syntax element mb_skip_flag"
            },
            {
                "line_number": 25,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 26,
                "text": "When MbaffFrameFlag is equal to 1 and mb_field_decoding_flag has not been decoded (yet) for the current macroblock"
            },
            {
                "line_number": 27,
                "text": "pair with top macroblock address 2 * ( CurrMbAddr / 2 ), the inference rule for the syntax element"
            },
            {
                "line_number": 28,
                "text": "mb_field_decoding_flag as specified in clause 7.4.4 is applied."
            },
            {
                "line_number": 29,
                "text": "The derivation process for neighbouring macroblocks specified in clause 6.4.11.1 is invoked and the output is assigned to"
            },
            {
                "line_number": 30,
                "text": "mbAddrA and mbAddrB."
            },
            {
                "line_number": 31,
                "text": "Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 32,
                "text": "– If mbAddrN is not available or mb_skip_flag for the macroblock mbAddrN is equal to 1, condTermFlagN is set equal"
            },
            {
                "line_number": 33,
                "text": "to 0."
            },
            {
                "line_number": 34,
                "text": "– Otherwise (mbAddrN is available and mb_skip_flag for the macroblock mbAddrN is equal to 0), condTermFlagN is"
            },
            {
                "line_number": 35,
                "text": "set equal to 1."
            },
            {
                "line_number": 36,
                "text": "The variable ctxIdxInc is derived by:"
            },
            {
                "line_number": 37,
                "text": "ctxIdxInc = condTermFlagA + condTermFlagB (9-7)"
            },
            {
                "line_number": 38,
                "text": "9.3.3.1.1.2 Derivation process of ctxIdxInc for the syntax element mb_field_decoding_flag"
            },
            {
                "line_number": 39,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 40,
                "text": "Rec. ITU-T H.264 (06/2019) 259"
            }
        ]
    },
    {
        "page_number": 282,
        "lines": [
            {
                "line_number": 1,
                "text": "The derivation process for neighbouring macroblock addresses and their availability in MBAFF frames as specified in"
            },
            {
                "line_number": 2,
                "text": "clause 6.4.10 is invoked and the output is assigned to mbAddrA and mbAddrB."
            },
            {
                "line_number": 3,
                "text": "When both macroblocks mbAddrN and mbAddrN + 1 have mb_type equal to P_Skip or B_Skip, the inference rule for the"
            },
            {
                "line_number": 4,
                "text": "syntax element mb_field_decoding_flag as specified in clause 7.4.4 is applied for the macroblock mbAddrN."
            },
            {
                "line_number": 5,
                "text": "Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 6,
                "text": "– If any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 7,
                "text": "– mbAddrN is not available,"
            },
            {
                "line_number": 8,
                "text": "– the macroblock mbAddrN is a frame macroblock."
            },
            {
                "line_number": 9,
                "text": "– Otherwise, condTermFlagN is set equal to 1."
            },
            {
                "line_number": 10,
                "text": "The variable ctxIdxInc is derived by"
            },
            {
                "line_number": 11,
                "text": "ctxIdxInc = condTermFlagA + condTermFlagB (9-8)"
            },
            {
                "line_number": 12,
                "text": "9.3.3.1.1.3 Derivation process of ctxIdxInc for the syntax element mb_type"
            },
            {
                "line_number": 13,
                "text": "Input to this process is ctxIdxOffset."
            },
            {
                "line_number": 14,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 15,
                "text": "The derivation process for neighbouring macroblocks specified in clause 6.4.11.1 is invoked and the output is assigned to"
            },
            {
                "line_number": 16,
                "text": "mbAddrA and mbAddrB."
            },
            {
                "line_number": 17,
                "text": "Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 18,
                "text": "– If any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 19,
                "text": "– mbAddrN is not available,"
            },
            {
                "line_number": 20,
                "text": "– ctxIdxOffset is equal to 0 and mb_type for the macroblock mbAddrN is equal to SI,"
            },
            {
                "line_number": 21,
                "text": "– ctxIdxOffset is equal to 3 and mb_type for the macroblock mbAddrN is equal to I_NxN,"
            },
            {
                "line_number": 22,
                "text": "– ctxIdxOffset is equal to 27 and mb_type for the macroblock mbAddrN is equal to B_Skip or B_Direct_16x16."
            },
            {
                "line_number": 23,
                "text": "– Otherwise, condTermFlagN is set equal to 1."
            },
            {
                "line_number": 24,
                "text": "The variable ctxIdxInc is derived as"
            },
            {
                "line_number": 25,
                "text": "ctxIdxInc = condTermFlagA + condTermFlagB (9-9)"
            },
            {
                "line_number": 26,
                "text": "9.3.3.1.1.4 Derivation process of ctxIdxInc for the syntax element coded_block_pattern"
            },
            {
                "line_number": 27,
                "text": "Inputs to this process are ctxIdxOffset and binIdx."
            },
            {
                "line_number": 28,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 29,
                "text": "Depending on the value of the variable ctxIdxOffset, the following ordered steps are specified:"
            },
            {
                "line_number": 30,
                "text": "– If ctxIdxOffset is equal to 73, the following applies:"
            },
            {
                "line_number": 31,
                "text": "1. The derivation process for neighbouring 8x8 luma blocks specified in clause 6.4.11.2 is invoked with"
            },
            {
                "line_number": 32,
                "text": "luma8x8BlkIdx = binIdx as input and the output is assigned to mbAddrA, mbAddrB, luma8x8BlkIdxA, and"
            },
            {
                "line_number": 33,
                "text": "luma8x8BlkIdxB."
            },
            {
                "line_number": 34,
                "text": "2. Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 35,
                "text": "– If any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 36,
                "text": "– mbAddrN is not available,"
            },
            {
                "line_number": 37,
                "text": "– mb_type for the macroblock mbAddrN is equal to I_PCM,"
            },
            {
                "line_number": 38,
                "text": "– the macroblock mbAddrN is not the current macroblock CurrMbAddr and the macroblock mbAddrN"
            },
            {
                "line_number": 39,
                "text": "does not have mb_type equal to P_Skip or B_Skip, and"
            },
            {
                "line_number": 40,
                "text": "( ( CodedBlockPatternLuma >> luma8x8BlkIdxN ) & 1 ) is not equal to 0 for the value of"
            },
            {
                "line_number": 41,
                "text": "CodedBlockPatternLuma for the macroblock mbAddrN,"
            },
            {
                "line_number": 42,
                "text": "260 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 283,
        "lines": [
            {
                "line_number": 1,
                "text": "– the macroblock mbAddrN is the current macroblock CurrMbAddr and the prior decoded bin value b"
            },
            {
                "line_number": 2,
                "text": "k"
            },
            {
                "line_number": 3,
                "text": "of coded_block_pattern with k = luma8x8BlkIdxN is not equal to 0."
            },
            {
                "line_number": 4,
                "text": "– Otherwise, condTermFlagN is set equal to 1."
            },
            {
                "line_number": 5,
                "text": "3. The variable ctxIdxInc is derived as"
            },
            {
                "line_number": 6,
                "text": "ctxIdxInc = condTermFlagA + 2 * condTermFlagB (9-10)"
            },
            {
                "line_number": 7,
                "text": "– Otherwise (ctxIdxOffset is equal to 77), the following ordered steps are specified:"
            },
            {
                "line_number": 8,
                "text": "1. The derivation process for neighbouring macroblocks specified in clause 6.4.11.1 is invoked and the output is"
            },
            {
                "line_number": 9,
                "text": "assigned to mbAddrA and mbAddrB."
            },
            {
                "line_number": 10,
                "text": "2. Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 11,
                "text": "– If mbAddrN is available and mb_type for the macroblock mbAddrN is equal to I_PCM, condTermFlagN is"
            },
            {
                "line_number": 12,
                "text": "set equal to 1."
            },
            {
                "line_number": 13,
                "text": "– Otherwise, if any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 14,
                "text": "– mbAddrN is not available or the macroblock mbAddrN has mb_type equal to P_Skip or B_Skip,"
            },
            {
                "line_number": 15,
                "text": "– binIdx is equal to 0 and CodedBlockPatternChroma for the macroblock mbAddrN is equal to 0,"
            },
            {
                "line_number": 16,
                "text": "– binIdx is equal to 1 and CodedBlockPatternChroma for the macroblock mbAddrN is not equal to 2."
            },
            {
                "line_number": 17,
                "text": "– Otherwise, condTermFlagN is set equal to 1."
            },
            {
                "line_number": 18,
                "text": "3. The variable ctxIdxInc is derived as"
            },
            {
                "line_number": 19,
                "text": "ctxIdxInc = condTermFlagA + 2 * condTermFlagB + ( ( binIdx = = 1 ) ? 4 : 0 ) (9-11)"
            },
            {
                "line_number": 20,
                "text": "NOTE – When a macroblock is coded in Intra_16x16 macroblock prediction mode, the values of CodedBlockPatternLuma and"
            },
            {
                "line_number": 21,
                "text": "CodedBlockPatternChroma for the macroblock are derived from mb_type as specified in Table 7-11."
            },
            {
                "line_number": 22,
                "text": "9.3.3.1.1.5 Derivation process of ctxIdxInc for the syntax element mb_qp_delta"
            },
            {
                "line_number": 23,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 24,
                "text": "Let prevMbAddr be the macroblock address of the macroblock that precedes the current macroblock in decoding order."
            },
            {
                "line_number": 25,
                "text": "When the current macroblock is the first macroblock of a slice, prevMbAddr is marked as not available."
            },
            {
                "line_number": 26,
                "text": "Let the variable ctxIdxInc be derived as follows:"
            },
            {
                "line_number": 27,
                "text": "– If any of the following conditions are true, ctxIdxInc is set equal to 0:"
            },
            {
                "line_number": 28,
                "text": "– prevMbAddr is not available or the macroblock prevMbAddr has mb_type equal to P_Skip or B_Skip,"
            },
            {
                "line_number": 29,
                "text": "– mb_type of the macroblock prevMbAddr is equal to I_PCM,"
            },
            {
                "line_number": 30,
                "text": "– The macroblock prevMbAddr is not coded in Intra_16x16 macroblock prediction mode and both"
            },
            {
                "line_number": 31,
                "text": "CodedBlockPatternLuma and CodedBlockPatternChroma for the macroblock prevMbAddr are equal to 0,"
            },
            {
                "line_number": 32,
                "text": "– mb_qp_delta for the macroblock prevMbAddr is equal to 0."
            },
            {
                "line_number": 33,
                "text": "– Otherwise, ctxIdxInc is set equal to 1."
            },
            {
                "line_number": 34,
                "text": "9.3.3.1.1.6 Derivation process of ctxIdxInc for the syntax elements ref_idx_l0 and ref_idx_l1"
            },
            {
                "line_number": 35,
                "text": "Input to this process is mbPartIdx."
            },
            {
                "line_number": 36,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 37,
                "text": "The interpretation of ref_idx_lX and Pred_LX within this clause is specified as follows:"
            },
            {
                "line_number": 38,
                "text": "– If this process is invoked for the derivation of ref_idx_l0, ref_idx_lX is interpreted as ref_idx_l0 and Pred_LX is"
            },
            {
                "line_number": 39,
                "text": "interpreted as Pred_L0."
            },
            {
                "line_number": 40,
                "text": "– Otherwise (this process is invoked for the derivation of ref_idx_l1), ref_idx_lX is interpreted as ref_idx_l1 and"
            },
            {
                "line_number": 41,
                "text": "Pred_LX is interpreted as Pred_L1."
            },
            {
                "line_number": 42,
                "text": "The derivation process for neighbouring partitions specified in clause 6.4.11.7 is invoked with mbPartIdx, currSubMbType"
            },
            {
                "line_number": 43,
                "text": "set equal to sub_mb_type[ mbPartIdx ], and subMbPartIdx = 0 as input and the output is assigned to"
            },
            {
                "line_number": 44,
                "text": "mbAddrA\\mbPartIdxA and mbAddrB\\mbPartIdxB."
            },
            {
                "line_number": 45,
                "text": "Rec. ITU-T H.264 (06/2019) 261"
            }
        ]
    },
    {
        "page_number": 284,
        "lines": [
            {
                "line_number": 1,
                "text": "With ref_idx_lX[ mbPartIdxN ] (with N being either A or B) specifying the syntax element for the macroblock mbAddrN,"
            },
            {
                "line_number": 2,
                "text": "let the variable refIdxZeroFlagN be derived as follows:"
            },
            {
                "line_number": 3,
                "text": "– If MbaffFrameFlag is equal to 1, the current macroblock is a frame macroblock, and the macroblock mbAddrN is a"
            },
            {
                "line_number": 4,
                "text": "field macroblock,"
            },
            {
                "line_number": 5,
                "text": "refIdxZeroFlagN = ( ( ref_idx_lX[ mbPartIdxN ] > 1 ) ? 0 : 1 ) (9-12)"
            },
            {
                "line_number": 6,
                "text": "– Otherwise,"
            },
            {
                "line_number": 7,
                "text": "refIdxZeroFlagN = ( ( ref_idx_lX[ mbPartIdxN ] > 0 ) ? 0 : 1 ) (9-13)"
            },
            {
                "line_number": 8,
                "text": "Let the variable predModeEqualFlagN be specified as follows:"
            },
            {
                "line_number": 9,
                "text": "– If mb_type for the macroblock mbAddrN is equal to B_Direct_16x16 or B_Skip, predModeEqualFlagN is set equal"
            },
            {
                "line_number": 10,
                "text": "to 0."
            },
            {
                "line_number": 11,
                "text": "– Otherwise, if the macroblock mbAddrN has mb_type equal to P_8x8 or B_8x8, the following applies:"
            },
            {
                "line_number": 12,
                "text": "– If SubMbPredMode( sub_mb_type[ mbPartIdxN ] ) is not equal to Pred_LX and not equal to BiPred,"
            },
            {
                "line_number": 13,
                "text": "predModeEqualFlagN is set equal to 0, where sub_mb_type specifies the syntax element list for the macroblock"
            },
            {
                "line_number": 14,
                "text": "mbAddrN."
            },
            {
                "line_number": 15,
                "text": "– Otherwise, predModeEqualFlagN is set equal to 1."
            },
            {
                "line_number": 16,
                "text": "– Otherwise, the following applies:"
            },
            {
                "line_number": 17,
                "text": "– If MbPartPredMode( mb_type, mbPartIdxN ) is not equal to Pred_LX and not equal to BiPred,"
            },
            {
                "line_number": 18,
                "text": "predModeEqualFlagN is set equal to 0, where mb_type specifies the syntax element for the macroblock"
            },
            {
                "line_number": 19,
                "text": "mbAddrN."
            },
            {
                "line_number": 20,
                "text": "– Otherwise, predModeEqualFlagN is set equal to 1."
            },
            {
                "line_number": 21,
                "text": "Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 22,
                "text": "– If any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 23,
                "text": "– mbAddrN is not available,"
            },
            {
                "line_number": 24,
                "text": "– the macroblock mbAddrN has mb_type equal to P_Skip or B_Skip,"
            },
            {
                "line_number": 25,
                "text": "– the macroblock mbAddrN is coded in an Intra macroblock prediction mode,"
            },
            {
                "line_number": 26,
                "text": "– predModeEqualFlagN is equal to 0,"
            },
            {
                "line_number": 27,
                "text": "– refIdxZeroFlagN is equal to 1."
            },
            {
                "line_number": 28,
                "text": "– Otherwise, condTermFlagN is set equal to 1."
            },
            {
                "line_number": 29,
                "text": "The variable ctxIdxInc is derived as"
            },
            {
                "line_number": 30,
                "text": "ctxIdxInc = condTermFlagA + 2 * condTermFlagB (9-14)"
            },
            {
                "line_number": 31,
                "text": "9.3.3.1.1.7 Derivation process of ctxIdxInc for the syntax elements mvd_l0 and mvd_l1"
            },
            {
                "line_number": 32,
                "text": "Inputs to this process are mbPartIdx, subMbPartIdx, and ctxIdxOffset."
            },
            {
                "line_number": 33,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 34,
                "text": "The interpretation of mvd_lX and Pred_LX within this clause is specified as follows:"
            },
            {
                "line_number": 35,
                "text": "– If this process is invoked for the derivation of mvd_l0, mvd_lX is interpreted as mvd_l0 and Pred_LX is interpreted"
            },
            {
                "line_number": 36,
                "text": "as Pred_L0."
            },
            {
                "line_number": 37,
                "text": "– Otherwise (this process is invoked for the derivation of mvd_l1), mvd_lX is interpreted as mvd_l1 and Pred_LX is"
            },
            {
                "line_number": 38,
                "text": "interpreted as Pred_L1."
            },
            {
                "line_number": 39,
                "text": "The derivation process for neighbouring partitions specified in clause 6.4.11.7 is invoked with mbPartIdx, currSubMbType"
            },
            {
                "line_number": 40,
                "text": "set equal to sub_mb_type[ mbPartIdx ], and subMbPartIdx as input and the output is assigned to"
            },
            {
                "line_number": 41,
                "text": "mbAddrA\\mbPartIdxA\\subMbPartIdxA and mbAddrB\\mbPartIdxB\\subMbPartIdxB."
            },
            {
                "line_number": 42,
                "text": "Let the variable compIdx be derived as follows:"
            },
            {
                "line_number": 43,
                "text": "– If ctxIdxOffset is equal to 40, compIdx is set equal to 0."
            },
            {
                "line_number": 44,
                "text": "262 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 285,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise (ctxIdxOffset is equal to 47), compIdx is set equal to 1."
            },
            {
                "line_number": 2,
                "text": "Let the variable predModeEqualFlagN be specified as follows:"
            },
            {
                "line_number": 3,
                "text": "– If mb_type for the macroblock mbAddrN is equal to B_Direct_16x16 or B_Skip, predModeEqualFlagN is set equal"
            },
            {
                "line_number": 4,
                "text": "to 0."
            },
            {
                "line_number": 5,
                "text": "– Otherwise, if the macroblock mbAddrN has mb_type equal to P_8x8 or B_8x8, the following applies:"
            },
            {
                "line_number": 6,
                "text": "– If SubMbPredMode( sub_mb_type[ mbPartIdxN ] ) is not equal to Pred_LX and not equal to BiPred,"
            },
            {
                "line_number": 7,
                "text": "predModeEqualFlagN is set equal to 0, where sub_mb_type specifies the syntax element list for the macroblock"
            },
            {
                "line_number": 8,
                "text": "mbAddrN."
            },
            {
                "line_number": 9,
                "text": "– Otherwise, predModeEqualFlagN is set equal to 1."
            },
            {
                "line_number": 10,
                "text": "– Otherwise, the following applies:"
            },
            {
                "line_number": 11,
                "text": "– If MbPartPredMode( mb_type, mbPartIdxN ) is not equal to Pred_LX and not equal to BiPred,"
            },
            {
                "line_number": 12,
                "text": "predModeEqualFlagN is set equal to 0, where mb_type specifies the syntax element for the macroblock"
            },
            {
                "line_number": 13,
                "text": "mbAddrN."
            },
            {
                "line_number": 14,
                "text": "– Otherwise, predModeEqualFlagN is set equal to 1."
            },
            {
                "line_number": 15,
                "text": "Let the variable absMvdCompN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 16,
                "text": "– If any of the following conditions are true, absMvdCompN is set equal to 0:"
            },
            {
                "line_number": 17,
                "text": "– mbAddrN is not available,"
            },
            {
                "line_number": 18,
                "text": "– the macroblock mbAddrN has mb_type equal to P_Skip or B_Skip,"
            },
            {
                "line_number": 19,
                "text": "– the macroblock mbAddrN is coded in an Intra macroblock prediction mode,"
            },
            {
                "line_number": 20,
                "text": "– predModeEqualFlagN is equal to 0."
            },
            {
                "line_number": 21,
                "text": "– Otherwise, the following applies:"
            },
            {
                "line_number": 22,
                "text": "– If compIdx is equal to 1, MbaffFrameFlag is equal to 1, the current macroblock is a frame macroblock, and the"
            },
            {
                "line_number": 23,
                "text": "macroblock mbAddrN is a field macroblock,"
            },
            {
                "line_number": 24,
                "text": "absMvdCompN = Abs( mvd_lX[ mbPartIdxN ][ subMbPartIdxN ][ compIdx ] ) * 2 (9-15)"
            },
            {
                "line_number": 25,
                "text": "– Otherwise, if compIdx is equal to 1, MbaffFrameFlag is equal to 1, the current macroblock is a field macroblock,"
            },
            {
                "line_number": 26,
                "text": "and the macroblock mbAddrN is a frame macroblock,"
            },
            {
                "line_number": 27,
                "text": "absMvdCompN = Abs( mvd_lX[ mbPartIdxN ][ subMbPartIdxN ][ compIdx ] ) / 2 (9-16)"
            },
            {
                "line_number": 28,
                "text": "– Otherwise,"
            },
            {
                "line_number": 29,
                "text": "absMvdCompN = Abs( mvd_lX[ mbPartIdxN ][ subMbPartIdxN ][ compIdx ] ) (9-17)"
            },
            {
                "line_number": 30,
                "text": "The variable ctxIdxInc is derived as follows:"
            },
            {
                "line_number": 31,
                "text": "– If absMvdCompA is greater than 32 or absMvdCompA is greater than 32, ctxIdxInc is set equal to 2."
            },
            {
                "line_number": 32,
                "text": "– Otherwise, if absMvdCompA + absMvdCompB is greater than 32, ctxIdxInc is set equal to 2."
            },
            {
                "line_number": 33,
                "text": "– Otherwise, if absMvdCompA + absMvdCompB is greater than 2, ctxIdxInc is set equal to 1."
            },
            {
                "line_number": 34,
                "text": "– Otherwise (absMvdCompA + absMvdCompB is less than or equal to 2), ctxIdxInc is set equal to 0."
            },
            {
                "line_number": 35,
                "text": "NOTE – Although the above form of expression for the derivation of ctxIdxInc could have been somewhat simplified, the form"
            },
            {
                "line_number": 36,
                "text": "shown above was selected to assist the reader in avoiding a potential dynamic range problem in the derivation process."
            },
            {
                "line_number": 37,
                "text": "9.3.3.1.1.8 Derivation process of ctxIdxInc for the syntax element intra_chroma_pred_mode"
            },
            {
                "line_number": 38,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 39,
                "text": "The derivation process for neighbouring macroblocks specified in clause 6.4.11.1 is invoked and the output is assigned to"
            },
            {
                "line_number": 40,
                "text": "mbAddrA and mbAddrB."
            },
            {
                "line_number": 41,
                "text": "Let the variable condTermFlagN (with N being replaced by either A or B) be derived as follows:"
            },
            {
                "line_number": 42,
                "text": "– If any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 43,
                "text": "Rec. ITU-T H.264 (06/2019) 263"
            }
        ]
    },
    {
        "page_number": 286,
        "lines": [
            {
                "line_number": 1,
                "text": "– mbAddrN is not available,"
            },
            {
                "line_number": 2,
                "text": "– The macroblock mbAddrN is coded in an Inter macroblock prediction mode,"
            },
            {
                "line_number": 3,
                "text": "– mb_type for the macroblock mbAddrN is equal to I_PCM,"
            },
            {
                "line_number": 4,
                "text": "– intra_chroma_pred_mode for the macroblock mbAddrN is equal to 0."
            },
            {
                "line_number": 5,
                "text": "– Otherwise, condTermFlagN is set equal to 1."
            },
            {
                "line_number": 6,
                "text": "The variable ctxIdxInc is derived by:"
            },
            {
                "line_number": 7,
                "text": "ctxIdxInc = condTermFlagA + condTermFlagB (9-18)"
            },
            {
                "line_number": 8,
                "text": "9.3.3.1.1.9 Derivation process of ctxIdxInc for the syntax element coded_block_flag"
            },
            {
                "line_number": 9,
                "text": "Input to this process is ctxBlockCat and additional input is specified as follows:"
            },
            {
                "line_number": 10,
                "text": "– If ctxBlockCat is equal to 0, 6, or 10, no additional input."
            },
            {
                "line_number": 11,
                "text": "– Otherwise, if ctxBlockCat is equal to 1 or 2, luma4x4BlkIdx."
            },
            {
                "line_number": 12,
                "text": "– Otherwise, if ctxBlockCat is equal to 3, the chroma component index iCbCr."
            },
            {
                "line_number": 13,
                "text": "– Otherwise, if ctxBlockCat is equal to 4, chroma4x4BlkIdx and the chroma component index iCbCr."
            },
            {
                "line_number": 14,
                "text": "– Otherwise, if ctxBlockCat is equal to 5, luma8x8BlkIdx."
            },
            {
                "line_number": 15,
                "text": "– Otherwise, if ctxBlockCat is equal to 7 or 8, cb4x4BlkIdx."
            },
            {
                "line_number": 16,
                "text": "– Otherwise, if ctxBlockCat is equal to 9, cb8x8BlkIdx."
            },
            {
                "line_number": 17,
                "text": "– Otherwise, if ctxBlockCat is equal to 11 or 12, cr4x4BlkIdx."
            },
            {
                "line_number": 18,
                "text": "– Otherwise (ctxBlockCat is equal to 13), cr8x8BlkIdx."
            },
            {
                "line_number": 19,
                "text": "Output of this process is ctxIdxInc( ctxBlockCat )."
            },
            {
                "line_number": 20,
                "text": "Let the variable transBlockN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 21,
                "text": "– If ctxBlockCat is equal to 0, 6, or 10, the following ordered steps are specified:"
            },
            {
                "line_number": 22,
                "text": "1. The derivation process for neighbouring macroblocks specified in clause 6.4.11.1 is invoked and the output is"
            },
            {
                "line_number": 23,
                "text": "assigned to mbAddrN (with N being either A or B)."
            },
            {
                "line_number": 24,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 25,
                "text": "– If mbAddrN is available and the macroblock mbAddrN is coded in Intra_16x16 macroblock prediction"
            },
            {
                "line_number": 26,
                "text": "mode, the following applies:"
            },
            {
                "line_number": 27,
                "text": "– If ctxBlockCat is equal to 0, the luma DC block of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 28,
                "text": "– Otherwise, if ctxBlockCat is equal to 6, the Cb DC block of macroblock mbAddrN is assigned to"
            },
            {
                "line_number": 29,
                "text": "transBlockN."
            },
            {
                "line_number": 30,
                "text": "– Otherwise (ctxBlockCat is equal to 10), the Cr DC block of macroblock mbAddrN is assigned to"
            },
            {
                "line_number": 31,
                "text": "transBlockN."
            },
            {
                "line_number": 32,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 33,
                "text": "– Otherwise, if ctxBlockCat is equal to 1 or 2, the following ordered steps are specified:"
            },
            {
                "line_number": 34,
                "text": "1. The derivation process for neighbouring 4x4 luma blocks specified in clause 6.4.11.4 is invoked with"
            },
            {
                "line_number": 35,
                "text": "luma4x4BlkIdx as input and the output is assigned to mbAddrN, luma4x4BlkIdxN (with N being either A or B)."
            },
            {
                "line_number": 36,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 37,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 38,
                "text": "I_PCM, ( ( CodedBlockPatternLuma >> ( luma4x4BlkIdxN >>2 ) ) & 1 ) is not equal to 0 for the"
            },
            {
                "line_number": 39,
                "text": "macroblock mbAddrN, and transform_size_8x8_flag is equal to 0 for the macroblock mbAddrN, the 4x4"
            },
            {
                "line_number": 40,
                "text": "luma block with index luma4x4BlkIdxN of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 41,
                "text": "– Otherwise, if mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip or"
            },
            {
                "line_number": 42,
                "text": "B_Skip, ( ( CodedBlockPatternLuma >> ( luma4x4BlkIdxN >>2 ) ) & 1 ) is not equal to 0 for the"
            },
            {
                "line_number": 43,
                "text": "macroblock mbAddrN, and transform_size_8x8_flag is equal to 1 for the macroblock mbAddrN, the 8x8"
            },
            {
                "line_number": 44,
                "text": "luma block with index ( luma4x4BlkIdxN >> 2 ) of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 45,
                "text": "264 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 287,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 2,
                "text": "– Otherwise, if ctxBlockCat is equal to 3, the following ordered steps are specified:"
            },
            {
                "line_number": 3,
                "text": "1. The derivation process for neighbouring macroblocks specified in clause 6.4.11.1 is invoked and the output is"
            },
            {
                "line_number": 4,
                "text": "assigned to mbAddrN (with N being either A or B)."
            },
            {
                "line_number": 5,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 6,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 7,
                "text": "I_PCM, and CodedBlockPatternChroma is not equal to 0 for the macroblock mbAddrN, the chroma DC"
            },
            {
                "line_number": 8,
                "text": "block of chroma component iCbCr of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 9,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 10,
                "text": "– Otherwise, if ctxBlockCat is equal to 4, the following ordered steps are specified:"
            },
            {
                "line_number": 11,
                "text": "1. The derivation process for neighbouring 4x4 chroma blocks specified in clause 6.4.11.5 is invoked with"
            },
            {
                "line_number": 12,
                "text": "chroma4x4BlkIdx as input and the output is assigned to mbAddrN, chroma4x4BlkIdxN (with N being either A"
            },
            {
                "line_number": 13,
                "text": "or B)."
            },
            {
                "line_number": 14,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 15,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 16,
                "text": "I_PCM, and CodedBlockPatternChroma is equal to 2 for the macroblock mbAddrN, the 4x4 chroma block"
            },
            {
                "line_number": 17,
                "text": "with chroma4x4BlkIdxN of the chroma component iCbCr of macroblock mbAddrN is assigned to"
            },
            {
                "line_number": 18,
                "text": "transBlockN."
            },
            {
                "line_number": 19,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 20,
                "text": "– Otherwise, if ctxBlockCat is equal to 5, the following ordered steps are specified:"
            },
            {
                "line_number": 21,
                "text": "1. The derivation process for neighbouring 8x8 luma blocks specified in clause 6.4.11.2 is invoked with"
            },
            {
                "line_number": 22,
                "text": "luma8x8BlkIdx as input and the output is assigned to mbAddrN, luma8x8BlkIdxN (with N being either A or B)."
            },
            {
                "line_number": 23,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 24,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 25,
                "text": "I_PCM, ( ( CodedBlockPatternLuma >>luma8x8BlkIdx) & 1 ) is not equal to 0 for the macroblock"
            },
            {
                "line_number": 26,
                "text": "mbAddrN, and transform_size_8x8_flag is equal to 1 for the macroblock mbAddrN, the 8x8 luma block"
            },
            {
                "line_number": 27,
                "text": "with index luma8x8BlkIdxN of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 28,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 29,
                "text": "– Otherwise, if ctxBlockCat is equal to7 or 8, the following ordered steps are specified:"
            },
            {
                "line_number": 30,
                "text": "1. The derivation process for neighbouring 4x4 Cb blocks specified in clause 6.4.11.5 is invoked with"
            },
            {
                "line_number": 31,
                "text": "cb4x4BlkIdx as input and the output is assigned to mbAddrN, cb4x4BlkIdxN (with N being either A or B)."
            },
            {
                "line_number": 32,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 33,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 34,
                "text": "I_PCM, (( CodedBlockPatternLuma >> ( cb4x4BlkIdxN >>2 ) ) & 1 ) is not equal to 0 for the macroblock"
            },
            {
                "line_number": 35,
                "text": "mbAddrN, and transform_size_8x8_flag is equal to 0 for the macroblock mbAddrN, the 4x4 Cb block"
            },
            {
                "line_number": 36,
                "text": "with index cb4x4BlkIdxN of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 37,
                "text": "– Otherwise, if mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip or"
            },
            {
                "line_number": 38,
                "text": "B_Skip, ( ( CodedBlockPatternLuma >> ( cb4x4BlkIdxN >>2 ) ) & 1 ) is not equal to 0 for the"
            },
            {
                "line_number": 39,
                "text": "macroblock mbAddrN, and transform_size_8x8_flag is equal to 1 for the macroblock mbAddrN, the 8x8"
            },
            {
                "line_number": 40,
                "text": "Cb block with index ( cb4x4BlkIdxN >> 2 ) of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 41,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 42,
                "text": "– Otherwise, if ctxBlockCat is equal to 9, the following ordered steps are specified:"
            },
            {
                "line_number": 43,
                "text": "1. The derivation process for neighbouring 8x8 Cb blocks specified in clause 6.4.11.3 is invoked with"
            },
            {
                "line_number": 44,
                "text": "cb8x8BlkIdx as input and the output is assigned to mbAddrN, cb8x8BlkIdxN (with N being either A or B)."
            },
            {
                "line_number": 45,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 46,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 47,
                "text": "I_PCM, ( ( CodedBlockPatternLuma >>cb8x8BlkIdx) & 1 ) is not equal to 0 for the macroblock"
            },
            {
                "line_number": 48,
                "text": "Rec. ITU-T H.264 (06/2019) 265"
            }
        ]
    },
    {
        "page_number": 288,
        "lines": [
            {
                "line_number": 1,
                "text": "mbAddrN, and transform_size_8x8_flag is equal to 1 for the macroblock mbAddrN, the 8x8 Cb block"
            },
            {
                "line_number": 2,
                "text": "with index cb8x8BlkIdxN of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 3,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 4,
                "text": "– Otherwise, if ctxBlockCat is equal to 11 or 12, the following ordered steps are specified:"
            },
            {
                "line_number": 5,
                "text": "1. The derivation process for neighbouring 4x4 Cr blocks specified in clause 6.4.11.5 is invoked with cr4x4BlkIdx"
            },
            {
                "line_number": 6,
                "text": "as input and the output is assigned to mbAddrN, cr4x4BlkIdxN (with N being either A or B)."
            },
            {
                "line_number": 7,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 8,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 9,
                "text": "I_PCM, ( ( CodedBlockPatternLuma >> ( cr4x4BlkIdxN >>2 ) ) & 1 ) is not equal to 0 for the macroblock"
            },
            {
                "line_number": 10,
                "text": "mbAddrN, and transform_size_8x8_flag is equal to 0 for the macroblock mbAddrN, the 4x4 Cr block with"
            },
            {
                "line_number": 11,
                "text": "index cr4x4BlkIdxN of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 12,
                "text": "– Otherwise, if mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip or"
            },
            {
                "line_number": 13,
                "text": "B_Skip, ( ( CodedBlockPatternLuma >> ( cr4x4BlkIdxN >>2 ) ) & 1 ) is not equal to 0 for the macroblock"
            },
            {
                "line_number": 14,
                "text": "mbAddrN, and transform_size_8x8_flag is equal to 1 for the macroblock mbAddrN, the 8x8 Cr block with"
            },
            {
                "line_number": 15,
                "text": "index ( cr4x4BlkIdxN >> 2 ) of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 16,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 17,
                "text": "– Otherwise (ctxBlockCat is equal to 13), the following ordered steps are specified:"
            },
            {
                "line_number": 18,
                "text": "1. The derivation process for neighbouring 8x8 Cr blocks specified in clause 6.4.11.3 is invoked with cr8x8BlkIdx"
            },
            {
                "line_number": 19,
                "text": "as input and the output is assigned to mbAddrN, cr8x8BlkIdxN (with N being either A or B)."
            },
            {
                "line_number": 20,
                "text": "2. The variable transBlockN is derived as follows:"
            },
            {
                "line_number": 21,
                "text": "– If mbAddrN is available, the macroblock mbAddrN does not have mb_type equal to P_Skip, B_Skip, or"
            },
            {
                "line_number": 22,
                "text": "I_PCM,, ( ( CodedBlockPatternLuma >>cr8x8BlkIdx) & 1 ) is not equal to 0 for the macroblock"
            },
            {
                "line_number": 23,
                "text": "mbAddrN, and transform_size_8x8_flag is equal to 1 for the macroblock mbAddrN, the 8x8 Cr block with"
            },
            {
                "line_number": 24,
                "text": "index cr8x8BlkIdxN of macroblock mbAddrN is assigned to transBlockN."
            },
            {
                "line_number": 25,
                "text": "– Otherwise, transBlockN is marked as not available."
            },
            {
                "line_number": 26,
                "text": "Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 27,
                "text": "– If any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 28,
                "text": "– mbAddrN is not available and the current macroblock is coded in an Inter macroblock prediction mode,"
            },
            {
                "line_number": 29,
                "text": "– mbAddrN is available and transBlockN is not available and mb_type for the macroblock mbAddrN is not equal"
            },
            {
                "line_number": 30,
                "text": "to I_PCM,"
            },
            {
                "line_number": 31,
                "text": "– The current macroblock is coded in an Intra macroblock prediction mode, constrained_intra_pred_flag is equal"
            },
            {
                "line_number": 32,
                "text": "to 1, the macroblock mbAddrN is available and coded in an Inter macroblock prediction mode, and slice data"
            },
            {
                "line_number": 33,
                "text": "partitioning is in use (nal_unit_type is in the range of 2 through 4, inclusive)."
            },
            {
                "line_number": 34,
                "text": "– Otherwise, if any of the following conditions are true, condTermFlagN is set equal to 1:"
            },
            {
                "line_number": 35,
                "text": "– mbAddrN is not available and the current macroblock is coded in an Intra macroblock prediction mode,"
            },
            {
                "line_number": 36,
                "text": "– mb_type for the macroblock mbAddrN is equal to I_PCM."
            },
            {
                "line_number": 37,
                "text": "– Otherwise, condTermFlagN is set equal to the value of the coded_block_flag of the transform block transBlockN that"
            },
            {
                "line_number": 38,
                "text": "was decoded for the macroblock mbAddrN."
            },
            {
                "line_number": 39,
                "text": "The variable ctxIdxInc( ctxBlockCat ) is derived by"
            },
            {
                "line_number": 40,
                "text": "ctxIdxInc( ctxBlockCat ) = condTermFlagA + 2 * condTermFlagB (9-19)"
            },
            {
                "line_number": 41,
                "text": "9.3.3.1.1.10 Derivation process of ctxIdxInc for the syntax element transform_size_8x8_flag"
            },
            {
                "line_number": 42,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 43,
                "text": "The derivation process for neighbouring macroblocks specified in clause 6.4.11.1 is invoked and the output is assigned to"
            },
            {
                "line_number": 44,
                "text": "mbAddrA and mbAddrB."
            },
            {
                "line_number": 45,
                "text": "Let the variable condTermFlagN (with N being either A or B) be derived as follows:"
            },
            {
                "line_number": 46,
                "text": "– If any of the following conditions are true, condTermFlagN is set equal to 0:"
            },
            {
                "line_number": 47,
                "text": "266 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 289,
        "lines": [
            {
                "line_number": 1,
                "text": "– mbAddrN is not available,"
            },
            {
                "line_number": 2,
                "text": "– transform_size_8x8_flag for the macroblock mbAddrN is equal to 0."
            },
            {
                "line_number": 3,
                "text": "– Otherwise, condTermFlagN is set equal to 1."
            },
            {
                "line_number": 4,
                "text": "The variable ctxIdxInc is derived by"
            },
            {
                "line_number": 5,
                "text": "ctxIdxInc = condTermFlagA + condTermFlagB (9-20)"
            },
            {
                "line_number": 6,
                "text": "9.3.3.1.2 Assignment process of ctxIdxInc using prior decoded bin values"
            },
            {
                "line_number": 7,
                "text": "Inputs to this process are ctxIdxOffset and binIdx."
            },
            {
                "line_number": 8,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 9,
                "text": "Table 9-41 contains the specification of ctxIdxInc for the given values of ctxIdxOffset and binIdx."
            },
            {
                "line_number": 10,
                "text": "For each value of ctxIdxOffset and binIdx, ctxIdxInc is derived by using some of the values of prior decoded bin values"
            },
            {
                "line_number": 11,
                "text": "( b , b , b ,…, b ), where the value of the index k is less than the value of binIdx."
            },
            {
                "line_number": 12,
                "text": "0 1 2 k"
            },
            {
                "line_number": 13,
                "text": "Table 9-41 – Specification of ctxIdxInc for specific values of ctxIdxOffset and binIdx"
            },
            {
                "line_number": 14,
                "text": "Value (name) of ctxIdxOffset binIdx ctxIdxInc"
            },
            {
                "line_number": 15,
                "text": "4 (b != 0) ? 5: 6"
            },
            {
                "line_number": 16,
                "text": "3"
            },
            {
                "line_number": 17,
                "text": "3"
            },
            {
                "line_number": 18,
                "text": "5 (b != 0) ? 6: 7"
            },
            {
                "line_number": 19,
                "text": "3"
            },
            {
                "line_number": 20,
                "text": "14 2 (b != 1) ? 2: 3"
            },
            {
                "line_number": 21,
                "text": "1"
            },
            {
                "line_number": 22,
                "text": "17 4 (b != 0) ? 2: 3"
            },
            {
                "line_number": 23,
                "text": "3"
            },
            {
                "line_number": 24,
                "text": "27 2 (b != 0) ? 4: 5"
            },
            {
                "line_number": 25,
                "text": "1"
            },
            {
                "line_number": 26,
                "text": "32 4 (b != 0) ? 2: 3"
            },
            {
                "line_number": 27,
                "text": "3"
            },
            {
                "line_number": 28,
                "text": "36 2 (b != 0) ? 2: 3"
            },
            {
                "line_number": 29,
                "text": "1"
            },
            {
                "line_number": 30,
                "text": "9.3.3.1.3 Assignment process of ctxIdxInc for syntax elements significant_coeff_flag, last_significant_coeff_flag,"
            },
            {
                "line_number": 31,
                "text": "and coeff_abs_level_minus1"
            },
            {
                "line_number": 32,
                "text": "Inputs to this process are ctxIdxOffset and binIdx."
            },
            {
                "line_number": 33,
                "text": "Output of this process is ctxIdxInc."
            },
            {
                "line_number": 34,
                "text": "The assignment process of ctxIdxInc for syntax elements significant_coeff_flag, last_significant_coeff_flag, and"
            },
            {
                "line_number": 35,
                "text": "coeff_abs_level_minus1 as well as for coded_block_flag depends on categories of different blocks denoted by the variable"
            },
            {
                "line_number": 36,
                "text": "ctxBlockCat. The specification of these block categories is given in Table 9-42."
            },
            {
                "line_number": 37,
                "text": "Rec. ITU-T H.264 (06/2019) 267"
            }
        ]
    },
    {
        "page_number": 290,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-42 – Specification of ctxBlockCat for the different blocks"
            },
            {
                "line_number": 2,
                "text": "Block description maxNumCoeff ctxBlockCat"
            },
            {
                "line_number": 3,
                "text": "block of luma DC transform coefficient levels"
            },
            {
                "line_number": 4,
                "text": "16 0"
            },
            {
                "line_number": 5,
                "text": "(i.e., list Intra16x16DCLevel as described in clause 7.4.5.3)"
            },
            {
                "line_number": 6,
                "text": "block of luma AC transform coefficient levels"
            },
            {
                "line_number": 7,
                "text": "15 1"
            },
            {
                "line_number": 8,
                "text": "(i.e., list Intra16x16ACLevel[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 9,
                "text": "block of 16 luma transform coefficient levels"
            },
            {
                "line_number": 10,
                "text": "16 2"
            },
            {
                "line_number": 11,
                "text": "(i.e., list LumaLevel4x4[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 12,
                "text": "block of chroma DC transform coefficient levels when ChromaArrayType is equal to 1 or 2"
            },
            {
                "line_number": 13,
                "text": "4 * NumC8x8 3"
            },
            {
                "line_number": 14,
                "text": "(i.e., list ChromaDCLevel as described in clause 7.4.5.3)"
            },
            {
                "line_number": 15,
                "text": "block of chroma AC transform coefficient levels when ChromaArrayType is equal to 1 or 2"
            },
            {
                "line_number": 16,
                "text": "15 4"
            },
            {
                "line_number": 17,
                "text": "(i.e., list ChromaACLevel as described in clause 7.4.5.3)"
            },
            {
                "line_number": 18,
                "text": "block of 64 luma transform coefficient levels"
            },
            {
                "line_number": 19,
                "text": "64 5"
            },
            {
                "line_number": 20,
                "text": "(i.e., list LumaLevel8x8[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 21,
                "text": "block of Cb DC transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 22,
                "text": "16 6"
            },
            {
                "line_number": 23,
                "text": "(i.e., list CbIntra16x16DCLevel as described in clause 7.4.5.3)"
            },
            {
                "line_number": 24,
                "text": "block of Cb AC transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 25,
                "text": "15 7"
            },
            {
                "line_number": 26,
                "text": "(i.e., list CbIntra16x16ACLevel[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 27,
                "text": "block of 16 Cb transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 28,
                "text": "16 8"
            },
            {
                "line_number": 29,
                "text": "(i.e., list CbLevel4x4[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 30,
                "text": "block of 64 Cb transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 31,
                "text": "64 9"
            },
            {
                "line_number": 32,
                "text": "(i.e., list CbLevel8x8[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 33,
                "text": "block of Cr DC transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 34,
                "text": "16 10"
            },
            {
                "line_number": 35,
                "text": "(i.e., list CrIntra16x16DCLevel as described in clause 7.4.5.3)"
            },
            {
                "line_number": 36,
                "text": "block of Cr AC transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 37,
                "text": "15 11"
            },
            {
                "line_number": 38,
                "text": "(i.e., list CrIntra16x16ACLevel[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 39,
                "text": "block of 16 Cr transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 40,
                "text": "16 12"
            },
            {
                "line_number": 41,
                "text": "(i.e., list CrLevel4x4[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 42,
                "text": "block of 64 Cr transform coefficient levels when ChromaArrayType is equal to 3"
            },
            {
                "line_number": 43,
                "text": "64 13"
            },
            {
                "line_number": 44,
                "text": "(i.e., list CrLevel8x8[ i ] as described in clause 7.4.5.3)"
            },
            {
                "line_number": 45,
                "text": "Let the variable levelListIdx be set equal to the index of the list of transform coefficient levels as specified in clause 7.4.5.3."
            },
            {
                "line_number": 46,
                "text": "For the syntax elements significant_coeff_flag and last_significant_coeff_flag in blocks with ctxBlockCat not equal to 3,"
            },
            {
                "line_number": 47,
                "text": "5, 9, and 13, the variable ctxIdxInc is derived by"
            },
            {
                "line_number": 48,
                "text": "ctxIdxInc = levelListIdx (9-21)"
            },
            {
                "line_number": 49,
                "text": "where levelListIdx ranges from 0 to maxNumCoeff  2, inclusive."
            },
            {
                "line_number": 50,
                "text": "For the syntax elements significant_coeff_flag and last_significant_coeff_flag in blocks with ctxBlockCat = = 3, the"
            },
            {
                "line_number": 51,
                "text": "variable ctxIdxInc is derived by"
            },
            {
                "line_number": 52,
                "text": "ctxIdxInc = Min( levelListIdx / NumC8x8, 2 ) (9-22)"
            },
            {
                "line_number": 53,
                "text": "where levelListIdx ranges from 0 to 4 * NumC8x8  2, inclusive."
            },
            {
                "line_number": 54,
                "text": "For the syntax elements significant_coeff_flag and last_significant_coeff_flag in 8x8 luma, Cb, or Cr blocks with"
            },
            {
                "line_number": 55,
                "text": "ctxBlockCat = = 5, 9, or 13, Table 9-43 contains the specification of ctxIdxInc for the given values of levelListIdx, where"
            },
            {
                "line_number": 56,
                "text": "levelListIdx ranges from 0 to 62, inclusive."
            },
            {
                "line_number": 57,
                "text": "268 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 291,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-43 – Mapping of scanning position to ctxIdxInc for ctxBlockCat = = 5, 9, or 13"
            },
            {
                "line_number": 2,
                "text": "l e v el Li st I d x ct x I d x I n c f o r"
            },
            {
                "line_number": 3,
                "text": "s"
            },
            {
                "line_number": 4,
                "text": "c"
            },
            {
                "line_number": 5,
                "text": "i"
            },
            {
                "line_number": 6,
                "text": "a"
            },
            {
                "line_number": 7,
                "text": "g"
            },
            {
                "line_number": 8,
                "text": "n n t i _ fi c o eff _"
            },
            {
                "line_number": 9,
                "text": "fl a g"
            },
            {
                "line_number": 10,
                "text": "(f"
            },
            {
                "line_number": 11,
                "text": "r a m"
            },
            {
                "line_number": 12,
                "text": "e c o d e d m a c r o"
            },
            {
                "line_number": 13,
                "text": "bl o c k"
            },
            {
                "line_number": 14,
                "text": "s)"
            },
            {
                "line_number": 15,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 16,
                "text": "si g"
            },
            {
                "line_number": 17,
                "text": "nifi c a n t _ c o eff _"
            },
            {
                "line_number": 18,
                "text": "fl a g"
            },
            {
                "line_number": 19,
                "text": "(fi el d"
            },
            {
                "line_number": 20,
                "text": "c o d e d m a c r o"
            },
            {
                "line_number": 21,
                "text": "bl o c k"
            },
            {
                "line_number": 22,
                "text": "s)"
            },
            {
                "line_number": 23,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 24,
                "text": "l"
            },
            {
                "line_number": 25,
                "text": "a st _"
            },
            {
                "line_number": 26,
                "text": "si g nifi c a n t _ c o"
            },
            {
                "line_number": 27,
                "text": "eff _ fl a"
            },
            {
                "line_number": 28,
                "text": "g"
            },
            {
                "line_number": 29,
                "text": "l e v el Li st I d x ct x I d x I n c f o r"
            },
            {
                "line_number": 30,
                "text": "si g"
            },
            {
                "line_number": 31,
                "text": "nifi c a n t _ c o eff _"
            },
            {
                "line_number": 32,
                "text": "fl a g"
            },
            {
                "line_number": 33,
                "text": "(f"
            },
            {
                "line_number": 34,
                "text": "r a m"
            },
            {
                "line_number": 35,
                "text": "e c o d e d m a c r o"
            },
            {
                "line_number": 36,
                "text": "bl o c k"
            },
            {
                "line_number": 37,
                "text": "s)"
            },
            {
                "line_number": 38,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 39,
                "text": "si g"
            },
            {
                "line_number": 40,
                "text": "nifi c a n t _ c o eff _"
            },
            {
                "line_number": 41,
                "text": "fl a g"
            },
            {
                "line_number": 42,
                "text": "(fi el d"
            },
            {
                "line_number": 43,
                "text": "c o d e d m a c r o"
            },
            {
                "line_number": 44,
                "text": "bl o c k"
            },
            {
                "line_number": 45,
                "text": "s)"
            },
            {
                "line_number": 46,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 47,
                "text": "l"
            },
            {
                "line_number": 48,
                "text": "a st _"
            },
            {
                "line_number": 49,
                "text": "si g nifi c a n t _ c o"
            },
            {
                "line_number": 50,
                "text": "eff _ fl a"
            },
            {
                "line_number": 51,
                "text": "g"
            },
            {
                "line_number": 52,
                "text": "0 0 0 0 32 7 9 3"
            },
            {
                "line_number": 53,
                "text": "1 1 1 1 33 6 9 3"
            },
            {
                "line_number": 54,
                "text": "2 2 1 1 34 11 10 3"
            },
            {
                "line_number": 55,
                "text": "3 3 2 1 35 12 10 3"
            },
            {
                "line_number": 56,
                "text": "4 4 2 1 36 13 8 3"
            },
            {
                "line_number": 57,
                "text": "5 5 3 1 37 11 11 3"
            },
            {
                "line_number": 58,
                "text": "6 5 3 1 38 6 12 3"
            },
            {
                "line_number": 59,
                "text": "7 4 4 1 39 7 11 3"
            },
            {
                "line_number": 60,
                "text": "8 4 5 1 40 8 9 4"
            },
            {
                "line_number": 61,
                "text": "9 3 6 1 41 9 9 4"
            },
            {
                "line_number": 62,
                "text": "10 3 7 1 42 14 10 4"
            },
            {
                "line_number": 63,
                "text": "11 4 7 1 43 10 10 4"
            },
            {
                "line_number": 64,
                "text": "12 4 7 1 44 9 8 4"
            },
            {
                "line_number": 65,
                "text": "13 4 8 1 45 8 13 4"
            },
            {
                "line_number": 66,
                "text": "14 5 4 1 46 6 13 4"
            },
            {
                "line_number": 67,
                "text": "15 5 5 1 47 11 9 4"
            },
            {
                "line_number": 68,
                "text": "16 4 6 2 48 12 9 5"
            },
            {
                "line_number": 69,
                "text": "17 4 9 2 49 13 10 5"
            },
            {
                "line_number": 70,
                "text": "18 4 10 2 50 11 10 5"
            },
            {
                "line_number": 71,
                "text": "19 4 10 2 51 6 8 5"
            },
            {
                "line_number": 72,
                "text": "20 3 8 2 52 9 13 6"
            },
            {
                "line_number": 73,
                "text": "21 3 11 2 53 14 13 6"
            },
            {
                "line_number": 74,
                "text": "22 6 12 2 54 10 9 6"
            },
            {
                "line_number": 75,
                "text": "23 7 11 2 55 9 9 6"
            },
            {
                "line_number": 76,
                "text": "24 7 9 2 56 11 10 7"
            },
            {
                "line_number": 77,
                "text": "25 7 9 2 57 12 10 7"
            },
            {
                "line_number": 78,
                "text": "26 8 10 2 58 13 14 7"
            },
            {
                "line_number": 79,
                "text": "27 9 10 2 59 11 14 7"
            },
            {
                "line_number": 80,
                "text": "Rec. ITU-T H.264 (06/2019) 269"
            }
        ]
    },
    {
        "page_number": 292,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-43 – Mapping of scanning position to ctxIdxInc for ctxBlockCat = = 5, 9, or 13"
            },
            {
                "line_number": 2,
                "text": "l e v el Li st I d x ct x I d x I n c f o r"
            },
            {
                "line_number": 3,
                "text": "s"
            },
            {
                "line_number": 4,
                "text": "c"
            },
            {
                "line_number": 5,
                "text": "i"
            },
            {
                "line_number": 6,
                "text": "a"
            },
            {
                "line_number": 7,
                "text": "g"
            },
            {
                "line_number": 8,
                "text": "n n t i _ fi c o eff _"
            },
            {
                "line_number": 9,
                "text": "fl a g"
            },
            {
                "line_number": 10,
                "text": "(f"
            },
            {
                "line_number": 11,
                "text": "r a m"
            },
            {
                "line_number": 12,
                "text": "e c o d e d m a c r o"
            },
            {
                "line_number": 13,
                "text": "bl o c k"
            },
            {
                "line_number": 14,
                "text": "s)"
            },
            {
                "line_number": 15,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 16,
                "text": "si g"
            },
            {
                "line_number": 17,
                "text": "nifi c a n t _ c o eff _"
            },
            {
                "line_number": 18,
                "text": "fl a g"
            },
            {
                "line_number": 19,
                "text": "(fi el d"
            },
            {
                "line_number": 20,
                "text": "c o d e d m a c r o"
            },
            {
                "line_number": 21,
                "text": "bl o c k"
            },
            {
                "line_number": 22,
                "text": "s)"
            },
            {
                "line_number": 23,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 24,
                "text": "l"
            },
            {
                "line_number": 25,
                "text": "a st _"
            },
            {
                "line_number": 26,
                "text": "si g nifi c a n t _ c o"
            },
            {
                "line_number": 27,
                "text": "eff _ fl a"
            },
            {
                "line_number": 28,
                "text": "g"
            },
            {
                "line_number": 29,
                "text": "l e v el Li st I d x ct x I d x I n c f o r"
            },
            {
                "line_number": 30,
                "text": "si g"
            },
            {
                "line_number": 31,
                "text": "nifi c a n t _ c o eff _"
            },
            {
                "line_number": 32,
                "text": "fl a g"
            },
            {
                "line_number": 33,
                "text": "(f"
            },
            {
                "line_number": 34,
                "text": "r a m"
            },
            {
                "line_number": 35,
                "text": "e c o d e d m a c r o"
            },
            {
                "line_number": 36,
                "text": "bl o c k"
            },
            {
                "line_number": 37,
                "text": "s)"
            },
            {
                "line_number": 38,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 39,
                "text": "si g"
            },
            {
                "line_number": 40,
                "text": "nifi c a n t _ c o eff _"
            },
            {
                "line_number": 41,
                "text": "fl a g"
            },
            {
                "line_number": 42,
                "text": "(fi el d"
            },
            {
                "line_number": 43,
                "text": "c o d e d m a c r o"
            },
            {
                "line_number": 44,
                "text": "bl o c k"
            },
            {
                "line_number": 45,
                "text": "s)"
            },
            {
                "line_number": 46,
                "text": "ct x I d x I n c f o r"
            },
            {
                "line_number": 47,
                "text": "l"
            },
            {
                "line_number": 48,
                "text": "a st _"
            },
            {
                "line_number": 49,
                "text": "si g nifi c a n t _ c o"
            },
            {
                "line_number": 50,
                "text": "eff _ fl a"
            },
            {
                "line_number": 51,
                "text": "g"
            },
            {
                "line_number": 52,
                "text": "28 10 8 2 60 14 14 8"
            },
            {
                "line_number": 53,
                "text": "29 9 11 2 61 10 14 8"
            },
            {
                "line_number": 54,
                "text": "30 8 12 2 62 12 14 8"
            },
            {
                "line_number": 55,
                "text": "31 7 11 2"
            },
            {
                "line_number": 56,
                "text": "Let numDecodAbsLevelEq1 denote the accumulated number of decoded transform coefficient levels with absolute value"
            },
            {
                "line_number": 57,
                "text": "equal to 1, and let numDecodAbsLevelGt1 denote the accumulated number of decoded transform coefficient levels with"
            },
            {
                "line_number": 58,
                "text": "absolute value greater than 1. Both numbers are related to the same transform coefficient block, where the current decoding"
            },
            {
                "line_number": 59,
                "text": "process takes place. Then, for decoding of coeff_abs_level_minus1, ctxIdxInc for coeff_abs_level_minus1 is specified"
            },
            {
                "line_number": 60,
                "text": "depending on binIdx as follows:"
            },
            {
                "line_number": 61,
                "text": "– If binIdx is equal to 0, ctxIdxInc is derived by"
            },
            {
                "line_number": 62,
                "text": "ctxIdxInc = ( ( numDecodAbsLevelGt1 != 0 ) ? 0: Min( 4, 1 + numDecodAbsLevelEq1 ) ) (9-23)"
            },
            {
                "line_number": 63,
                "text": "– Otherwise (binIdx is greater than 0), ctxIdxInc is derived by"
            },
            {
                "line_number": 64,
                "text": "ctxIdxInc = 5 + Min( 4 − ( ( ctxBlockCat = = 3 ) ? 1 : 0 ), numDecodAbsLevelGt1 ) (9-24)"
            },
            {
                "line_number": 65,
                "text": "9.3.3.2 Arithmetic decoding process"
            },
            {
                "line_number": 66,
                "text": "Inputs to this process are the bypassFlag, ctxIdx as derived in clause 9.3.3.1, and the state variables codIRange and"
            },
            {
                "line_number": 67,
                "text": "codIOffset of the arithmetic decoding engine."
            },
            {
                "line_number": 68,
                "text": "Output of this process is the value of the bin."
            },
            {
                "line_number": 69,
                "text": "Figure 9-2 illustrates the whole arithmetic decoding process for a single bin. For decoding the value of a bin, the context"
            },
            {
                "line_number": 70,
                "text": "index ctxIdx is passed to the arithmetic decoding process DecodeBin(ctxIdx), which is specified as follows:"
            },
            {
                "line_number": 71,
                "text": "– If bypassFlag is equal to 1, DecodeBypass( ) as specified in clause 9.3.3.2.3 is invoked."
            },
            {
                "line_number": 72,
                "text": "– Otherwise, if bypassFlag is equal to 0 and ctxIdx is equal to 276, DecodeTerminate( ) as specified in clause 9.3.3.2.4"
            },
            {
                "line_number": 73,
                "text": "is invoked."
            },
            {
                "line_number": 74,
                "text": "– Otherwise (bypassFlag is equal to 0 and ctxIdx is not equal to 276), DecodeDecision( ) as specified in clause 9.3.3.2.1"
            },
            {
                "line_number": 75,
                "text": "is applied."
            },
            {
                "line_number": 76,
                "text": "270 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 293,
        "lines": [
            {
                "line_number": 1,
                "text": "DecodeBin(ctxIdx)"
            },
            {
                "line_number": 2,
                "text": "bypassFlag Yes"
            },
            {
                "line_number": 3,
                "text": "== 1?"
            },
            {
                "line_number": 4,
                "text": "DecodeBypass"
            },
            {
                "line_number": 5,
                "text": "No"
            },
            {
                "line_number": 6,
                "text": "Yes"
            },
            {
                "line_number": 7,
                "text": "ctxIdx==276?"
            },
            {
                "line_number": 8,
                "text": "DecodeTerminate"
            },
            {
                "line_number": 9,
                "text": "No"
            },
            {
                "line_number": 10,
                "text": "DecodeDecision(ctxIdx)"
            },
            {
                "line_number": 11,
                "text": "Done"
            },
            {
                "line_number": 12,
                "text": "Figure 9-2 – Overview of the arithmetic decoding process for a single bin (informative)"
            },
            {
                "line_number": 13,
                "text": "NOTE – Arithmetic coding is based on the principle of recursive interval subdivision. Given a probability estimation p( 0 ) and"
            },
            {
                "line_number": 14,
                "text": "p( 1 ) = 1  p( 0 ) of a binary decision ( 0, 1 ), an initially given code sub-interval with the range codIRange will be subdivided into"
            },
            {
                "line_number": 15,
                "text": "two sub-intervals having range p( 0 ) * codIRange and codIRange  p( 0 ) * codIRange, respectively. Depending on the decision,"
            },
            {
                "line_number": 16,
                "text": "which has been observed, the corresponding sub-interval will be chosen as the new code interval, and a binary code string pointing"
            },
            {
                "line_number": 17,
                "text": "into that interval will represent the sequence of observed binary decisions. It is useful to distinguish between the most probable"
            },
            {
                "line_number": 18,
                "text": "symbol (MPS) and the least probable symbol (LPS), so that binary decisions have to be identified as either MPS or LPS, rather than"
            },
            {
                "line_number": 19,
                "text": "0 or 1. Given this terminology, each context is specified by the probability pLPS of the LPS and the value of MPS (valMPS), which"
            },
            {
                "line_number": 20,
                "text": "is either 0 or 1."
            },
            {
                "line_number": 21,
                "text": "The arithmetic core engine in this Recommendation | International Standard has three distinct properties:"
            },
            {
                "line_number": 22,
                "text": "– The probability estimation is performed by means of a finite-state machine with a table-based transition process between 64"
            },
            {
                "line_number": 23,
                "text": "different representative probability states { pLPS(pStateIdx) | 0 <= pStateIdx < 64 } for the LPS probability pLPS. The"
            },
            {
                "line_number": 24,
                "text": "numbering of the states is arranged in such a way that the probability state with index pStateIdx = 0 corresponds to an LPS"
            },
            {
                "line_number": 25,
                "text": "probability value of 0.5, with decreasing LPS probability towards higher state indices."
            },
            {
                "line_number": 26,
                "text": "– The range codIRange representing the state of the coding engine is quantized to a small set {Q1,…,Q4} of pre-set quantization"
            },
            {
                "line_number": 27,
                "text": "values prior to the calculation of the new interval range. Storing a table containing all 64x4 pre-computed product values of"
            },
            {
                "line_number": 28,
                "text": "Qi * pLPS(pStateIdx) allows a multiplication-free approximation of the product codIRange * pLPS(pStateIdx)."
            },
            {
                "line_number": 29,
                "text": "– For syntax elements or parts thereof for which an approximately uniform probability distribution is assumed to be given a"
            },
            {
                "line_number": 30,
                "text": "separate simplified encoding and decoding bypass process is used."
            },
            {
                "line_number": 31,
                "text": "9.3.3.2.1 Arithmetic decoding process for a binary decision"
            },
            {
                "line_number": 32,
                "text": "Inputs to this process are ctxIdx, codIRange, and codIOffset."
            },
            {
                "line_number": 33,
                "text": "Outputs of this process are the decoded value binVal, and the updated variables codIRange and codIOffset."
            },
            {
                "line_number": 34,
                "text": "Figure 9-3 shows the flowchart for decoding a single decision (DecodeDecision):"
            },
            {
                "line_number": 35,
                "text": "1. The value of the variable codIRangeLPS is derived as follows:"
            },
            {
                "line_number": 36,
                "text": "– Given the current value of codIRange, the variable qCodIRangeIdx is derived by"
            },
            {
                "line_number": 37,
                "text": "qCodIRangeIdx =( codIRange >> 6 ) & 3 (9-25)"
            },
            {
                "line_number": 38,
                "text": "– Given qCodIRangeIdx and pStateIdx associated with ctxIdx, the value of the variable rangeTabLPS as"
            },
            {
                "line_number": 39,
                "text": "specified in Table 9-44 is assigned to codIRangeLPS:"
            },
            {
                "line_number": 40,
                "text": "codIRangeLPS = rangeTabLPS[ pStateIdx ][ qCodIRangeIdx ] (9-26)"
            },
            {
                "line_number": 41,
                "text": "Rec. ITU-T H.264 (06/2019) 271"
            }
        ]
    },
    {
        "page_number": 294,
        "lines": [
            {
                "line_number": 1,
                "text": "2. The variable codIRange is set equal to codIRange  codIRangeLPS and the following applies:"
            },
            {
                "line_number": 2,
                "text": "– If codIOffset is greater than or equal to codIRange, the variable binVal is set equal to 1 − valMPS, codIOffset"
            },
            {
                "line_number": 3,
                "text": "is decremented by codIRange, and codIRange is set equal to codIRangeLPS."
            },
            {
                "line_number": 4,
                "text": "– Otherwise, the variable binVal is set equal to valMPS."
            },
            {
                "line_number": 5,
                "text": "Given the value of binVal, the state transition is performed as specified in clause 9.3.3.2.1.1. Depending on the current"
            },
            {
                "line_number": 6,
                "text": "value of codIRange, renormalization is performed as specified in clause 9.3.3.2.2."
            },
            {
                "line_number": 7,
                "text": "9.3.3.2.1.1 State transition process"
            },
            {
                "line_number": 8,
                "text": "Inputs to this process are the current pStateIdx, the decoded value binVal and valMPS values of the context variable"
            },
            {
                "line_number": 9,
                "text": "associated with ctxIdx."
            },
            {
                "line_number": 10,
                "text": "Outputs of this process are the updated pStateIdx and valMPS of the context variable associated with ctxIdx."
            },
            {
                "line_number": 11,
                "text": "Depending on the decoded value binVal, the update of the two variables pStateIdx and valMPS associated with ctxIdx is"
            },
            {
                "line_number": 12,
                "text": "derived as specified by the following pseudo-code:"
            },
            {
                "line_number": 13,
                "text": "if( binVal = = valMPS )"
            },
            {
                "line_number": 14,
                "text": "pStateIdx = transIdxMPS( pStateIdx )"
            },
            {
                "line_number": 15,
                "text": "else { (9-27)"
            },
            {
                "line_number": 16,
                "text": "if( pStateIdx = = 0 )"
            },
            {
                "line_number": 17,
                "text": "valMPS = 1  valMPS"
            },
            {
                "line_number": 18,
                "text": "pStateIdx = transIdxLPS( pStateIdx )"
            },
            {
                "line_number": 19,
                "text": "}"
            },
            {
                "line_number": 20,
                "text": "Table 9-45 specifies the transition rules transIdxMPS( ) and transIdxLPS( ) after decoding the value of valMPS and"
            },
            {
                "line_number": 21,
                "text": "1  valMPS, respectively."
            },
            {
                "line_number": 22,
                "text": "272 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 295,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure 9-3 – Flowchart for decoding a decision"
            },
            {
                "line_number": 2,
                "text": "Rec. ITU-T H.264 (06/2019) 273"
            }
        ]
    },
    {
        "page_number": 296,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-44 – Specification of rangeTabLPS depending on pStateIdx and qCodIRangeIdx"
            },
            {
                "line_number": 2,
                "text": "qCodIRangeIdx qCodIRangeIdx"
            },
            {
                "line_number": 3,
                "text": "pStateIdx pStateIdx"
            },
            {
                "line_number": 4,
                "text": "0 1 2 3 0 1 2 3"
            },
            {
                "line_number": 5,
                "text": "0 128 176 208 240 32 27 33 39 45"
            },
            {
                "line_number": 6,
                "text": "1 128 167 197 227 33 26 31 37 43"
            },
            {
                "line_number": 7,
                "text": "2 128 158 187 216 34 24 30 35 41"
            },
            {
                "line_number": 8,
                "text": "3 123 150 178 205 35 23 28 33 39"
            },
            {
                "line_number": 9,
                "text": "4 116 142 169 195 36 22 27 32 37"
            },
            {
                "line_number": 10,
                "text": "5 111 135 160 185 37 21 26 30 35"
            },
            {
                "line_number": 11,
                "text": "6 105 128 152 175 38 20 24 29 33"
            },
            {
                "line_number": 12,
                "text": "7 100 122 144 166 39 19 23 27 31"
            },
            {
                "line_number": 13,
                "text": "8 95 116 137 158 40 18 22 26 30"
            },
            {
                "line_number": 14,
                "text": "9 90 110 130 150 41 17 21 25 28"
            },
            {
                "line_number": 15,
                "text": "10 85 104 123 142 42 16 20 23 27"
            },
            {
                "line_number": 16,
                "text": "11 81 99 117 135 43 15 19 22 25"
            },
            {
                "line_number": 17,
                "text": "12 77 94 111 128 44 14 18 21 24"
            },
            {
                "line_number": 18,
                "text": "13 73 89 105 122 45 14 17 20 23"
            },
            {
                "line_number": 19,
                "text": "14 69 85 100 116 46 13 16 19 22"
            },
            {
                "line_number": 20,
                "text": "15 66 80 95 110 47 12 15 18 21"
            },
            {
                "line_number": 21,
                "text": "16 62 76 90 104 48 12 14 17 20"
            },
            {
                "line_number": 22,
                "text": "17 59 72 86 99 49 11 14 16 19"
            },
            {
                "line_number": 23,
                "text": "18 56 69 81 94 50 11 13 15 18"
            },
            {
                "line_number": 24,
                "text": "19 53 65 77 89 51 10 12 15 17"
            },
            {
                "line_number": 25,
                "text": "20 51 62 73 85 52 10 12 14 16"
            },
            {
                "line_number": 26,
                "text": "21 48 59 69 80 53 9 11 13 15"
            },
            {
                "line_number": 27,
                "text": "22 46 56 66 76 54 9 11 12 14"
            },
            {
                "line_number": 28,
                "text": "23 43 53 63 72 55 8 10 12 14"
            },
            {
                "line_number": 29,
                "text": "24 41 50 59 69 56 8 9 11 13"
            },
            {
                "line_number": 30,
                "text": "25 39 48 56 65 57 7 9 11 12"
            },
            {
                "line_number": 31,
                "text": "26 37 45 54 62 58 7 9 10 12"
            },
            {
                "line_number": 32,
                "text": "27 35 43 51 59 59 7 8 10 11"
            },
            {
                "line_number": 33,
                "text": "28 33 41 48 56 60 6 8 9 11"
            },
            {
                "line_number": 34,
                "text": "29 32 39 46 53 61 6 7 9 10"
            },
            {
                "line_number": 35,
                "text": "30 30 37 43 50 62 6 7 8 9"
            },
            {
                "line_number": 36,
                "text": "31 29 35 41 48 63 2 2 2 2"
            },
            {
                "line_number": 37,
                "text": "274 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 297,
        "lines": [
            {
                "line_number": 1,
                "text": "Table 9-45 – State transition table"
            },
            {
                "line_number": 2,
                "text": "pStateIdx 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15"
            },
            {
                "line_number": 3,
                "text": "transIdxLPS 0 0 1 2 2 4 4 5 6 7 8 9 9 11 11 12"
            },
            {
                "line_number": 4,
                "text": "transIdxMPS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16"
            },
            {
                "line_number": 5,
                "text": "pStateIdx 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31"
            },
            {
                "line_number": 6,
                "text": "transIdxLPS 13 13 15 15 16 16 18 18 19 19 21 21 22 22 23 24"
            },
            {
                "line_number": 7,
                "text": "transIdxMPS 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32"
            },
            {
                "line_number": 8,
                "text": "pStateIdx 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47"
            },
            {
                "line_number": 9,
                "text": "transIdxLPS 24 25 26 26 27 27 28 29 29 30 30 30 31 32 32 33"
            },
            {
                "line_number": 10,
                "text": "transIdxMPS 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48"
            },
            {
                "line_number": 11,
                "text": "pStateIdx 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63"
            },
            {
                "line_number": 12,
                "text": "transIdxLPS 33 33 34 34 35 35 35 36 36 36 37 37 37 38 38 63"
            },
            {
                "line_number": 13,
                "text": "transIdxMPS 49 50 51 52 53 54 55 56 57 58 59 60 61 62 62 63"
            },
            {
                "line_number": 14,
                "text": "9.3.3.2.2 Renormalization process in the arithmetic decoding engine"
            },
            {
                "line_number": 15,
                "text": "Inputs to this process are bits from slice data and the variables codIRange and codIOffset."
            },
            {
                "line_number": 16,
                "text": "Outputs of this process are the updated variables codIRange and codIOffset."
            },
            {
                "line_number": 17,
                "text": "A flowchart of the renormalization is shown in Figure 9-4. The current value of codIRange is first compared to 256 and"
            },
            {
                "line_number": 18,
                "text": "further steps are specified as follows:"
            },
            {
                "line_number": 19,
                "text": "– If codIRange is greater than or equal to 256, no renormalization is needed and the RenormD process is finished;"
            },
            {
                "line_number": 20,
                "text": "– Otherwise (codIRange is less than 256), the renormalization loop is entered. Within this loop, the value of codIRange"
            },
            {
                "line_number": 21,
                "text": "is doubled, i.e., left-shifted by 1 and a single bit is shifted into codIOffset by using read_bits( 1 )."
            },
            {
                "line_number": 22,
                "text": "The bitstream shall not contain data that result in a value of codIOffset being greater than or equal to codIRange upon"
            },
            {
                "line_number": 23,
                "text": "completion of this process."
            },
            {
                "line_number": 24,
                "text": "RenormD"
            },
            {
                "line_number": 25,
                "text": "codIRange < 256"
            },
            {
                "line_number": 26,
                "text": "Yes"
            },
            {
                "line_number": 27,
                "text": "codIRange = codIRange << 1 No"
            },
            {
                "line_number": 28,
                "text": "codIOffset = codIOffset << 1"
            },
            {
                "line_number": 29,
                "text": "codIOffset = codIOffset | read_bits(1)"
            },
            {
                "line_number": 30,
                "text": "Done"
            },
            {
                "line_number": 31,
                "text": "Figure 9-4 – Flowchart of renormalization"
            },
            {
                "line_number": 32,
                "text": "Rec. ITU-T H.264 (06/2019) 275"
            }
        ]
    },
    {
        "page_number": 298,
        "lines": [
            {
                "line_number": 1,
                "text": "9.3.3.2.3 Bypass decoding process for binary decisions"
            },
            {
                "line_number": 2,
                "text": "Inputs to this process are bits from slice data and the variables codIRange and codIOffset."
            },
            {
                "line_number": 3,
                "text": "Outputs of this process are the updated variable codIOffset and the decoded value binVal."
            },
            {
                "line_number": 4,
                "text": "The bypass decoding process is invoked when bypassFlag is equal to 1. Figure 9-5 shows a flowchart of the corresponding"
            },
            {
                "line_number": 5,
                "text": "process."
            },
            {
                "line_number": 6,
                "text": "First, the value of codIOffset is doubled, i.e., left-shifted by 1 and a single bit is shifted into codIOffset by using"
            },
            {
                "line_number": 7,
                "text": "read_bits( 1 ). Then, the value of codIOffset is compared to the value of codIRange and further steps are specified as"
            },
            {
                "line_number": 8,
                "text": "follows:"
            },
            {
                "line_number": 9,
                "text": "– If codIOffset is greater than or equal to codIRange, the variable binVal is set equal to 1 and codIOffset is decremented"
            },
            {
                "line_number": 10,
                "text": "by codIRange."
            },
            {
                "line_number": 11,
                "text": "– Otherwise (codIOffset is less than codIRange), the variable binVal is set equal to 0."
            },
            {
                "line_number": 12,
                "text": "The bitstream shall not contain data that result in a value of codIOffset being greater than or equal to codIRange upon"
            },
            {
                "line_number": 13,
                "text": "completion of this process."
            },
            {
                "line_number": 14,
                "text": "Figure 9-5 – Flowchart of bypass decoding process"
            },
            {
                "line_number": 15,
                "text": "9.3.3.2.4 Decoding process for binary decisions before termination"
            },
            {
                "line_number": 16,
                "text": "Inputs to this process are bits from slice data and the variables codIRange and codIOffset."
            },
            {
                "line_number": 17,
                "text": "Outputs of this process are the updated variables codIRange and codIOffset, and the decoded value binVal."
            },
            {
                "line_number": 18,
                "text": "This special decoding routine applies to decoding of end_of_slice_flag and of the bin indicating the I_PCM mode"
            },
            {
                "line_number": 19,
                "text": "corresponding to ctxIdx equal to 276. Figure 9-6 shows the flowchart of the corresponding decoding process, which is"
            },
            {
                "line_number": 20,
                "text": "specified as follows."
            },
            {
                "line_number": 21,
                "text": "First, the value of codIRange is decremented by 2. Then, the value of codIOffset is compared to the value of codIRange"
            },
            {
                "line_number": 22,
                "text": "and further steps are specified as follows:"
            },
            {
                "line_number": 23,
                "text": "– If codIOffset is greater than or equal to codIRange, the variable binVal is set equal to 1, no renormalization is carried"
            },
            {
                "line_number": 24,
                "text": "out, and CABAC decoding is terminated. The last bit inserted in register codIOffset is equal to 1. When decoding"
            },
            {
                "line_number": 25,
                "text": "end_of_slice_flag, this last bit inserted in register codIOffset is interpreted as rbsp_stop_one_bit."
            },
            {
                "line_number": 26,
                "text": "– Otherwise (codIOffset is less than codIRange), the variable binVal is set equal to 0 and renormalization is performed"
            },
            {
                "line_number": 27,
                "text": "as specified in clause 9.3.3.2.2."
            },
            {
                "line_number": 28,
                "text": "NOTE – This procedure may also be implemented using DecodeDecision(ctxIdx) with ctxIdx = 276. In the case where"
            },
            {
                "line_number": 29,
                "text": "the decoded value is equal to 1, seven more bits would be read by DecodeDecision(ctxIdx) and a decoding process would"
            },
            {
                "line_number": 30,
                "text": "have to adjust its bitstream pointer accordingly to properly decode following syntax elements."
            },
            {
                "line_number": 31,
                "text": "276 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 299,
        "lines": [
            {
                "line_number": 1,
                "text": "DecodeTerminate"
            },
            {
                "line_number": 2,
                "text": "codIRange = codIRange-2"
            },
            {
                "line_number": 3,
                "text": "Yes No"
            },
            {
                "line_number": 4,
                "text": "codIOffset >= codIRange"
            },
            {
                "line_number": 5,
                "text": "binVal = 1 binVal = 0"
            },
            {
                "line_number": 6,
                "text": "RenormD"
            },
            {
                "line_number": 7,
                "text": "Done"
            },
            {
                "line_number": 8,
                "text": "Figure 9-6 – Flowchart of decoding a decision before termination"
            },
            {
                "line_number": 9,
                "text": "9.3.4 Arithmetic encoding process (informative)"
            },
            {
                "line_number": 10,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 11,
                "text": "Inputs to this process are decisions that are to be encoded and written."
            },
            {
                "line_number": 12,
                "text": "Outputs of this process are bits that are written to the RBSP."
            },
            {
                "line_number": 13,
                "text": "This informative clause describes an arithmetic encoding engine that matches the arithmetic decoding engine described in"
            },
            {
                "line_number": 14,
                "text": "clause 9.3.3.2. The encoding engine is essentially symmetric with the decoding engine, i.e., procedures are called in the"
            },
            {
                "line_number": 15,
                "text": "same order. The following procedures are described in this section: InitEncoder, EncodeDecision, EncodeBypass,"
            },
            {
                "line_number": 16,
                "text": "EncodeTerminate, which correspond to InitDecoder, DecodeDecision, DecodeBypass, and DecodeTerminate,"
            },
            {
                "line_number": 17,
                "text": "respectively. The state of the arithmetic encoding engine is represented by a value of the variable codILow pointing to the"
            },
            {
                "line_number": 18,
                "text": "lower end of a sub-interval and a value of the variable codIRange specifying the corresponding range of that sub-interval."
            },
            {
                "line_number": 19,
                "text": "9.3.4.1 Initialization process for the arithmetic encoding engine (informative)"
            },
            {
                "line_number": 20,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 21,
                "text": "This process is invoked before encoding the first macroblock of a slice, and after encoding any pcm_alignment_zero_bit"
            },
            {
                "line_number": 22,
                "text": "and all pcm_sample_luma and pcm_sample_chroma data for a macroblock of type I_PCM."
            },
            {
                "line_number": 23,
                "text": "Outputs of this process are the values codILow, codIRange, firstBitFlag, bitsOutstanding, and BinCountsInNALunits of"
            },
            {
                "line_number": 24,
                "text": "the arithmetic encoding engine."
            },
            {
                "line_number": 25,
                "text": "In the initialization procedure of the encoder, codILow is set equal to 0, and codIRange is set equal to 510. Furthermore,"
            },
            {
                "line_number": 26,
                "text": "firstBitFlag is set equal to 1 and the counter bitsOutstanding is set equal to 0."
            },
            {
                "line_number": 27,
                "text": "Depending on whether the current slice is the first slice of a coded picture, the following applies:"
            },
            {
                "line_number": 28,
                "text": "– If the current slice is the first slice of a coded picture, the counter BinCountsInNALunits is set equal to 0."
            },
            {
                "line_number": 29,
                "text": "– Otherwise (the current slice is not the first slice of a coded picture), the counter BinCountsInNALunits is not modified."
            },
            {
                "line_number": 30,
                "text": "The value of BinCountsInNALunits is the result of encoding all the slices of a coded picture that precede the current"
            },
            {
                "line_number": 31,
                "text": "slice in decoding order. After initializing for the first slice of a coded picture as specified in this clause,"
            },
            {
                "line_number": 32,
                "text": "BinCountsInNALunits is incremented as specified in clauses 9.3.4.2, 9.3.4.4, and 9.3.4.5."
            },
            {
                "line_number": 33,
                "text": "NOTE – The minimum register precision required for storing the values of the variables codILow and codIRange after invocation"
            },
            {
                "line_number": 34,
                "text": "of any of the arithmetic encoding processes specified in clauses 9.3.4.2, 9.3.4.4, and 9.3.4.5 is 10 bits and 9 bits, respectively. The"
            },
            {
                "line_number": 35,
                "text": "encoding process for a binary decision (EncodeDecision) as specified in clause 9.3.4.2 and the encoding process for a binary decision"
            },
            {
                "line_number": 36,
                "text": "before termination (EncodeTerminate) as specified in clause 9.3.4.5 require a minimum register precision of 10 bits for the variable"
            },
            {
                "line_number": 37,
                "text": "codILow and a minimum register precision of 9 bits for the variable codIRange. The bypass encoding process for binary decisions"
            },
            {
                "line_number": 38,
                "text": "Rec. ITU-T H.264 (06/2019) 277"
            }
        ]
    },
    {
        "page_number": 300,
        "lines": [
            {
                "line_number": 1,
                "text": "(EncodeBypass) as specified in clause 9.3.4.4 requires a minimum register precision of 11 bits for the variable codILow and a"
            },
            {
                "line_number": 2,
                "text": "minimum register precision of 9 bits for the variable codIRange. The precision required for the counters bitsOutstanding and"
            },
            {
                "line_number": 3,
                "text": "BinCountsInNALunits should be sufficiently large to prevent overflow of the related registers. When maxBinCountInSlice denotes"
            },
            {
                "line_number": 4,
                "text": "the maximum total number of binary decisions to encode in one slice and maxBinCountInPic denotes the maximum total number of"
            },
            {
                "line_number": 5,
                "text": "binary decisions to encode a picture, the minimum register precision required for the variables bitsOutstanding and"
            },
            {
                "line_number": 6,
                "text": "BinCountsInNALunits is given by Ceil( Log2( maxBinCountInSlice + 1 ) ) and Ceil( Log2( maxBinCountInPic + 1 ) ),"
            },
            {
                "line_number": 7,
                "text": "respectively."
            },
            {
                "line_number": 8,
                "text": "9.3.4.2 Encoding process for a binary decision (informative)"
            },
            {
                "line_number": 9,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 10,
                "text": "Inputs to this process are the context index ctxIdx, the value of binVal to be encoded, and the variables codIRange, codILow"
            },
            {
                "line_number": 11,
                "text": "and BinCountsInNALunits."
            },
            {
                "line_number": 12,
                "text": "Outputs of this process are the variables codIRange, codILow, and BinCountsInNALunits."
            },
            {
                "line_number": 13,
                "text": "Figure 9-7 shows the flowchart for encoding a single decision. In a first step, the variable codIRangeLPS is derived as"
            },
            {
                "line_number": 14,
                "text": "follows."
            },
            {
                "line_number": 15,
                "text": "Given the current value of codIRange, codIRange is mapped to the index qCodIRangeIdx of a quantized value of"
            },
            {
                "line_number": 16,
                "text": "codIRange by using Equation 9-25. The value of qCodIRangeIdx and the value of pStateIdx associated with ctxIdx are"
            },
            {
                "line_number": 17,
                "text": "used to determine the value of the variable rangeTabLPS as specified in Table 9-44, which is assigned to codIRangeLPS."
            },
            {
                "line_number": 18,
                "text": "The value of codIRange − codIRangeLPS is assigned to codIRange."
            },
            {
                "line_number": 19,
                "text": "In a second step, the value of binVal is compared to valMPS associated with ctxIdx. When binVal is different from valMPS,"
            },
            {
                "line_number": 20,
                "text": "codIRange is added to codILow and codIRange is set equal to the value codIRangeLPS. Given the encoded decision, the"
            },
            {
                "line_number": 21,
                "text": "state transition is performed as specified in clause 9.3.3.2.1.1. Depending on the current value of codIRange,"
            },
            {
                "line_number": 22,
                "text": "renormalization is performed as specified in clause 9.3.4.3. Finally, the variable BinCountsInNALunits is incremented"
            },
            {
                "line_number": 23,
                "text": "by 1."
            },
            {
                "line_number": 24,
                "text": "278 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 301,
        "lines": [
            {
                "line_number": 1,
                "text": "EncodeDecision(ctxIdx,binVal)"
            },
            {
                "line_number": 2,
                "text": "qCodIRangeIdx = (codIRange >> 6) & 3"
            },
            {
                "line_number": 3,
                "text": "codIRangeLPS = rangeTabLPS[pStateIdx][qCodIRangeIdx]"
            },
            {
                "line_number": 4,
                "text": "codIRange = codIRange  codIRangeLPS"
            },
            {
                "line_number": 5,
                "text": "Yes binVal != No"
            },
            {
                "line_number": 6,
                "text": "valMPS"
            },
            {
                "line_number": 7,
                "text": "codILow = codILow + codIRange"
            },
            {
                "line_number": 8,
                "text": "codIRange = codIRangeLPS"
            },
            {
                "line_number": 9,
                "text": "No"
            },
            {
                "line_number": 10,
                "text": "pStateIdx != 0"
            },
            {
                "line_number": 11,
                "text": "valMPS = 1 – valMPS"
            },
            {
                "line_number": 12,
                "text": "Yes"
            },
            {
                "line_number": 13,
                "text": "pStateIdx = transIdxLPS[pStateIdx] pStateIdx = transIdxMPS[pStateIdx]"
            },
            {
                "line_number": 14,
                "text": "RenormE"
            },
            {
                "line_number": 15,
                "text": "BinCountsInNALunits = BinCountsInNALunits + 1"
            },
            {
                "line_number": 16,
                "text": "Done"
            },
            {
                "line_number": 17,
                "text": "Figure 9-7 – Flowchart for encoding a decision"
            },
            {
                "line_number": 18,
                "text": "9.3.4.3 Renormalization process in the arithmetic encoding engine (informative)"
            },
            {
                "line_number": 19,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 20,
                "text": "Inputs to this process are the variables codIRange, codILow, firstBitFlag, and bitsOutstanding."
            },
            {
                "line_number": 21,
                "text": "Outputs of this process are zero or more bits written to the RBSP and the updated variables codIRange, codILow,"
            },
            {
                "line_number": 22,
                "text": "firstBitFlag, and bitsOutstanding."
            },
            {
                "line_number": 23,
                "text": "Rec. ITU-T H.264 (06/2019) 279"
            }
        ]
    },
    {
        "page_number": 302,
        "lines": [
            {
                "line_number": 1,
                "text": "Renormalization is illustrated in Figure 9-8."
            },
            {
                "line_number": 2,
                "text": "RenormE"
            },
            {
                "line_number": 3,
                "text": "No Yes"
            },
            {
                "line_number": 4,
                "text": "codIRange < 256"
            },
            {
                "line_number": 5,
                "text": "Yes No"
            },
            {
                "line_number": 6,
                "text": "codILow < 256"
            },
            {
                "line_number": 7,
                "text": "No Yes"
            },
            {
                "line_number": 8,
                "text": "codILow >= 512"
            },
            {
                "line_number": 9,
                "text": "codILow = codILow 256"
            },
            {
                "line_number": 10,
                "text": "codILow = codILow  512"
            },
            {
                "line_number": 11,
                "text": "bitsOutstanding = bitsOutstanding + 1"
            },
            {
                "line_number": 12,
                "text": "PutBit(0) PutBit(1)"
            },
            {
                "line_number": 13,
                "text": "codIRange = codIRange << 1"
            },
            {
                "line_number": 14,
                "text": "codILow = codILow << 1"
            },
            {
                "line_number": 15,
                "text": "Done"
            },
            {
                "line_number": 16,
                "text": "Figure 9-8 – Flowchart of renormalization in the encoder"
            },
            {
                "line_number": 17,
                "text": "The PutBit( ) procedure described in Figure 9-9 provides carry over control. It uses the function WriteBits( B, N ) that"
            },
            {
                "line_number": 18,
                "text": "writes N bits with value B to the bitstream and advances the bitstream pointer by N bit positions. This function assumes"
            },
            {
                "line_number": 19,
                "text": "the existence of a bitstream pointer with an indication of the position of the next bit to be written to the bitstream by the"
            },
            {
                "line_number": 20,
                "text": "encoding process."
            },
            {
                "line_number": 21,
                "text": "280 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 303,
        "lines": [
            {
                "line_number": 1,
                "text": "Yes"
            },
            {
                "line_number": 2,
                "text": "firstBitFlag = 0 WriteBits(B, 1)"
            },
            {
                "line_number": 3,
                "text": "Yes"
            },
            {
                "line_number": 4,
                "text": "bitsOutstanding > 0"
            },
            {
                "line_number": 5,
                "text": "WriteBits(1  B, 1)"
            },
            {
                "line_number": 6,
                "text": "bitsOutstanding = bitsOutstanding – 1"
            },
            {
                "line_number": 7,
                "text": "Figure 9-9 – Flowchart of PutBit(B)"
            },
            {
                "line_number": 8,
                "text": "9.3.4.4 Bypass encoding process for binary decisions (informative)"
            },
            {
                "line_number": 9,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 10,
                "text": "Inputs to this process are the variables binVal, codILow, codIRange, bitsOutstanding, and BinCountsInNALunits."
            },
            {
                "line_number": 11,
                "text": "Output of this process is a bit written to the RBSP and the updated variables codILow, bitsOutstanding, and"
            },
            {
                "line_number": 12,
                "text": "BinCountsInNALunits."
            },
            {
                "line_number": 13,
                "text": "This encoding process applies to all binary decisions with bypassFlag equal to 1. Renormalization is included in the"
            },
            {
                "line_number": 14,
                "text": "specification of this process as given in Figure 9-10."
            },
            {
                "line_number": 15,
                "text": "Rec. ITU-T H.264 (06/2019) 281"
            }
        ]
    },
    {
        "page_number": 304,
        "lines": [
            {
                "line_number": 1,
                "text": "EncodeBypass(binVal)"
            },
            {
                "line_number": 2,
                "text": "codILow = codILow << 1"
            },
            {
                "line_number": 3,
                "text": "Yes No"
            },
            {
                "line_number": 4,
                "text": "binVal != 0"
            },
            {
                "line_number": 5,
                "text": "codILow = codILow + codIRange"
            },
            {
                "line_number": 6,
                "text": "No codILow >= Yes"
            },
            {
                "line_number": 7,
                "text": "1024"
            },
            {
                "line_number": 8,
                "text": "Yes No"
            },
            {
                "line_number": 9,
                "text": "codILow < 512"
            },
            {
                "line_number": 10,
                "text": "codILow = codILow  1024"
            },
            {
                "line_number": 11,
                "text": "codILow = codILow  512"
            },
            {
                "line_number": 12,
                "text": "bitsOutstanding = bitsOutstanding + 1"
            },
            {
                "line_number": 13,
                "text": "Done"
            },
            {
                "line_number": 14,
                "text": "Figure 9-10 – Flowchart of encoding bypass"
            },
            {
                "line_number": 15,
                "text": "9.3.4.5 Encoding process for a binary decision before termination (informative)"
            },
            {
                "line_number": 16,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 17,
                "text": "Inputs to this process are the variables binVal, codIRange, codILow, bitsOutstanding, and BinCountsInNALunits."
            },
            {
                "line_number": 18,
                "text": "Outputs of this process are zero or more bits written to the RBSP and the updated variables codILow, codIRange,"
            },
            {
                "line_number": 19,
                "text": "bitsOutstanding, and BinCountsInNALunits."
            },
            {
                "line_number": 20,
                "text": "This encoding routine shown in Figure 9-11 applies to encoding of the end_of_slice_flag and of the bin indicating the"
            },
            {
                "line_number": 21,
                "text": "I_PCM mb_type both associated with ctxIdx equal to 276."
            },
            {
                "line_number": 22,
                "text": "282 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 305,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure 9-11 – Flowchart of encoding a decision before termination"
            },
            {
                "line_number": 2,
                "text": "When the value of binVal to encode is equal to 1, CABAC encoding is terminated and the flushing procedure shown in"
            },
            {
                "line_number": 3,
                "text": "Figure 9-12 is applied. In this flushing procedure, the last bit written by WriteBits( B, N ) is equal to 1. When encoding"
            },
            {
                "line_number": 4,
                "text": "end_of_slice_flag, this last bit is interpreted as the rbsp_stop_one_bit."
            },
            {
                "line_number": 5,
                "text": "EncodeFlush"
            },
            {
                "line_number": 6,
                "text": "codIRange = 2"
            },
            {
                "line_number": 7,
                "text": "RenormE"
            },
            {
                "line_number": 8,
                "text": "PutBit((codILow >> 9) & 1)"
            },
            {
                "line_number": 9,
                "text": "WriteBits(((codILow >> 7) & 3) | 1, 2)"
            },
            {
                "line_number": 10,
                "text": "Done"
            },
            {
                "line_number": 11,
                "text": "Figure 9-12 – Flowchart of flushing at termination"
            },
            {
                "line_number": 12,
                "text": "Rec. ITU-T H.264 (06/2019) 283"
            }
        ]
    },
    {
        "page_number": 306,
        "lines": [
            {
                "line_number": 1,
                "text": "9.3.4.6 Byte stuffing process (informative)"
            },
            {
                "line_number": 2,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 3,
                "text": "This process is invoked after encoding the last macroblock of the last slice of a picture and after encapsulation."
            },
            {
                "line_number": 4,
                "text": "Inputs to this process are the number of bytes NumBytesInVclNALunits of all VCL NAL units of a picture, the number of"
            },
            {
                "line_number": 5,
                "text": "macroblocks PicSizeInMbs in the picture, and the number of binary symbols BinCountsInNALunits resulting from"
            },
            {
                "line_number": 6,
                "text": "encoding the contents of all VCL NAL units of the picture."
            },
            {
                "line_number": 7,
                "text": "NOTE – The value of BinCountsInNALunits is the result of encoding all slices of a coded picture. After initializing for the first slice"
            },
            {
                "line_number": 8,
                "text": "of a coded picture as specified in clause 9.3.4.1, BinCountsInNALunits is incremented as specified in clauses 9.3.4.2, 9.3.4.4, and"
            },
            {
                "line_number": 9,
                "text": "9.3.4.5."
            },
            {
                "line_number": 10,
                "text": "Outputs of this process are zero or more bytes appended to the NAL unit."
            },
            {
                "line_number": 11,
                "text": "Let the variable k be set equal to Ceil( ( Ceil( 3 * ( 32 * BinCountsInNALunits − RawMbBits * PicSizeInMbs ) ÷ 1024 ) −"
            },
            {
                "line_number": 12,
                "text": "NumBytesInVclNALunits ) ÷ 3 ). Depending on the variable k the following applies:"
            },
            {
                "line_number": 13,
                "text": "– If k is less than or equal to 0, no cabac_zero_word is appended to the NAL unit."
            },
            {
                "line_number": 14,
                "text": "– Otherwise (k is greater than 0), the 3-byte sequence 0x000003 is appended k times to the NAL unit after encapsulation,"
            },
            {
                "line_number": 15,
                "text": "where the first two bytes 0x0000 represent a cabac_zero_word and the third byte 0x03 represents an"
            },
            {
                "line_number": 16,
                "text": "emulation_prevention_three_byte."
            },
            {
                "line_number": 17,
                "text": "284 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 307,
        "lines": [
            {
                "line_number": 1,
                "text": "Annex A"
            },
            {
                "line_number": 2,
                "text": "Profiles and levels"
            },
            {
                "line_number": 3,
                "text": "(This annex forms an integral part of this Recommendation | International Standard.)"
            },
            {
                "line_number": 4,
                "text": "Profiles and levels specify restrictions on bitstreams and hence limits on the capabilities needed to decode the bitstreams."
            },
            {
                "line_number": 5,
                "text": "Profiles and levels may also be used to indicate interoperability points between individual decoder implementations."
            },
            {
                "line_number": 6,
                "text": "NOTE 1 – This Recommendation | International Standard does not include individually selectable \"options\" at the decoder, as this"
            },
            {
                "line_number": 7,
                "text": "would increase interoperability difficulties."
            },
            {
                "line_number": 8,
                "text": "Each profile specifies a subset of algorithmic features and limits that shall be supported by all decoders conforming to that"
            },
            {
                "line_number": 9,
                "text": "profile."
            },
            {
                "line_number": 10,
                "text": "NOTE 2 – Encoders are not required to make use of any particular subset of features supported in a profile."
            },
            {
                "line_number": 11,
                "text": "Each level specifies a set of limits on the values that may be taken by the syntax elements of this"
            },
            {
                "line_number": 12,
                "text": "Recommendation | International Standard. The same set of level definitions is used with all profiles, but individual"
            },
            {
                "line_number": 13,
                "text": "implementations may support a different level for each supported profile. For any given profile, levels generally correspond"
            },
            {
                "line_number": 14,
                "text": "to decoder processing load and memory capability."
            },
            {
                "line_number": 15,
                "text": "The profiles that are specified in clause A.2 are also referred to as the profiles specified in Annex A."
            },
            {
                "line_number": 16,
                "text": "A.1 Requirements on video decoder capability"
            },
            {
                "line_number": 17,
                "text": "Capabilities of video decoders conforming to this Recommendation | International Standard are specified in terms of the"
            },
            {
                "line_number": 18,
                "text": "ability to decode video streams conforming to the constraints of profiles and levels specified in this annex. For each such"
            },
            {
                "line_number": 19,
                "text": "profile, the level supported for that profile shall also be expressed."
            },
            {
                "line_number": 20,
                "text": "Specific values are specified in this annex for the syntax elements profile_idc and level_idc. All other values of profile_idc"
            },
            {
                "line_number": 21,
                "text": "and level_idc are reserved for future use by ITU-T | ISO/IEC."
            },
            {
                "line_number": 22,
                "text": "NOTE – Decoders should not infer that when a reserved value of profile_idc or level_idc falls between the values specified in this"
            },
            {
                "line_number": 23,
                "text": "Recommendation | International Standard that this indicates intermediate capabilities between the specified profiles or levels, as"
            },
            {
                "line_number": 24,
                "text": "there are no restrictions on the method to be chosen by ITU-T | ISO/IEC for the use of such future reserved values."
            },
            {
                "line_number": 25,
                "text": "A.2 Profiles"
            },
            {
                "line_number": 26,
                "text": "All constraints for picture parameter sets that are specified in clauses A.2.1 to A.2.11 are constraints for picture parameter"
            },
            {
                "line_number": 27,
                "text": "sets that are activated in the bitstream. All constraints for sequence parameter sets that are specified in clauses A.2.1 to"
            },
            {
                "line_number": 28,
                "text": "A.2.11 are constraints for sequence parameter sets that are activated in the bitstream."
            },
            {
                "line_number": 29,
                "text": "A.2.1 Baseline profile"
            },
            {
                "line_number": 30,
                "text": "Bitstreams conforming to the Baseline profile shall obey the following constraints:"
            },
            {
                "line_number": 31,
                "text": "– Only I and P slice types may be present."
            },
            {
                "line_number": 32,
                "text": "– NAL unit streams shall not contain nal_unit_type values in the range of 2 to 4, inclusive."
            },
            {
                "line_number": 33,
                "text": "– Sequence parameter sets shall have frame_mbs_only_flag equal to 1."
            },
            {
                "line_number": 34,
                "text": "– The syntax elements chroma_format_idc, bit_depth_luma_minus8, bit_depth_chroma_minus8,"
            },
            {
                "line_number": 35,
                "text": "qpprime_y_zero_transform_bypass_flag, and seq_scaling_matrix_present_flag shall not be present in sequence"
            },
            {
                "line_number": 36,
                "text": "parameter sets."
            },
            {
                "line_number": 37,
                "text": "– Picture parameter sets shall have weighted_pred_flag and weighted_bipred_idc both equal to 0."
            },
            {
                "line_number": 38,
                "text": "– Picture parameter sets shall have entropy_coding_mode_flag equal to 0."
            },
            {
                "line_number": 39,
                "text": "– Picture parameter sets shall have num_slice_groups_minus1 in the range of 0 to 7, inclusive."
            },
            {
                "line_number": 40,
                "text": "– The syntax elements transform_8x8_mode_flag, pic_scaling_matrix_present_flag, and"
            },
            {
                "line_number": 41,
                "text": "second_chroma_qp_index_offset shall not be present in picture parameter sets."
            },
            {
                "line_number": 42,
                "text": "– The syntax element level_prefix shall not be greater than 15 (when present)."
            },
            {
                "line_number": 43,
                "text": "– The syntax elements pcm_sample_luma[ i ], with i = 0..255, and pcm_sample_chroma[ i ], with"
            },
            {
                "line_number": 44,
                "text": "i = 0..2 * MbWidthC * MbHeightC − 1, shall not be equal to 0 (when present)."
            },
            {
                "line_number": 45,
                "text": "– The level constraints specified for the Baseline profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 46,
                "text": "Conformance of a bitstream to the Baseline profile is indicated by profile_idc being equal to 66."
            },
            {
                "line_number": 47,
                "text": "Rec. ITU-T H.264 (06/2019) 285"
            }
        ]
    },
    {
        "page_number": 308,
        "lines": [
            {
                "line_number": 1,
                "text": "Decoders conforming to the Baseline profile at a specific level shall be capable of decoding all bitstreams in which"
            },
            {
                "line_number": 2,
                "text": "profile_idc is equal to 66 or constraint_set0_flag is equal to 1 and in which level_idc and constraint_set3_flag represent a"
            },
            {
                "line_number": 3,
                "text": "level less than or equal to the specified level."
            },
            {
                "line_number": 4,
                "text": "A.2.1.1 Constrained Baseline profile"
            },
            {
                "line_number": 5,
                "text": "Bitstreams conforming to the Constrained Baseline profile shall obey all constraints specified in clause A.2.1 for the"
            },
            {
                "line_number": 6,
                "text": "Baseline profile and all constraints specified in clause A.2.2 for the Main profile."
            },
            {
                "line_number": 7,
                "text": "Conformance of a bitstream to the Constrained Baseline profile is indicated by profile_idc being equal to 66 with"
            },
            {
                "line_number": 8,
                "text": "constraint_set1_flag being equal to 1."
            },
            {
                "line_number": 9,
                "text": "NOTE – This specification of the Constrained Baseline profile is technically identical to specification of the use of the Baseline"
            },
            {
                "line_number": 10,
                "text": "profile with constraint_set1_flag equal to 1. Thus, any existing specifications (in other documents that reference this"
            },
            {
                "line_number": 11,
                "text": "Recommendation | International Standard) that have referred to the use of the Baseline profile with constraint_set1_flag equal to 1"
            },
            {
                "line_number": 12,
                "text": "should thus be interpreted as continuing in force as being technically identical to referring to the use of the Constrained Baseline"
            },
            {
                "line_number": 13,
                "text": "profile (without any need for revision of these existing specifications to instead refer explicitly to the use of the Constrained Baseline"
            },
            {
                "line_number": 14,
                "text": "profile)."
            },
            {
                "line_number": 15,
                "text": "Decoders conforming to the Constrained Baseline profile at a specific level shall be capable of decoding all bitstreams in"
            },
            {
                "line_number": 16,
                "text": "which all of the following are true:"
            },
            {
                "line_number": 17,
                "text": "– profile_idc is equal to 66 or constraint_set0_flag is equal to 1,"
            },
            {
                "line_number": 18,
                "text": "– constraint_set1_flag is equal to 1,"
            },
            {
                "line_number": 19,
                "text": "– level_idc and constraint_set3_flag represent a level less than or equal to the specified level."
            },
            {
                "line_number": 20,
                "text": "A.2.2 Main profile"
            },
            {
                "line_number": 21,
                "text": "Bitstreams conforming to the Main profile shall obey the following constraints:"
            },
            {
                "line_number": 22,
                "text": "– Only I, P, and B slice types may be present."
            },
            {
                "line_number": 23,
                "text": "– NAL unit streams shall not contain nal_unit_type values in the range of 2 to 4, inclusive."
            },
            {
                "line_number": 24,
                "text": "– Arbitrary slice order is not allowed."
            },
            {
                "line_number": 25,
                "text": "– The syntax elements chroma_format_idc, bit_depth_luma_minus8, bit_depth_chroma_minus8,"
            },
            {
                "line_number": 26,
                "text": "qpprime_y_zero_transform_bypass_flag, and seq_scaling_matrix_present_flag shall not be present in sequence"
            },
            {
                "line_number": 27,
                "text": "parameter sets."
            },
            {
                "line_number": 28,
                "text": "– Picture parameter sets shall have num_slice_groups_minus1 equal to 0 only."
            },
            {
                "line_number": 29,
                "text": "– Picture parameter sets shall have redundant_pic_cnt_present_flag equal to 0 only."
            },
            {
                "line_number": 30,
                "text": "– The syntax elements transform_8x8_mode_flag, pic_scaling_matrix_present_flag, and"
            },
            {
                "line_number": 31,
                "text": "second_chroma_qp_index_offset shall not be present in picture parameter sets."
            },
            {
                "line_number": 32,
                "text": "– The syntax element level_prefix shall not be greater than 15 (when present)."
            },
            {
                "line_number": 33,
                "text": "– The syntax elements pcm_sample_luma[ i ], with i = 0..255, and pcm_sample_chroma[ i ], with"
            },
            {
                "line_number": 34,
                "text": "i = 0..2 * MbWidthC * MbHeightC − 1, shall not be equal to 0 (when present)."
            },
            {
                "line_number": 35,
                "text": "– The level constraints specified for the Main profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 36,
                "text": "Conformance of a bitstream to the Main profile is indicated by profile_idc being equal to 77."
            },
            {
                "line_number": 37,
                "text": "Decoders conforming to the Main profile at a specified level shall be capable of decoding all bitstreams in which profile_idc"
            },
            {
                "line_number": 38,
                "text": "is equal to 77 or constraint_set1_flag is equal to 1 and in which level_idc and constraint_set3_flag represent a level less"
            },
            {
                "line_number": 39,
                "text": "than or equal to the specified level."
            },
            {
                "line_number": 40,
                "text": "A.2.3 Extended profile"
            },
            {
                "line_number": 41,
                "text": "Bitstreams conforming to the Extended profile shall obey the following constraints:"
            },
            {
                "line_number": 42,
                "text": "– Sequence parameter sets shall have direct_8x8_inference_flag equal to 1."
            },
            {
                "line_number": 43,
                "text": "– The syntax elements chroma_format_idc, bit_depth_luma_minus8, bit_depth_chroma_minus8,"
            },
            {
                "line_number": 44,
                "text": "qpprime_y_zero_transform_bypass_flag, and seq_scaling_matrix_present_flag shall not be present in sequence"
            },
            {
                "line_number": 45,
                "text": "parameter sets."
            },
            {
                "line_number": 46,
                "text": "– Picture parameter sets shall have entropy_coding_mode_flag equal to 0."
            },
            {
                "line_number": 47,
                "text": "– Picture parameter sets shall have num_slice_groups_minus1 in the range of 0 to 7, inclusive."
            },
            {
                "line_number": 48,
                "text": "– The syntax elements transform_8x8_mode_flag, pic_scaling_matrix_present_flag, and"
            },
            {
                "line_number": 49,
                "text": "second_chroma_qp_index_offset shall not be present in picture parameter sets."
            },
            {
                "line_number": 50,
                "text": "– The syntax element level_prefix shall not be greater than 15 (when present)."
            },
            {
                "line_number": 51,
                "text": "286 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 309,
        "lines": [
            {
                "line_number": 1,
                "text": "– The syntax elements pcm_sample_luma[ i ], with i = 0..255, and pcm_sample_chroma[ i ], with"
            },
            {
                "line_number": 2,
                "text": "i = 0..2 * MbWidthC * MbHeightC − 1, shall not be equal to 0 (when present)."
            },
            {
                "line_number": 3,
                "text": "– The level constraints specified for the Extended profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 4,
                "text": "Conformance of a bitstream to the Extended profile is indicated by profile_idc being equal to 88."
            },
            {
                "line_number": 5,
                "text": "Decoders conforming to the Extended profile at a specified level shall be capable of decoding all bitstreams in which"
            },
            {
                "line_number": 6,
                "text": "profile_idc is equal to 88 or constraint_set2_flag is equal to 1 and in which level_idc represents a level less than or equal"
            },
            {
                "line_number": 7,
                "text": "to specified level."
            },
            {
                "line_number": 8,
                "text": "Decoders conforming to the Extended profile at a specified level shall also be capable of decoding all bitstreams in which"
            },
            {
                "line_number": 9,
                "text": "profile_idc is equal to 66 or constraint_set0_flag is equal to 1, in which level_idc and constraint_set3_flag represent a level"
            },
            {
                "line_number": 10,
                "text": "less than or equal to the specified level."
            },
            {
                "line_number": 11,
                "text": "A.2.4 High profile"
            },
            {
                "line_number": 12,
                "text": "Bitstreams conforming to the High profile shall obey the following constraints:"
            },
            {
                "line_number": 13,
                "text": "– Only I, P, and B slice types may be present."
            },
            {
                "line_number": 14,
                "text": "– NAL unit streams shall not contain nal_unit_type values in the range of 2 to 4, inclusive."
            },
            {
                "line_number": 15,
                "text": "– Arbitrary slice order is not allowed."
            },
            {
                "line_number": 16,
                "text": "– Picture parameter sets shall have num_slice_groups_minus1 equal to 0 only."
            },
            {
                "line_number": 17,
                "text": "– Picture parameter sets shall have redundant_pic_cnt_present_flag equal to 0 only."
            },
            {
                "line_number": 18,
                "text": "– Sequence parameter sets shall have chroma_format_idc in the range of 0 to 1 inclusive."
            },
            {
                "line_number": 19,
                "text": "– Sequence parameter sets shall have bit_depth_luma_minus8 equal to 0 only."
            },
            {
                "line_number": 20,
                "text": "– Sequence parameter sets shall have bit_depth_chroma_minus8 equal to 0 only."
            },
            {
                "line_number": 21,
                "text": "– Sequence parameter sets shall have qpprime_y_zero_transform_bypass_flag equal to 0 only."
            },
            {
                "line_number": 22,
                "text": "– The level constraints specified for the High profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 23,
                "text": "Conformance of a bitstream to the High profile is indicated by profile_idc being equal to 100. Decoders conforming to the"
            },
            {
                "line_number": 24,
                "text": "High profile at a specific level shall be capable of decoding all bitstreams in which either or both of the following conditions"
            },
            {
                "line_number": 25,
                "text": "are true:"
            },
            {
                "line_number": 26,
                "text": "– (profile_idc is equal to 77 or constraint_set1_flag is equal to 1) and the combination of level_idc and"
            },
            {
                "line_number": 27,
                "text": "constraint_set3_flag represent a level less than or equal to the specified level,"
            },
            {
                "line_number": 28,
                "text": "– profile_idc is equal to 100 and level_idc represents a level less than or equal to the specified level."
            },
            {
                "line_number": 29,
                "text": "NOTE – The value 100 for profile_idc indicates that the bitstream conforms to the High profile as specified in this clause. When"
            },
            {
                "line_number": 30,
                "text": "profile_idc is equal to 100 and constraint_set3_flag is equal to 1, this indicates that the bitstream conforms to the High profile and"
            },
            {
                "line_number": 31,
                "text": "additionally conforms to the constraints specified for the High 10 Intra profile in clause A.2.8. For example, such a bitstream must"
            },
            {
                "line_number": 32,
                "text": "have bit_depth_luma_minus8 equal to 0, have bit_depth_chroma_minus8 equal to 0, obey the MinCR, MaxBR and MaxCPB"
            },
            {
                "line_number": 33,
                "text": "constraints of the High profile, contain only IDR pictures, have max_num_ref_frames equal to 0, have dpb_output_delay equal to 0,"
            },
            {
                "line_number": 34,
                "text": "and obey the maximum slice size constraint of the High 10 Intra profile."
            },
            {
                "line_number": 35,
                "text": "A.2.4.1 Progressive High profile"
            },
            {
                "line_number": 36,
                "text": "Bitstreams conforming to the Progressive High profile shall obey all constraints specified in clause A.2.4 for the High"
            },
            {
                "line_number": 37,
                "text": "profile, and shall additionally obey the constraint that sequence parameter sets shall have frame_mbs_only_flag equal to 1."
            },
            {
                "line_number": 38,
                "text": "Conformance of a bitstream to the Progressive High profile is indicated by profile_idc being equal to 100 with"
            },
            {
                "line_number": 39,
                "text": "constraint_set4_flag being equal to 1."
            },
            {
                "line_number": 40,
                "text": "Decoders conforming to the Progressive High profile at a specific level shall be capable of decoding all bitstreams in which"
            },
            {
                "line_number": 41,
                "text": "one or more of the following conditions are true:"
            },
            {
                "line_number": 42,
                "text": "– (profile_idc is equal to 66 or constraint_set0_flag is equal to 1), constraint_set1_flag is equal to 1, and the combination"
            },
            {
                "line_number": 43,
                "text": "of level_idc and constraint_set3_flag represents a level less than or equal to the specified level."
            },
            {
                "line_number": 44,
                "text": "– profile_idc is equal to 77, constraint_set0_flag is equal to 1, and the combination of level_idc and constraint_set3_flag"
            },
            {
                "line_number": 45,
                "text": "represents a level less than or equal to the specified level."
            },
            {
                "line_number": 46,
                "text": "– profile_idc is equal to 77, constraint_set4_flag is equal to 1, and the combination of level_idc and constraint_set3_flag"
            },
            {
                "line_number": 47,
                "text": "represents a level less than or equal to the specified level."
            },
            {
                "line_number": 48,
                "text": "– profile_idc is equal to 88, constraint_set1_flag is equal to 1, constraint_set4_flag is equal to 1, and the combination of"
            },
            {
                "line_number": 49,
                "text": "level_idc and constraint_set3_flag represents a level less than or equal to the specified level."
            },
            {
                "line_number": 50,
                "text": "– profile_idc is equal to 100, constraint_set4_flag is equal to 1, and level_idc represents a level less than or equal to the"
            },
            {
                "line_number": 51,
                "text": "specified level."
            },
            {
                "line_number": 52,
                "text": "Rec. ITU-T H.264 (06/2019) 287"
            }
        ]
    },
    {
        "page_number": 310,
        "lines": [
            {
                "line_number": 1,
                "text": "A.2.4.2 Constrained High profile"
            },
            {
                "line_number": 2,
                "text": "Bitstreams conforming to the Constrained High profile shall obey all constraints specified in clause A.2.4.1 for the"
            },
            {
                "line_number": 3,
                "text": "Progressive High profile, and shall additionally obey the constraint that B slice types shall not be present."
            },
            {
                "line_number": 4,
                "text": "Conformance of a bitstream to the Constrained High profile is indicated by profile_idc being equal to 100 with both"
            },
            {
                "line_number": 5,
                "text": "constraint_set4_flag and constraint_set5_flag being equal to 1."
            },
            {
                "line_number": 6,
                "text": "Decoders conforming to the Constrained High profile at a specific level shall be capable of decoding all bitstreams in"
            },
            {
                "line_number": 7,
                "text": "which one or more of the following conditions are true:"
            },
            {
                "line_number": 8,
                "text": "– (profile_idc is equal to 66 or constraint_set0_flag is equal to 1), constraint_set1_flag is equal to 1, and the combination"
            },
            {
                "line_number": 9,
                "text": "of level_idc and constraint_set3_flag represents a level less than or equal to the specified level."
            },
            {
                "line_number": 10,
                "text": "– profile_idc is equal to 77, constraint_set0_flag is equal to 1, and the combination of level_idc and constraint_set3_flag"
            },
            {
                "line_number": 11,
                "text": "represents a level less than or equal to the specified level."
            },
            {
                "line_number": 12,
                "text": "– profile_idc is equal to 77, constraint_set4_flag is equal to 1, constraint_set5_flag is equal to 1, and level_idc represents"
            },
            {
                "line_number": 13,
                "text": "a level less than or equal to the specified level."
            },
            {
                "line_number": 14,
                "text": "– profile_idc is equal to 88, constraint_set1_flag is equal to 1, constraint_set4_flag is equal to 1, constraint_set5_flag is"
            },
            {
                "line_number": 15,
                "text": "equal to 1, and the combination of level_idc and constraint_set3_flag represents a level less than or equal to the"
            },
            {
                "line_number": 16,
                "text": "specified level."
            },
            {
                "line_number": 17,
                "text": "– profile_idc is equal to 100, constraint_set4_flag is equal to 1, constraint_set5_flag is equal to 1, and level_idc"
            },
            {
                "line_number": 18,
                "text": "represents a level less than or equal to the specified level."
            },
            {
                "line_number": 19,
                "text": "A.2.5 High 10 profile"
            },
            {
                "line_number": 20,
                "text": "Bitstreams conforming to the High 10 profile shall obey the following constraints:"
            },
            {
                "line_number": 21,
                "text": "– Only I, P, and B slice types may be present."
            },
            {
                "line_number": 22,
                "text": "– NAL unit streams shall not contain nal_unit_type values in the range of 2 to 4, inclusive."
            },
            {
                "line_number": 23,
                "text": "– Arbitrary slice order is not allowed."
            },
            {
                "line_number": 24,
                "text": "– Picture parameter sets shall have num_slice_groups_minus1 equal to 0 only."
            },
            {
                "line_number": 25,
                "text": "– Picture parameter sets shall have redundant_pic_cnt_present_flag equal to 0 only."
            },
            {
                "line_number": 26,
                "text": "– Sequence parameter sets shall have chroma_format_idc in the range of 0 to 1 inclusive."
            },
            {
                "line_number": 27,
                "text": "– Sequence parameter sets shall have bit_depth_luma_minus8 in the range of 0 to 2 inclusive."
            },
            {
                "line_number": 28,
                "text": "– Sequence parameter sets shall have bit_depth_chroma_minus8 in the range of 0 to 2 inclusive."
            },
            {
                "line_number": 29,
                "text": "– Sequence parameter sets shall have qpprime_y_zero_transform_bypass_flag equal to 0 only."
            },
            {
                "line_number": 30,
                "text": "– The level constraints specified for the High 10 profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 31,
                "text": "Conformance of a bitstream to the High 10 profile is indicated by profile_idc being equal to 110. Decoders conforming to"
            },
            {
                "line_number": 32,
                "text": "the High 10 profile at a specific level shall be capable of decoding all bitstreams in which either or both of the following"
            },
            {
                "line_number": 33,
                "text": "conditions are true:"
            },
            {
                "line_number": 34,
                "text": "– (profile_idc is equal to 77 or constraint_set1_flag is equal to 1) and the combination of level_idc and"
            },
            {
                "line_number": 35,
                "text": "constraint_set3_flag represent a level less than or equal to the specified level,"
            },
            {
                "line_number": 36,
                "text": "– profile_idc is equal to 100 or 110 and level_idc represents a level less than or equal to the specified level."
            },
            {
                "line_number": 37,
                "text": "A.2.5.1 Progressive High 10 profile"
            },
            {
                "line_number": 38,
                "text": "Bitstreams conforming to the Progressive High 10 profile shall obey all constraints specified in clause A.2.5 for the"
            },
            {
                "line_number": 39,
                "text": "High 10 profile, and shall additionally obey the constraint that sequence parameter sets shall have frame_mbs_only_flag"
            },
            {
                "line_number": 40,
                "text": "equal to 1."
            },
            {
                "line_number": 41,
                "text": "Conformance of a bitstream to the Progressive High 10 profile is indicated by profile_idc being equal to 110 with"
            },
            {
                "line_number": 42,
                "text": "constraint_set4_flag being equal to 1."
            },
            {
                "line_number": 43,
                "text": "Decoders conforming to the Progressive High 10 profile at a specific level shall be capable of decoding all bitstreams in"
            },
            {
                "line_number": 44,
                "text": "which one or more of the following conditions are true:"
            },
            {
                "line_number": 45,
                "text": "– (profile_idc is equal to 66 or constraint_set0_flag is equal to 1), constraint_set1_flag is equal to 1, and the combination"
            },
            {
                "line_number": 46,
                "text": "of level_idc and constraint_set3_flag represents a level less than or equal to the specified level."
            },
            {
                "line_number": 47,
                "text": "– profile_idc is equal to 77, constraint_set0_flag is equal to 1, and the combination of level_idc and constraint_set3_flag"
            },
            {
                "line_number": 48,
                "text": "represents a level less than or equal to the specified level."
            },
            {
                "line_number": 49,
                "text": "288 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 311,
        "lines": [
            {
                "line_number": 1,
                "text": "– profile_idc is equal to 77, constraint_set4_flag is equal to 1, and the combination of level_idc and constraint_set3_flag"
            },
            {
                "line_number": 2,
                "text": "represents a level less than or equal to the specified level."
            },
            {
                "line_number": 3,
                "text": "– profile_idc is equal to 88, constraint_set1_flag is equal to 1, constraint_set4_flag is equal to 1, and the combination"
            },
            {
                "line_number": 4,
                "text": "of level_idc and constraint_set3_flag represents a level less than or equal to the specified level."
            },
            {
                "line_number": 5,
                "text": "– profile_idc is equal to 100 or 110, constraint_set4_flag is equal to 1, and level_idc represents a level less than or equal"
            },
            {
                "line_number": 6,
                "text": "to the specified level."
            },
            {
                "line_number": 7,
                "text": "A.2.6 High 4:2:2 profile"
            },
            {
                "line_number": 8,
                "text": "Bitstreams conforming to the High 4:2:2 profile shall obey the following constraints:"
            },
            {
                "line_number": 9,
                "text": "– Only I, P, and B slice types may be present."
            },
            {
                "line_number": 10,
                "text": "– NAL unit streams shall not contain nal_unit_type values in the range of 2 to 4, inclusive."
            },
            {
                "line_number": 11,
                "text": "– Arbitrary slice order is not allowed."
            },
            {
                "line_number": 12,
                "text": "– Picture parameter sets shall have num_slice_groups_minus1 equal to 0 only."
            },
            {
                "line_number": 13,
                "text": "– Picture parameter sets shall have redundant_pic_cnt_present_flag equal to 0 only."
            },
            {
                "line_number": 14,
                "text": "– Sequence parameter sets shall have chroma_format_idc in the range of 0 to 2 inclusive."
            },
            {
                "line_number": 15,
                "text": "– Sequence parameter sets shall have bit_depth_luma_minus8 in the range of 0 to 2 inclusive."
            },
            {
                "line_number": 16,
                "text": "– Sequence parameter sets shall have bit_depth_chroma_minus8 in the range of 0 to 2 inclusive."
            },
            {
                "line_number": 17,
                "text": "– Sequence parameter sets shall have qpprime_y_zero_transform_bypass_flag equal to 0 only."
            },
            {
                "line_number": 18,
                "text": "– The level constraints specified for the High 4:2:2 profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 19,
                "text": "Conformance of a bitstream to the High 4:2:2 profile is indicated by profile_idc being equal to 122. Decoders conforming"
            },
            {
                "line_number": 20,
                "text": "to the High 4:2:2 profile at a specific level shall be capable of decoding all bitstreams in which either or both of the"
            },
            {
                "line_number": 21,
                "text": "following conditions are true:"
            },
            {
                "line_number": 22,
                "text": "– (profile_idc is equal to 77 or constraint_set1_flag is equal to 1) and the combination of level_idc and"
            },
            {
                "line_number": 23,
                "text": "constraint_set3_flag represent a level less than or equal to the specified level,"
            },
            {
                "line_number": 24,
                "text": "– profile_idc is equal to 100, 110, or 122 and level_idc represents a level less than or equal to the specified level."
            },
            {
                "line_number": 25,
                "text": "A.2.7 High 4:4:4 Predictive profile"
            },
            {
                "line_number": 26,
                "text": "Bitstreams conforming to the High 4:4:4 Predictive profile shall obey the following constraints:"
            },
            {
                "line_number": 27,
                "text": "– Only I, P, B slice types may be present."
            },
            {
                "line_number": 28,
                "text": "– NAL unit streams shall not contain nal_unit_type values in the range of 2 to 4, inclusive."
            },
            {
                "line_number": 29,
                "text": "– Arbitrary slice order is not allowed."
            },
            {
                "line_number": 30,
                "text": "– Picture parameter sets shall have num_slice_groups_minus1 equal to 0 only."
            },
            {
                "line_number": 31,
                "text": "– Picture parameter sets shall have redundant_pic_cnt_present_flag equal to 0 only."
            },
            {
                "line_number": 32,
                "text": "– Sequence parameter sets shall have bit_depth_luma_minus8 in the range of 0 to 6 inclusive."
            },
            {
                "line_number": 33,
                "text": "– Sequence parameter sets shall have bit_depth_chroma_minus8 in the range of 0 to 6 inclusive."
            },
            {
                "line_number": 34,
                "text": "– The level constraints specified for the High 4:4:4 Predictive profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 35,
                "text": "Conformance of a bitstream to the High 4:4:4 Predictive profile is indicated by profile_idc being equal to 244. Decoders"
            },
            {
                "line_number": 36,
                "text": "conforming to the High 4:4:4 Predictive profile at a specific level shall be capable of decoding all bitstreams in which"
            },
            {
                "line_number": 37,
                "text": "either or both of the following conditions are true:"
            },
            {
                "line_number": 38,
                "text": "– (profile_idc is equal to 77 or constraint_set1_flag is equal to 1) and the combination of level_idc and"
            },
            {
                "line_number": 39,
                "text": "constraint_set3_flag represent a level less than or equal to the specified level,"
            },
            {
                "line_number": 40,
                "text": "– profile_idc is equal to 44, 100, 110, 122, or 244 and the value of level_idc represents a level less than or equal to the"
            },
            {
                "line_number": 41,
                "text": "specified level."
            },
            {
                "line_number": 42,
                "text": "A.2.8 High 10 Intra profile"
            },
            {
                "line_number": 43,
                "text": "Bitstreams conforming to the High 10 Intra profile shall obey the following constraints:"
            },
            {
                "line_number": 44,
                "text": "– All constraints specified in clause A.2.5 for the High 10 profile shall be obeyed."
            },
            {
                "line_number": 45,
                "text": "– All pictures shall be IDR pictures."
            },
            {
                "line_number": 46,
                "text": "– Sequence parameter sets shall have max_num_ref_frames equal to 0."
            },
            {
                "line_number": 47,
                "text": "Rec. ITU-T H.264 (06/2019) 289"
            }
        ]
    },
    {
        "page_number": 312,
        "lines": [
            {
                "line_number": 1,
                "text": "– When vui_parameters_present_flag is equal to 1 and bitstream_restriction_flag is equal to 1, sequence parameter sets"
            },
            {
                "line_number": 2,
                "text": "shall have max_num_reorder_frames equal to 0."
            },
            {
                "line_number": 3,
                "text": "– When vui_parameters_present_flag is equal to 1 and bitstream_restriction_flag is equal to 1, sequence parameter sets"
            },
            {
                "line_number": 4,
                "text": "shall have max_dec_frame_buffering equal to 0."
            },
            {
                "line_number": 5,
                "text": "– Picture timing SEI messages, whether present in the bitstream (by non-VCL NAL units) or conveyed equivalently by"
            },
            {
                "line_number": 6,
                "text": "other means not specified in this Recommendation | International Standard, shall have dpb_output_delay equal to 0."
            },
            {
                "line_number": 7,
                "text": "– The level constraints specified for the High 10 Intra profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 8,
                "text": "Conformance of a bitstream to the High 10 Intra profile is indicated by constraint_set3_flag being equal to 1 with"
            },
            {
                "line_number": 9,
                "text": "profile_idc equal to 110. Decoders conforming to the High 10 Intra profile at a specific level shall be capable of decoding"
            },
            {
                "line_number": 10,
                "text": "all bitstreams in which all of the following conditions are true:"
            },
            {
                "line_number": 11,
                "text": "– profile_idc is equal to 100 or 110,"
            },
            {
                "line_number": 12,
                "text": "– constraint_set3_flag is equal to 1,"
            },
            {
                "line_number": 13,
                "text": "– level_idc represents a level less than or equal to the specified level."
            },
            {
                "line_number": 14,
                "text": "NOTE 1 – The value 100 for profile_idc indicates that the bitstream conforms to the High profile as specified in clause A.2.4. When"
            },
            {
                "line_number": 15,
                "text": "profile_idc is equal to 100 and constraint_set3_flag is equal to 1, this indicates that the bitstream conforms to the High profile and"
            },
            {
                "line_number": 16,
                "text": "additionally conforms to the constraints specified for the High 10 Intra profile in this clause. For example, such a bitstream must"
            },
            {
                "line_number": 17,
                "text": "have bit_depth_luma_minus8 equal to 0, have bit_depth_chroma_minus8 equal to 0, obey the MinCR, MaxBR and MaxCPB"
            },
            {
                "line_number": 18,
                "text": "constraints of the High profile, contain only IDR pictures, have max_num_ref_frames equal to 0, have dpb_output_delay equal to 0,"
            },
            {
                "line_number": 19,
                "text": "and obey the maximum slice size constraint of the High 10 Intra profile."
            },
            {
                "line_number": 20,
                "text": "The operation of the deblocking filter process specified in clause 8.7 is not required for decoder conformance to the"
            },
            {
                "line_number": 21,
                "text": "High 10 Intra profile."
            },
            {
                "line_number": 22,
                "text": "NOTE 2 – The deblocking filter process specified in clause 8.7 or some similar post-processing filter should be performed, although"
            },
            {
                "line_number": 23,
                "text": "this is not a requirement for decoder conformance to the High 10 Intra profile. The syntax elements sent by an encoder for control"
            },
            {
                "line_number": 24,
                "text": "of the deblocking filter process specified in clause 8.7 are considered only as advisory information for decoders conformance to the"
            },
            {
                "line_number": 25,
                "text": "High 10 Intra profile. However, the application of the deblocking filter process specified in clause 8.7 is required for decoder"
            },
            {
                "line_number": 26,
                "text": "conformance to the High 10, High 4:2:2, and High 4:4:4 Predictive profiles when decoding bitstreams that conform to the High 10"
            },
            {
                "line_number": 27,
                "text": "Intra profile."
            },
            {
                "line_number": 28,
                "text": "A.2.9 High 4:2:2 Intra profile"
            },
            {
                "line_number": 29,
                "text": "Bitstreams conforming to the High 4:2:2 Intra profile shall obey the following constraints:"
            },
            {
                "line_number": 30,
                "text": "– All constraints specified in clause A.2.6 for the High 4:2:2 profile shall be obeyed."
            },
            {
                "line_number": 31,
                "text": "– All pictures shall be IDR pictures."
            },
            {
                "line_number": 32,
                "text": "– Sequence parameter sets shall have max_num_ref_frames equal to 0."
            },
            {
                "line_number": 33,
                "text": "– When vui_parameters_present_flag is equal to 1 and bitstream_restriction_flag is equal to 1, sequence parameter sets"
            },
            {
                "line_number": 34,
                "text": "shall have max_num_reorder_frames equal to 0."
            },
            {
                "line_number": 35,
                "text": "– When vui_parameters_present_flag is equal to 1 and bitstream_restriction_flag is equal to 1, sequence parameter sets"
            },
            {
                "line_number": 36,
                "text": "shall have max_dec_frame_buffering equal to 0."
            },
            {
                "line_number": 37,
                "text": "– Picture timing SEI messages, whether present in the bitstream (by non-VCL NAL units) or conveyed equivalently by"
            },
            {
                "line_number": 38,
                "text": "other means not specified in this Recommendation | International Standard, shall have dpb_output_delay equal to 0."
            },
            {
                "line_number": 39,
                "text": "– The level constraints specified for the High 4:2:2 Intra profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 40,
                "text": "Conformance of a bitstream to the High 4:2:2 Intra profile is indicated by constraint_set3_flag being equal to 1 with"
            },
            {
                "line_number": 41,
                "text": "profile_idc equal to 122. Decoders conforming to the High 4:2:2 Intra profile at a specific level shall be capable of decoding"
            },
            {
                "line_number": 42,
                "text": "all bitstreams in which all of the following conditions are true:"
            },
            {
                "line_number": 43,
                "text": "– profile_idc is equal to 100, 110, or 122,"
            },
            {
                "line_number": 44,
                "text": "– constraint_set3_flag is equal to 1,"
            },
            {
                "line_number": 45,
                "text": "– level_idc represents a level less than or equal to the specified level."
            },
            {
                "line_number": 46,
                "text": "The operation of the deblocking filter process specified in clause 8.7 is not required for decoder conformance to the"
            },
            {
                "line_number": 47,
                "text": "High 4:2:2 Intra profile."
            },
            {
                "line_number": 48,
                "text": "NOTE – The deblocking filter process specified in clause 8.7 or some similar post-processing filter should be performed, although"
            },
            {
                "line_number": 49,
                "text": "this is not a requirement for decoder conformance to the High 4:2:2 Intra profile. The syntax elements sent by an encoder for control"
            },
            {
                "line_number": 50,
                "text": "of the deblocking filter process specified in clause 8.7 are considered only as advisory information for decoders conformance to the"
            },
            {
                "line_number": 51,
                "text": "High 4:2:2 Intra profile. However, the application of the deblocking filter process specified in clause 8.7 is required for decoder"
            },
            {
                "line_number": 52,
                "text": "conformance to the High 4:2:2, and High 4:4:4 Predictive profiles when decoding bitstreams that conform to the High 4:2:2 Intra"
            },
            {
                "line_number": 53,
                "text": "profile."
            },
            {
                "line_number": 54,
                "text": "290 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 313,
        "lines": [
            {
                "line_number": 1,
                "text": "A.2.10 High 4:4:4 Intra profile"
            },
            {
                "line_number": 2,
                "text": "Bitstreams conforming to the High 4:4:4 Intra profile shall obey the following constraints:"
            },
            {
                "line_number": 3,
                "text": "– All constraints specified in clause A.2.7 for the High 4:4:4 Predictive profile shall be obeyed."
            },
            {
                "line_number": 4,
                "text": "– All pictures shall be IDR pictures."
            },
            {
                "line_number": 5,
                "text": "– Sequence parameter sets shall have max_num_ref_frames equal to 0."
            },
            {
                "line_number": 6,
                "text": "– When vui_parameters_present_flag is equal to 1 and bitstream_restriction_flag is equal to 1, sequence parameter sets"
            },
            {
                "line_number": 7,
                "text": "shall have max_num_reorder_frames equal to 0."
            },
            {
                "line_number": 8,
                "text": "– When vui_parameters_present_flag is equal to 1 and bitstream_restriction_flag is equal to 1, sequence parameter sets"
            },
            {
                "line_number": 9,
                "text": "shall have max_dec_frame_buffering equal to 0."
            },
            {
                "line_number": 10,
                "text": "– Picture timing SEI messages, whether present in the bitstream (by non-VCL NAL units) or conveyed equivalently by"
            },
            {
                "line_number": 11,
                "text": "other means not specified in this Recommendation | International Standard, shall have dpb_output_delay equal to 0."
            },
            {
                "line_number": 12,
                "text": "– The level constraints specified for the High 4:4:4 Intra profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 13,
                "text": "Conformance of a bitstream to the High 4:4:4 Intra profile is indicated by constraint_set3_flag being equal to 1 with"
            },
            {
                "line_number": 14,
                "text": "profile_idc equal to 244. Decoders conforming to the High 4:4:4 Intra profile at a specific level shall be capable of"
            },
            {
                "line_number": 15,
                "text": "decoding all bitstreams in which all of the following conditions are true:"
            },
            {
                "line_number": 16,
                "text": "– profile_idc is equal to 44, 100, 110, 122, or 244,"
            },
            {
                "line_number": 17,
                "text": "– constraint_set3_flag is equal to 1,"
            },
            {
                "line_number": 18,
                "text": "– level_idc represents a level less than or equal to the specified level."
            },
            {
                "line_number": 19,
                "text": "The operation of the deblocking filter process specified in clause 8.7 is not required for decoder conformance to the"
            },
            {
                "line_number": 20,
                "text": "High 4:4:4 Intra profile."
            },
            {
                "line_number": 21,
                "text": "NOTE – The deblocking filter process specified in clause 8.7 or some similar post-processing filter should be performed, although"
            },
            {
                "line_number": 22,
                "text": "this is not a requirement for decoder conformance to the High 4:4:4 Intra and CAVLC 4:4:4 Intra profiles. The syntax elements sent"
            },
            {
                "line_number": 23,
                "text": "by an encoder for control of the deblocking filter process specified in clause 8.7 are considered only as advisory information for"
            },
            {
                "line_number": 24,
                "text": "decoders conformance to the High 4:4:4 Intra and CAVLC 4:4:4 Intra profiles. However, the application of the deblocking filter"
            },
            {
                "line_number": 25,
                "text": "process specified in clause 8.7 is required for decoder conformance to the High 4:4:4 Predictive profile when decoding bitstreams"
            },
            {
                "line_number": 26,
                "text": "that conform to the High 4:4:4 Intra and CAVLC 4:4:4 Intra profiles."
            },
            {
                "line_number": 27,
                "text": "A.2.11 CAVLC 4:4:4 Intra profile"
            },
            {
                "line_number": 28,
                "text": "Bitstreams conforming to the CAVLC 4:4:4 Intra profile shall obey the following constraints:"
            },
            {
                "line_number": 29,
                "text": "– All constraints specified in clause A.2.10 for the High 4:4:4 Intra profile shall be obeyed."
            },
            {
                "line_number": 30,
                "text": "– Picture parameter sets shall have entropy_coding_mode_flag equal to 0."
            },
            {
                "line_number": 31,
                "text": "– The level constraints specified for the CAVLC 4:4:4 Intra profile in clause A.3 shall be fulfilled."
            },
            {
                "line_number": 32,
                "text": "Conformance of a bitstream to the CAVLC 4:4:4 Intra profile is indicated by profile_idc being equal to 44. Decoders"
            },
            {
                "line_number": 33,
                "text": "conforming to the CAVLC 4:4:4 Intra profile at a specific level shall be capable of decoding all bitstreams in which all of"
            },
            {
                "line_number": 34,
                "text": "the following conditions are true:"
            },
            {
                "line_number": 35,
                "text": "– profile_idc is equal to 44,"
            },
            {
                "line_number": 36,
                "text": "– level_idc represents a level less than or equal to the specified level."
            },
            {
                "line_number": 37,
                "text": "The operation of the deblocking filter process specified in clause 8.7 is not required for decoder conformance to the"
            },
            {
                "line_number": 38,
                "text": "CAVLC 4:4:4 Intra profile."
            },
            {
                "line_number": 39,
                "text": "NOTE – The deblocking filter process specified in clause 8.7 or some similar post-processing filter should be performed, although"
            },
            {
                "line_number": 40,
                "text": "this is not a requirement for decoder conformance to the High 4:4:4 Intra and CAVLC 4:4:4 Intra profiles. The syntax elements sent"
            },
            {
                "line_number": 41,
                "text": "by an encoder for control of the deblocking filter process specified in clause 8.7 are considered only as advisory information for"
            },
            {
                "line_number": 42,
                "text": "decoders conformance to the High 4:4:4 Intra and CAVLC 4:4:4 Intra profiles. However, the application of the deblocking filter"
            },
            {
                "line_number": 43,
                "text": "process specified in clause 8.7 is required for decoder conformance to the High 4:4:4 Predictive profile when decoding bitstreams"
            },
            {
                "line_number": 44,
                "text": "that conform to the High 4:4:4 Intra and CAVLC 4:4:4 Intra profiles."
            },
            {
                "line_number": 45,
                "text": "A.3 Levels"
            },
            {
                "line_number": 46,
                "text": "The following is specified for expressing the constraints in this annex."
            },
            {
                "line_number": 47,
                "text": "– Let access unit n be the n-th access unit in decoding order with the first access unit being access unit 0."
            },
            {
                "line_number": 48,
                "text": "– Let picture n be the primary coded picture or the corresponding decoded picture of access unit n."
            },
            {
                "line_number": 49,
                "text": "Rec. ITU-T H.264 (06/2019) 291"
            }
        ]
    },
    {
        "page_number": 314,
        "lines": [
            {
                "line_number": 1,
                "text": "Let the variable fR be derived as follows:"
            },
            {
                "line_number": 2,
                "text": "– If the level number is equal to 6.0, 6.1, or 6.2, fR is set equal to 1 ÷ 300."
            },
            {
                "line_number": 3,
                "text": "– Otherwise, if picture n is a frame, fR is set equal to 1 ÷ 172."
            },
            {
                "line_number": 4,
                "text": "– Otherwise (picture n is a field), fR is set equal to 1 ÷ (172 * 2)."
            },
            {
                "line_number": 5,
                "text": "A.3.1 Level limits common to the Baseline, Constrained Baseline, Main, and Extended profiles"
            },
            {
                "line_number": 6,
                "text": "Bitstreams conforming to the Baseline, Constrained Baseline, Main, or Extended profiles at a specified level shall obey"
            },
            {
                "line_number": 7,
                "text": "the following constraints:"
            },
            {
                "line_number": 8,
                "text": "a) The nominal removal time of access unit n with n > 0 from the CPB as specified in clause C.1.2, satisfies the"
            },
            {
                "line_number": 9,
                "text": "constraint that t ( n ) − t( n − 1 ) is greater than or equal to Max( PicSizeInMbs ÷ MaxMBPS, fR ), where"
            },
            {
                "line_number": 10,
                "text": "r,n r"
            },
            {
                "line_number": 11,
                "text": "MaxMBPS is the value specified in Table A-1 that applies to picture n − 1 and PicSizeInMbs is the number of"
            },
            {
                "line_number": 12,
                "text": "macroblocks in picture n − 1."
            },
            {
                "line_number": 13,
                "text": "b) The difference between consecutive output times of pictures from the DPB as specified in clause C.2.2, satisfies"
            },
            {
                "line_number": 14,
                "text": "the constraint that t ( n ) >= Max( PicSizeInMbs ÷ MaxMBPS, fR ), where MaxMBPS is the value specified"
            },
            {
                "line_number": 15,
                "text": "o,dpb"
            },
            {
                "line_number": 16,
                "text": "in Table A-1 for picture n and PicSizeInMbs is the number of macroblocks of picture n, provided that picture n is"
            },
            {
                "line_number": 17,
                "text": "a picture that is output and is not the last picture of the bitstream that is output."
            },
            {
                "line_number": 18,
                "text": "c) The sum of the NumBytesInNALunit variables for access unit 0 is less than or equal to"
            },
            {
                "line_number": 19,
                "text": "384 *( Max( PicSizeInMbs, fR * MaxMBPS ) + MaxMBPS * ( t( 0 ) − t ( 0 ) ) ) ÷ MinCR, where MaxMBPS"
            },
            {
                "line_number": 20,
                "text": "r r,n"
            },
            {
                "line_number": 21,
                "text": "and MinCR are the values specified in Table A-1 that apply to picture 0 and PicSizeInMbs is the number of"
            },
            {
                "line_number": 22,
                "text": "macroblocks in picture 0."
            },
            {
                "line_number": 23,
                "text": "d) The sum of the NumBytesInNALunit variables for access unit n with n > 0 is less than or equal to"
            },
            {
                "line_number": 24,
                "text": "384 * MaxMBPS * ( t( n ) − t( n − 1 ) ) ÷ MinCR, where MaxMBPS and MinCR are the values specified in"
            },
            {
                "line_number": 25,
                "text": "r r"
            },
            {
                "line_number": 26,
                "text": "Table A-1 that apply to picture n."
            },
            {
                "line_number": 27,
                "text": "e) PicWidthInMbs * FrameHeightInMbs <= MaxFS, where MaxFS is specified in Table A-1"
            },
            {
                "line_number": 28,
                "text": "f) PicWidthInMbs <= Sqrt( MaxFS * 8 )"
            },
            {
                "line_number": 29,
                "text": "g) FrameHeightInMbs <= Sqrt( MaxFS * 8 )"
            },
            {
                "line_number": 30,
                "text": "h) max_dec_frame_buffering <= MaxDpbFrames, where MaxDpbFrames is equal to"
            },
            {
                "line_number": 31,
                "text": "Min( MaxDpbMbs / ( PicWidthInMbs * FrameHeightInMbs ), 16 ) and MaxDpbMbs is given in Table A-1."
            },
            {
                "line_number": 32,
                "text": "i) For the VCL HRD parameters, BitRate[ SchedSelIdx ] <= 1000 * MaxBR and CpbSize[ SchedSelIdx ] <= 1000"
            },
            {
                "line_number": 33,
                "text": "* MaxCPB for at least one value of SchedSelIdx, where BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are"
            },
            {
                "line_number": 34,
                "text": "given as follows:"
            },
            {
                "line_number": 35,
                "text": "– If vcl_hrd_parameters_present_flag is equal to 1, BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are"
            },
            {
                "line_number": 36,
                "text": "given by Equations E-53 and E-54, respectively, using the syntax elements of the hrd_parameters( ) syntax"
            },
            {
                "line_number": 37,
                "text": "structure that immediately follows vcl_hrd_parameters_present_flag."
            },
            {
                "line_number": 38,
                "text": "– Otherwise (vcl_hrd_parameters_present_flag is equal to 0), BitRate[ SchedSelIdx ] and"
            },
            {
                "line_number": 39,
                "text": "CpbSize[ SchedSelIdx ] are inferred as specified in clause E.2.2 for VCL HRD parameters."
            },
            {
                "line_number": 40,
                "text": "MaxBR and MaxCPB are specified in Table A-1 in units of 1000 bits/s and 1000 bits, respectively. The bitstream"
            },
            {
                "line_number": 41,
                "text": "shall satisfy these conditions for at least one value of SchedSelIdx in the range 0 to cpb_cnt_minus1, inclusive."
            },
            {
                "line_number": 42,
                "text": "j) For the NAL HRD parameters, BitRate[ SchedSelIdx ] <= 1200 * MaxBR and CpbSize[ SchedSelIdx ] <= 1200"
            },
            {
                "line_number": 43,
                "text": "* MaxCPB for at least one value of SchedSelIdx, where BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are"
            },
            {
                "line_number": 44,
                "text": "given as follows:"
            },
            {
                "line_number": 45,
                "text": "– If nal_hrd_parameters_present_flag is equal to 1, BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are"
            },
            {
                "line_number": 46,
                "text": "given by Equations E-53 and E-54, respectively, using the syntax elements of the hrd_parameters( ) syntax"
            },
            {
                "line_number": 47,
                "text": "structure that immediately follows nal_hrd_parameters_present_flag."
            },
            {
                "line_number": 48,
                "text": "– Otherwise (nal_hrd_parameters_present_flag is equal to 0), BitRate[ SchedSelIdx ] and"
            },
            {
                "line_number": 49,
                "text": "CpbSize[ SchedSelIdx ] are inferred as specified in clause E.2.2 for NAL HRD parameters."
            },
            {
                "line_number": 50,
                "text": "MaxBR and MaxCPB are specified in Table A-1 in units of 1200 bits/s and 1200 bits, respectively. The bitstream"
            },
            {
                "line_number": 51,
                "text": "shall satisfy these conditions for at least one value of SchedSelIdx in the range 0 to cpb_cnt_minus1."
            },
            {
                "line_number": 52,
                "text": "k) The vertical motion vector component range for luma motion vectors does not exceed the range from −MaxVmvR"
            },
            {
                "line_number": 53,
                "text": "to ( MaxVmvR − 0.25 ) in units of luma frame samples, where MaxVmvR is specified in Table A-1"
            },
            {
                "line_number": 54,
                "text": "292 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 315,
        "lines": [
            {
                "line_number": 1,
                "text": "NOTE 1 – When chroma_format_idc is equal to 1 and the current macroblock is a field macroblock, the motion vector"
            },
            {
                "line_number": 2,
                "text": "component range for chroma motion vectors may exceed the range from −MaxVmvR to ( MaxVmvR − 0.25 ) in units of"
            },
            {
                "line_number": 3,
                "text": "luma frame samples, due to the method of deriving chroma motion vectors as specified in clause 8.4.1.4."
            },
            {
                "line_number": 4,
                "text": "l) The horizontal motion vector component range for luma motion vectors does not exceed the following range:"
            },
            {
                "line_number": 5,
                "text": "– If the level number is less than 6.0, the specified range is from −2048 to 2047.75, inclusive, in units of luma"
            },
            {
                "line_number": 6,
                "text": "samples."
            },
            {
                "line_number": 7,
                "text": "– Otherwise, the specified range is from −8192 to 8191.75, inclusive, in units of luma samples."
            },
            {
                "line_number": 8,
                "text": "m) Let setOf2Mb be the set of unsorted pairs of macroblocks that contains the unsorted pairs of macroblocks"
            },
            {
                "line_number": 9,
                "text": "(mbA, mbB) of a coded video sequence for which any of the following conditions are true:"
            },
            {
                "line_number": 10,
                "text": "– mbA and mbB are macroblocks that belong to the same slice and are consecutive in decoding order,"
            },
            {
                "line_number": 11,
                "text": "– arbitrary slice order is not allowed, mbA is the last macroblock (in decoding order) of a slice, and mbB is"
            },
            {
                "line_number": 12,
                "text": "the first macroblock (in decoding order) of the next slice in decoding order,"
            },
            {
                "line_number": 13,
                "text": "NOTE 2 – The macroblocks mbA and mbB can belong to different pictures."
            },
            {
                "line_number": 14,
                "text": "– arbitrary slice order is allowed, mbA is the last macroblock (in decoding order) of a slice of a particular"
            },
            {
                "line_number": 15,
                "text": "picture, and mbB is the first macroblock (in decoding order) of any other slice of the same picture,"
            },
            {
                "line_number": 16,
                "text": "– arbitrary slice order is allowed, mbA is the last macroblock (in decoding order) of a slice of a particular"
            },
            {
                "line_number": 17,
                "text": "picture, and mbB is the first macroblock (in decoding order) of any slice of the next picture in decoding"
            },
            {
                "line_number": 18,
                "text": "order."
            },
            {
                "line_number": 19,
                "text": "For each unsorted pair of macroblocks (mbA, mbB) of the set setOf2Mb, the total number of motion vectors"
            },
            {
                "line_number": 20,
                "text": "(given by the sum of the number of motion vectors for macroblock mbA and the number of motion vectors for"
            },
            {
                "line_number": 21,
                "text": "macroblock mbB) does not exceed MaxMvsPer2Mb, where MaxMvsPer2Mb is specified in Table A-1. The"
            },
            {
                "line_number": 22,
                "text": "number of motion vectors for each macroblock is the value of the variable MvCnt after the completion of the intra"
            },
            {
                "line_number": 23,
                "text": "or inter prediction process for the macroblock."
            },
            {
                "line_number": 24,
                "text": "NOTE 3 – The constraint specifies that the total number of motion vectors for two consecutive macroblocks in"
            },
            {
                "line_number": 25,
                "text": "decoding order must not exceed MaxMvsPer2Mb. When arbitrary slice order is allowed, it is specified that this"
            },
            {
                "line_number": 26,
                "text": "constraint must also be obeyed when slices of a picture are reordered, e.g., during transmission."
            },
            {
                "line_number": 27,
                "text": "n) The number of bits of macroblock_layer( ) data for any macroblock is not greater than 3200. Depending on"
            },
            {
                "line_number": 28,
                "text": "entropy_coding_mode_flag, the bits of macroblock_layer( ) data are counted as follows:"
            },
            {
                "line_number": 29,
                "text": "– If entropy_coding_mode_flag is equal to 0, the number of bits of macroblock_layer( ) data is given by the"
            },
            {
                "line_number": 30,
                "text": "number of bits in the macroblock_layer( ) syntax structure for a macroblock."
            },
            {
                "line_number": 31,
                "text": "– Otherwise (entropy_coding_mode_flag is equal to 1), the number of bits of macroblock_layer( ) data for a"
            },
            {
                "line_number": 32,
                "text": "macroblock is given by the number of times read_bits( 1 ) is called in clauses 9.3.3.2.2 and 9.3.3.2.3 when"
            },
            {
                "line_number": 33,
                "text": "parsing the macroblock_layer( ) associated with the macroblock."
            },
            {
                "line_number": 34,
                "text": "Table A-1 specifies the limits for each level. A definition of all levels identified in the \"Level number\" column of Table A-1"
            },
            {
                "line_number": 35,
                "text": "is specified for the Baseline, Constrained Baseline, Main, and Extended profiles. Each entry in Table A-1 indicates, for the"
            },
            {
                "line_number": 36,
                "text": "level corresponding to the row of the table, the absence or value of a limit that is imposed by the variable corresponding"
            },
            {
                "line_number": 37,
                "text": "to the column of the table, as follows:"
            },
            {
                "line_number": 38,
                "text": "– If the table entry is marked as \"-\", no limit is imposed by the value of the variable as a requirement of bitstream"
            },
            {
                "line_number": 39,
                "text": "conformance to the profile at the specified level."
            },
            {
                "line_number": 40,
                "text": "– Otherwise, the table entry specifies the value of the variable for the associated limit that is imposed as a requirement"
            },
            {
                "line_number": 41,
                "text": "of bitstream conformance to the profile at the specified level."
            },
            {
                "line_number": 42,
                "text": "For purposes of comparison of level capabilities, a level shall be considered to be a lower (higher) level than some other"
            },
            {
                "line_number": 43,
                "text": "level if the level appears nearer to the top (bottom) row of Table A-1 than the other level."
            },
            {
                "line_number": 44,
                "text": "In bitstreams conforming to the Baseline, Constrained Baseline, Main, or Extended profiles, the conformance of the"
            },
            {
                "line_number": 45,
                "text": "bitstream to a specified level is indicated by the syntax elements level_idc and constraint_set3_flag as follows:"
            },
            {
                "line_number": 46,
                "text": "– If level_idc is equal to 11 and constraint_set3_flag is equal to 1, the indicated level is level 1b."
            },
            {
                "line_number": 47,
                "text": "– Otherwise (level_idc is not equal to 11 or constraint_set3_flag is not equal to 1), level_idc is equal to a value of ten"
            },
            {
                "line_number": 48,
                "text": "times the level number (of the indicated level) specified in Table A-1."
            },
            {
                "line_number": 49,
                "text": "Rec. ITU-T H.264 (06/2019) 293"
            }
        ]
    },
    {
        "page_number": 316,
        "lines": [
            {
                "line_number": 1,
                "text": "Table A-1 – Level limits"
            },
            {
                "line_number": 2,
                "text": "Level Max Max Max decoded Max Max Vertical MV Min Max number of"
            },
            {
                "line_number": 3,
                "text": "number macroblock frame size picture buffer video CPB size component limit compression motion vectors"
            },
            {
                "line_number": 4,
                "text": "processing rate MaxFS size bit rate MaxBR MaxCPB MaxVmvR ratio MinCR per two"
            },
            {
                "line_number": 5,
                "text": "MaxMBPS (MBs) MaxDpbMbs (1000 bits/s, (1000 bits, (luma frame consecutive MBs"
            },
            {
                "line_number": 6,
                "text": "(MB/s) (MBs) 1200 bits/s, 1200 bits, samples) MaxMvsPer2Mb"
            },
            {
                "line_number": 7,
                "text": "cpbBrVclFactor cpbBrVclFactor"
            },
            {
                "line_number": 8,
                "text": "bits/s, or bits, or"
            },
            {
                "line_number": 9,
                "text": "cpbBrNalFactor cpbBrNalFactor"
            },
            {
                "line_number": 10,
                "text": "bits/s) bits)"
            },
            {
                "line_number": 11,
                "text": "1 1 485 99 396 64 175 64 2 -"
            },
            {
                "line_number": 12,
                "text": "1b 1 485 99 396 128 350 64 2 -"
            },
            {
                "line_number": 13,
                "text": "1.1 3 000 396 900 192 500 128 2 -"
            },
            {
                "line_number": 14,
                "text": "1.2 6 000 396 2 376 384 1 000 128 2 -"
            },
            {
                "line_number": 15,
                "text": "1.3 11 880 396 2 376 768 2 000 128 2 -"
            },
            {
                "line_number": 16,
                "text": "2 11 880 396 2 376 2 000 2 000 128 2 -"
            },
            {
                "line_number": 17,
                "text": "2.1 19 800 792 4 752 4 000 4 000 256 2 -"
            },
            {
                "line_number": 18,
                "text": "2.2 20 250 1 620 8 100 4 000 4 000 256 2 -"
            },
            {
                "line_number": 19,
                "text": "3 40 500 1 620 8 100 10 000 10 000 256 2 32"
            },
            {
                "line_number": 20,
                "text": "3.1 108 000 3 600 18 000 14 000 14 000 512 4 16"
            },
            {
                "line_number": 21,
                "text": "3.2 216 000 5 120 20 480 20 000 20 000 512 4 16"
            },
            {
                "line_number": 22,
                "text": "4 245 760 8 192 32 768 20 000 25 000 512 4 16"
            },
            {
                "line_number": 23,
                "text": "4.1 245 760 8 192 32 768 50 000 62 500 512 2 16"
            },
            {
                "line_number": 24,
                "text": "4.2 522 240 8 704 34 816 50 000 62 500 512 2 16"
            },
            {
                "line_number": 25,
                "text": "5 589 824 22 080 110 400 135 000 135 000 512 2 16"
            },
            {
                "line_number": 26,
                "text": "5.1 983 040 36 864 184 320 240 000 240 000 512 2 16"
            },
            {
                "line_number": 27,
                "text": "5.2 2 073 600 36 864 184 320 240 000 240 000 512 2 16"
            },
            {
                "line_number": 28,
                "text": "6 4 177 920 139 264 696 320 240 000 240 000 8 192 2 16"
            },
            {
                "line_number": 29,
                "text": "6.1 8 355 840 139 264 696 320 480 000 480 000 8 192 2 16"
            },
            {
                "line_number": 30,
                "text": "6.2 16 711 680 139 264 696 320 800 000 800 000 8 192 2 16"
            },
            {
                "line_number": 31,
                "text": "Levels with non-integer level numbers in Table A-1 are referred to as \"intermediate levels\"."
            },
            {
                "line_number": 32,
                "text": "NOTE 4 – All levels have the same status, but some applications may choose to use only the integer-numbered levels."
            },
            {
                "line_number": 33,
                "text": "Informative clause A.3.4 shows the effect of these limits on frame rates for several example picture formats."
            },
            {
                "line_number": 34,
                "text": "A.3.2 Level limits common to the High, Progressive High, Constrained High, High 10, Progressive High 10,"
            },
            {
                "line_number": 35,
                "text": "High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and"
            },
            {
                "line_number": 36,
                "text": "CAVLC 4:4:4 Intra profiles"
            },
            {
                "line_number": 37,
                "text": "Bitstreams conforming to the High, Progressive High, Constrained High, High 10, Progressive High 10, High 4:2:2,"
            },
            {
                "line_number": 38,
                "text": "High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, or CAVLC 4:4:4 Intra profiles at a specified level"
            },
            {
                "line_number": 39,
                "text": "shall obey the following constraints:"
            },
            {
                "line_number": 40,
                "text": "a) The nominal removal time of access unit n (with n > 0) from the CPB as specified in clause C.1.2, satisfies the"
            },
            {
                "line_number": 41,
                "text": "constraint that t ( n ) − t( n − 1 ) is greater than or equal to Max( PicSizeInMbs ÷ MaxMBPS, fR ), where"
            },
            {
                "line_number": 42,
                "text": "r,n r"
            },
            {
                "line_number": 43,
                "text": "MaxMBPS is the value specified in Table A-1 that applies to picture n − 1, and PicSizeInMbs is the number of"
            },
            {
                "line_number": 44,
                "text": "macroblocks in picture n − 1."
            },
            {
                "line_number": 45,
                "text": "b) The difference between consecutive output times of pictures from the DPB as specified in clause C.2.2, satisfies"
            },
            {
                "line_number": 46,
                "text": "the constraint that t ( n ) >= Max( PicSizeInMbs ÷ MaxMBPS, fR ), where MaxMBPS is the value specified"
            },
            {
                "line_number": 47,
                "text": "o,dpb"
            },
            {
                "line_number": 48,
                "text": "in Table A-1 for picture n, and PicSizeInMbs is the number of macroblocks of picture n, provided that picture n"
            },
            {
                "line_number": 49,
                "text": "is a picture that is output and is not the last picture of the bitstream that is output."
            },
            {
                "line_number": 50,
                "text": "c) PicWidthInMbs * FrameHeightInMbs <= MaxFS, where MaxFS is specified in Table A-1"
            },
            {
                "line_number": 51,
                "text": "294 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 317,
        "lines": [
            {
                "line_number": 1,
                "text": "d) PicWidthInMbs <= Sqrt( MaxFS * 8 )"
            },
            {
                "line_number": 2,
                "text": "e) FrameHeightInMbs <= Sqrt( MaxFS * 8 )"
            },
            {
                "line_number": 3,
                "text": "f) max_dec_frame_buffering <= MaxDpbFrames, where MaxDpbFrames is equal to"
            },
            {
                "line_number": 4,
                "text": "Min( MaxDpbMbs / ( PicWidthInMbs * FrameHeightInMbs ), 16 ) and MaxDpbMbs is specified in Table A-1."
            },
            {
                "line_number": 5,
                "text": "g) The vertical motion vector component range for luma motion vectors does not exceed the range from −MaxVmvR"
            },
            {
                "line_number": 6,
                "text": "to ( MaxVmvR − 0.25 ) in units of luma frame samples, where MaxVmvR is specified in Table A-1."
            },
            {
                "line_number": 7,
                "text": "h) The horizontal motion vector component range for luma motion vectors does not exceed the following range:"
            },
            {
                "line_number": 8,
                "text": "– If the level number is less than 6.0, the specified range is from −2048 to 2047.75, inclusive, in units of luma"
            },
            {
                "line_number": 9,
                "text": "samples."
            },
            {
                "line_number": 10,
                "text": "– Otherwise, the specified range is from −8192 to 8191.75, inclusive, in units of luma samples."
            },
            {
                "line_number": 11,
                "text": "i) Let setOf2Mb be the set of unsorted pairs of macroblocks that contains the unsorted pairs of macroblocks"
            },
            {
                "line_number": 12,
                "text": "(mbA, mbB) of a coded video sequence for which any of the following conditions are true:"
            },
            {
                "line_number": 13,
                "text": "– mbA and mbB are macroblocks that belong to the same slice and are consecutive in decoding order,"
            },
            {
                "line_number": 14,
                "text": "– separate_colour_plane_flag is equal to 0, mbA is the last macroblock (in decoding order) of a slice, and"
            },
            {
                "line_number": 15,
                "text": "mbB is the first macroblock (in decoding order) of the next slice in decoding order,"
            },
            {
                "line_number": 16,
                "text": "– separate_colour_plane_flag is equal to 1, mbA is the last macroblock (in decoding order) of a slice with a"
            },
            {
                "line_number": 17,
                "text": "particular value of colour_plane_id, and mbB is the first macroblock (in decoding order) of the next slice"
            },
            {
                "line_number": 18,
                "text": "with the same value of colour_plane_id in decoding order."
            },
            {
                "line_number": 19,
                "text": "NOTE 1 – In the two above conditions, the macroblocks mbA and mbB can belong to different pictures."
            },
            {
                "line_number": 20,
                "text": "For each unsorted pair of macroblocks (mbA, mbB) of the set setOf2Mb, the total number of motion vectors"
            },
            {
                "line_number": 21,
                "text": "(given by the sum of the number of motion vectors for macroblock mbA and the number of motion vectors for"
            },
            {
                "line_number": 22,
                "text": "macroblock mbB) does not exceed MaxMvsPer2Mb, where MaxMvsPer2Mb is specified in Table A-1. The"
            },
            {
                "line_number": 23,
                "text": "number of motion vectors for each macroblock is the value of the variable MvCnt after the completion of the intra"
            },
            {
                "line_number": 24,
                "text": "or inter prediction process for the macroblock."
            },
            {
                "line_number": 25,
                "text": "NOTE 2 – When separate_colour_plane_flag is equal to 0, the constraint specifies that the total number of motion"
            },
            {
                "line_number": 26,
                "text": "vectors for two consecutive macroblocks in decoding order must not exceed MaxMvsPer2Mb. When"
            },
            {
                "line_number": 27,
                "text": "separate_colour_plane_flag is equal to 1, the constraint specifies that the total number of motion vectors for two"
            },
            {
                "line_number": 28,
                "text": "consecutive macroblocks (in decoding order) with the same value of colour_plane_id must not exceed"
            },
            {
                "line_number": 29,
                "text": "MaxMvsPer2Mb. For macroblocks that are consecutive in decoding order but are associated with a different value"
            },
            {
                "line_number": 30,
                "text": "of colour_plane_id, no constraint for the total number of motion vectors is specified."
            },
            {
                "line_number": 31,
                "text": "j) The number of bits of macroblock_layer( ) data for any macroblock is not greater than 128 + RawMbBits."
            },
            {
                "line_number": 32,
                "text": "Depending on entropy_coding_mode_flag, the bits of macroblock_layer( ) data are counted as follows:"
            },
            {
                "line_number": 33,
                "text": "– If entropy_coding_mode_flag is equal to 0, the number of bits of macroblock_layer( ) data is given by the"
            },
            {
                "line_number": 34,
                "text": "number of bits in the macroblock_layer( ) syntax structure for a macroblock."
            },
            {
                "line_number": 35,
                "text": "– Otherwise (entropy_coding_mode_flag is equal to 1), the number of bits of macroblock_layer( ) data for a"
            },
            {
                "line_number": 36,
                "text": "macroblock is given by the number of times read_bits( 1 ) is called in clauses 9.3.3.2.2 and 9.3.3.2.3 when"
            },
            {
                "line_number": 37,
                "text": "parsing the macroblock_layer( ) associated with the macroblock."
            },
            {
                "line_number": 38,
                "text": "Table A-1 specifies the limits for each level. A definition of all levels identified in the \"Level number\" column of Table A-1"
            },
            {
                "line_number": 39,
                "text": "is specified for the High, Progressive High, Constrained High, High 10, Progressive High 10, High 4:2:2,"
            },
            {
                "line_number": 40,
                "text": "High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and CAVLC 4:4:4 Intra profiles. Each entry in"
            },
            {
                "line_number": 41,
                "text": "Table A-1 indicates, for the level corresponding to the row of the table, the absence or value of a limit that is imposed by"
            },
            {
                "line_number": 42,
                "text": "the variable corresponding to the column of the table, as follows:"
            },
            {
                "line_number": 43,
                "text": "– If the table entry is marked as \"-\", no limit is imposed by the value of the variable as a requirement of bitstream"
            },
            {
                "line_number": 44,
                "text": "conformance to the profile at the specified level."
            },
            {
                "line_number": 45,
                "text": "– Otherwise, the table entry specifies the value of the variable for the associated limit that is imposed as a requirement"
            },
            {
                "line_number": 46,
                "text": "of bitstream conformance to the profile at the specified level."
            },
            {
                "line_number": 47,
                "text": "The use of the MinCR parameter column of Table A-1 for the High, High 10, High 4:2:2, High 4:4:4 Predictive,"
            },
            {
                "line_number": 48,
                "text": "High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and CAVLC 4:4:4 Intra profiles is specified in clause A.3.3."
            },
            {
                "line_number": 49,
                "text": "Rec. ITU-T H.264 (06/2019) 295"
            }
        ]
    },
    {
        "page_number": 318,
        "lines": [
            {
                "line_number": 1,
                "text": "In bitstreams conforming to the High, High 10, High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra,"
            },
            {
                "line_number": 2,
                "text": "High 4:4:4 Intra, or CAVLC 4:4:4 Intra profiles, the conformance of the bitstream to a specified level is indicated by the"
            },
            {
                "line_number": 3,
                "text": "syntax element level_idc as follows:"
            },
            {
                "line_number": 4,
                "text": "– If level_idc is equal to 9, the indicated level is level 1b."
            },
            {
                "line_number": 5,
                "text": "– Otherwise (level_idc is not equal to 9), level_idc is equal to a value of ten times the level number (of the indicated"
            },
            {
                "line_number": 6,
                "text": "level) specified in Table A-1."
            },
            {
                "line_number": 7,
                "text": "A.3.3 Profile-specific level limits"
            },
            {
                "line_number": 8,
                "text": "a) In bitstreams conforming to the Main, High, Progressive High, Constrained High, High 10, Progressive High 10,"
            },
            {
                "line_number": 9,
                "text": "High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, or CAVLC 4:4:4 Intra"
            },
            {
                "line_number": 10,
                "text": "profiles, the removal time of access unit 0 shall satisfy the constraint that the number of slices in picture 0 is less"
            },
            {
                "line_number": 11,
                "text": "than or equal to ( Max( PicSizeInMbs, fR * MaxMBPS ) + MaxMBPS * ( t( 0 ) − t ( 0 ) ) ) ÷ SliceRate, where"
            },
            {
                "line_number": 12,
                "text": "r r,n"
            },
            {
                "line_number": 13,
                "text": "MaxMBPS and SliceRate are the values specified in Tables A-1 and A-4, respectively, that apply to picture 0 and"
            },
            {
                "line_number": 14,
                "text": "PicSizeInMbs is the number of macroblocks in picture 0."
            },
            {
                "line_number": 15,
                "text": "b) In bitstreams conforming to the Main, High, Progressive High, Constrained High, High 10, Progressive High 10,"
            },
            {
                "line_number": 16,
                "text": "High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, or CAVLC 4:4:4 Intra"
            },
            {
                "line_number": 17,
                "text": "profiles, the difference between consecutive removal times of access units n and n − 1 with n > 0 shall satisfy the"
            },
            {
                "line_number": 18,
                "text": "constraint that the number of slices in picture n is less than or equal"
            },
            {
                "line_number": 19,
                "text": "to MaxMBPS * ( t( n ) − t( n − 1 ) ) ÷ SliceRate, where MaxMBPS and SliceRate are the values specified in"
            },
            {
                "line_number": 20,
                "text": "r r"
            },
            {
                "line_number": 21,
                "text": "Tables A-1 and A-4, respectively, that apply to picture n."
            },
            {
                "line_number": 22,
                "text": "c) In bitstreams conforming to the Main, High, Progressive High, High 10, Progressive High 10, High 4:2:2,"
            },
            {
                "line_number": 23,
                "text": "High 4:4:4 Predictive profiles, sequence parameter sets shall have direct_8x8_inference_flag equal to 1 for the"
            },
            {
                "line_number": 24,
                "text": "levels specified in Table A-4."
            },
            {
                "line_number": 25,
                "text": "NOTE 1 – direct_8x8_inference_flag is not relevant to the Baseline, Constrained Baseline, Constrained High,"
            },
            {
                "line_number": 26,
                "text": "High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and CAVLC 4:4:4 Intra profiles as these profiles do not allow B slice"
            },
            {
                "line_number": 27,
                "text": "types, and direct_8x8_inference_flag is equal to 1 for all levels of the Extended profile."
            },
            {
                "line_number": 28,
                "text": "d) In bitstreams conforming to the Main, High, High 10, High 4:2:2, High 4:4:4 Predictive, High 10 Intra,"
            },
            {
                "line_number": 29,
                "text": "High 4:2:2 Intra, High 4:4:4 Intra, CAVLC 4:4:4 Intra, or Extended profiles, sequence parameter sets shall have"
            },
            {
                "line_number": 30,
                "text": "frame_mbs_only_flag equal to 1 for the levels specified in Table A-4 for the Main, High, High 10, High 4:2:2,"
            },
            {
                "line_number": 31,
                "text": "High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, or CAVLC 4:4:4 Intra profiles and in"
            },
            {
                "line_number": 32,
                "text": "Table A-5 for the Extended profile."
            },
            {
                "line_number": 33,
                "text": "NOTE 2 – frame_mbs_only_flag is equal to 1 for all levels of the Baseline, Constrained Baseline, Progressive High,"
            },
            {
                "line_number": 34,
                "text": "Constrained High, and Progressive High 10 profiles (specified in clauses A.2.1, A.2.1.1, A.2.4.1, A.2.4.2, and A.2.5.1,"
            },
            {
                "line_number": 35,
                "text": "respectively)."
            },
            {
                "line_number": 36,
                "text": "e) In bitstreams conforming to the Main, High, Progressive High, High 10, Progressive High 10, High 4:2:2,"
            },
            {
                "line_number": 37,
                "text": "High 4:4:4 Predictive, or Extended profiles, the value of sub_mb_type[ mbPartIdx ] with mbPartIdx = 0..3 in B"
            },
            {
                "line_number": 38,
                "text": "macroblocks with mb_type equal to B_8x8 shall not be equal to B_Bi_8x4, B_Bi_4x8, or B_Bi_4x4 for the levels"
            },
            {
                "line_number": 39,
                "text": "in which MinLumaBiPredSize is shown as 8x8 in Table A-4 for the Main, High, Progressive High, High 10,"
            },
            {
                "line_number": 40,
                "text": "Progressive High 10, High 4:2:2, High 4:4:4 Predictive profiles and in Table A-5 for the Extended profile."
            },
            {
                "line_number": 41,
                "text": "f) In bitstreams conforming to the Baseline, Constrained Baseline, or Extended profiles, ( xInt − xInt + 6 ) *"
            },
            {
                "line_number": 42,
                "text": "max min"
            },
            {
                "line_number": 43,
                "text": "( yInt − yInt + 6 ) <= MaxSubMbRectSize in macroblocks coded with mb_type equal to P_8x8, P_8x8ref0"
            },
            {
                "line_number": 44,
                "text": "max min"
            },
            {
                "line_number": 45,
                "text": "or B_8x8 for all invocations of the process specified in clause 8.4.2.2.1 used to generate the predicted luma sample"
            },
            {
                "line_number": 46,
                "text": "array for a single reference picture list (reference picture list 0 or reference picture list 1) for each 8x8 sub-"
            },
            {
                "line_number": 47,
                "text": "macroblock with the macroblock partition index mbPartIdx, where"
            },
            {
                "line_number": 48,
                "text": "NumSubMbPart( sub_mb_type[ mbPartIdx ] ) > 1, where MaxSubMbRectSize is specified in Table A-3 for the"
            },
            {
                "line_number": 49,
                "text": "Baseline and Constrained Baseline profiles and in Table A-5 for the Extended profile and"
            },
            {
                "line_number": 50,
                "text": "– xInt is the minimum value of xInt among all luma sample predictions for the sub-macroblock"
            },
            {
                "line_number": 51,
                "text": "min L"
            },
            {
                "line_number": 52,
                "text": "– xInt is the maximum value of xInt among all luma sample predictions for the sub-macroblock"
            },
            {
                "line_number": 53,
                "text": "max L"
            },
            {
                "line_number": 54,
                "text": "– yInt is the minimum value of yInt among all luma sample predictions for the sub-macroblock"
            },
            {
                "line_number": 55,
                "text": "min L"
            },
            {
                "line_number": 56,
                "text": "– yInt is the maximum value of yInt among all luma sample predictions for the sub-macroblock"
            },
            {
                "line_number": 57,
                "text": "max L"
            },
            {
                "line_number": 58,
                "text": "g) In bitstreams conforming to the High, Progressive High, Constrained High, High 10, Progressive High 10,"
            },
            {
                "line_number": 59,
                "text": "High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, or CAVLC 4:4:4 Intra"
            },
            {
                "line_number": 60,
                "text": "profiles, for the VCL HRD parameters, BitRate[ SchedSelIdx ] <= cpbBrVclFactor * MaxBR and"
            },
            {
                "line_number": 61,
                "text": "CpbSize[ SchedSelIdx ] <= cpbBrVclFactor * MaxCPB for at least one value of SchedSelIdx, where"
            },
            {
                "line_number": 62,
                "text": "cpbBrVclFactor is specified in Table A-2 and BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are given as"
            },
            {
                "line_number": 63,
                "text": "follows:"
            },
            {
                "line_number": 64,
                "text": "296 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 319,
        "lines": [
            {
                "line_number": 1,
                "text": "– If vcl_hrd_parameters_present_flag is equal to 1, BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are"
            },
            {
                "line_number": 2,
                "text": "given by Equations E-53 and E-54, respectively, using the syntax elements of the hrd_parameters( ) syntax"
            },
            {
                "line_number": 3,
                "text": "structure that immediately follows vcl_hrd_parameters_present_flag."
            },
            {
                "line_number": 4,
                "text": "– Otherwise (vcl_hrd_parameters_present_flag is equal to 0), BitRate[ SchedSelIdx ] and"
            },
            {
                "line_number": 5,
                "text": "CpbSize[ SchedSelIdx ] are inferred as specified in clause E.2.2 for VCL HRD parameters."
            },
            {
                "line_number": 6,
                "text": "MaxBR and MaxCPB are specified in Table A-1 in units of cpbBrVclFactor bits/s and cpbBrVclFactor bits,"
            },
            {
                "line_number": 7,
                "text": "respectively. The bitstream shall satisfy these conditions for at least one value of SchedSelIdx in the range 0 to"
            },
            {
                "line_number": 8,
                "text": "cpb_cnt_minus1, inclusive."
            },
            {
                "line_number": 9,
                "text": "h) In bitstreams conforming to the High, Progressive High, Constrained High, High 10, Progressive High 10,"
            },
            {
                "line_number": 10,
                "text": "High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, or CAVLC 4:4:4 Intra"
            },
            {
                "line_number": 11,
                "text": "profiles, for the NAL HRD parameters, BitRate[ SchedSelIdx ] <= cpbBrNalFactor * MaxBR and"
            },
            {
                "line_number": 12,
                "text": "CpbSize[ SchedSelIdx ] <= cpbBrNalFactor * MaxCPB for at least one value of SchedSelIdx, where"
            },
            {
                "line_number": 13,
                "text": "cpbBrNalFactor is specified in Table A-2 and BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are given as"
            },
            {
                "line_number": 14,
                "text": "follows:"
            },
            {
                "line_number": 15,
                "text": "– If nal_hrd_parameters_present_flag is equal to 1, BitRate[ SchedSelIdx ] and CpbSize[ SchedSelIdx ] are"
            },
            {
                "line_number": 16,
                "text": "given by Equations E-53 and E-54, respectively, using the syntax elements of the hrd_parameters( ) syntax"
            },
            {
                "line_number": 17,
                "text": "structure that immediately follows nal_hrd_parameters_present_flag."
            },
            {
                "line_number": 18,
                "text": "– Otherwise (nal_hrd_parameters_present_flag is equal to 0), BitRate[ SchedSelIdx ] and"
            },
            {
                "line_number": 19,
                "text": "CpbSize[ SchedSelIdx ] are inferred as specified in clause E.2.2 for NAL HRD parameters."
            },
            {
                "line_number": 20,
                "text": "MaxBR and MaxCPB are specified in Table A-1 in units of cpbBrNalFactor bits/s and cpbBrNalFactor bits,"
            },
            {
                "line_number": 21,
                "text": "respectively. The bitstream shall satisfy these conditions for at least one value of SchedSelIdx in the range 0 to"
            },
            {
                "line_number": 22,
                "text": "cpb_cnt_minus1, inclusive."
            },
            {
                "line_number": 23,
                "text": "i) In bitstreams conforming to the High, Progressive High, or Constrained High profiles, the sum of the"
            },
            {
                "line_number": 24,
                "text": "NumBytesInNALunit variables for access unit 0 is less than or equal to"
            },
            {
                "line_number": 25,
                "text": "384 * ( Max( PicSizeInMbs, fR * MaxMBPS ) + MaxMBPS * ( t( 0 ) − t ( 0 ) ) ) ÷ MinCR, where MaxMBPS"
            },
            {
                "line_number": 26,
                "text": "r r,n"
            },
            {
                "line_number": 27,
                "text": "and MinCR are the values specified in Table A-1 that apply to picture 0 and PicSizeInMbs is the number of"
            },
            {
                "line_number": 28,
                "text": "macroblocks in picture 0."
            },
            {
                "line_number": 29,
                "text": "NOTE 3 – Such a limit involving MinCR is not imposed for bitstream conformance to the High 10,"
            },
            {
                "line_number": 30,
                "text": "Progressive High 10, High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and"
            },
            {
                "line_number": 31,
                "text": "CAVLC 4:4:4 Intra profiles."
            },
            {
                "line_number": 32,
                "text": "j) In bitstreams conforming to the High, Progressive High, or Constrained High profiles, the sum of the"
            },
            {
                "line_number": 33,
                "text": "NumBytesInNALunit variables for access unit n with n > 0 is less than or equal to"
            },
            {
                "line_number": 34,
                "text": "384 * MaxMBPS * ( t( n ) − t( n − 1 ) ) ÷ MinCR, where MaxMBPS and MinCR are the values specified in"
            },
            {
                "line_number": 35,
                "text": "r r"
            },
            {
                "line_number": 36,
                "text": "Table A-1 that apply to picture n."
            },
            {
                "line_number": 37,
                "text": "NOTE 4 – Such a limit involving MinCR is not imposed for bitstream conformance to the High 10,"
            },
            {
                "line_number": 38,
                "text": "Progressive High 10, High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and"
            },
            {
                "line_number": 39,
                "text": "CAVLC 4:4:4 Intra profiles."
            },
            {
                "line_number": 40,
                "text": "k) In bitstreams conforming to the High 10, Progressive High 10, High 4:2:2, High 4:4:4 Predictive, High 10 Intra,"
            },
            {
                "line_number": 41,
                "text": "High 4:2:2 Intra, High 4:4:4 Intra, or CAVLC 4:4:4 Intra profiles, when the level number is less than 6.0 and"
            },
            {
                "line_number": 42,
                "text": "PicSizeInMbs is greater than 1620, the number of macroblocks in any coded slice shall not exceed MaxFS / 4,"
            },
            {
                "line_number": 43,
                "text": "where MaxFS is specified in Table A-1."
            },
            {
                "line_number": 44,
                "text": "Table A-2 – Specification of cpbBrVclFactor"
            },
            {
                "line_number": 45,
                "text": "and cpbBrNalFactor"
            },
            {
                "line_number": 46,
                "text": "Profile cpbBrVclFactor cpbBrNalFactor"
            },
            {
                "line_number": 47,
                "text": "High"
            },
            {
                "line_number": 48,
                "text": "Progressive High 1 250 1 500"
            },
            {
                "line_number": 49,
                "text": "Constrained High"
            },
            {
                "line_number": 50,
                "text": "High 10"
            },
            {
                "line_number": 51,
                "text": "Progressive High 10 3 000 3 600"
            },
            {
                "line_number": 52,
                "text": "High 10 Intra"
            },
            {
                "line_number": 53,
                "text": "High 4:2:2"
            },
            {
                "line_number": 54,
                "text": "4 000 4 800"
            },
            {
                "line_number": 55,
                "text": "High 4:2:2 Intra"
            },
            {
                "line_number": 56,
                "text": "High 4:4:4 Predictive"
            },
            {
                "line_number": 57,
                "text": "High 4:4:4 Intra 4 000 4 800"
            },
            {
                "line_number": 58,
                "text": "CAVLC 4:4:4 Intra"
            },
            {
                "line_number": 59,
                "text": "Rec. ITU-T H.264 (06/2019) 297"
            }
        ]
    },
    {
        "page_number": 320,
        "lines": [
            {
                "line_number": 1,
                "text": "A.3.3.1 Level limits of the Baseline and Constrained Baseline profile"
            },
            {
                "line_number": 2,
                "text": "Table A-3 specifies limits for each level that are specific to bitstreams conforming to the Baseline or Constrained Baseline"
            },
            {
                "line_number": 3,
                "text": "profiles. Each entry in Table A-3 indicates, for the level corresponding to the row of the table, the absence or value of a"
            },
            {
                "line_number": 4,
                "text": "limit that is imposed by the variable corresponding to the column of the table, as follows:"
            },
            {
                "line_number": 5,
                "text": "– If the table entry is marked as \"-\", no limit is imposed by the value of the variable as a requirement of bitstream"
            },
            {
                "line_number": 6,
                "text": "conformance to the profile at the specified level."
            },
            {
                "line_number": 7,
                "text": "– Otherwise, the table entry specifies the value of the variable for the associated limit that is imposed as a requirement"
            },
            {
                "line_number": 8,
                "text": "of bitstream conformance to the profile at the specified level."
            },
            {
                "line_number": 9,
                "text": "Table A-3 – Baseline and Constrained"
            },
            {
                "line_number": 10,
                "text": "Baseline profile level limits"
            },
            {
                "line_number": 11,
                "text": "Level number MaxSubMbRectSize"
            },
            {
                "line_number": 12,
                "text": "1 576"
            },
            {
                "line_number": 13,
                "text": "1b 576"
            },
            {
                "line_number": 14,
                "text": "1.1 576"
            },
            {
                "line_number": 15,
                "text": "1.2 576"
            },
            {
                "line_number": 16,
                "text": "1.3 576"
            },
            {
                "line_number": 17,
                "text": "2 576"
            },
            {
                "line_number": 18,
                "text": "2.1 576"
            },
            {
                "line_number": 19,
                "text": "2.2 576"
            },
            {
                "line_number": 20,
                "text": "3 576"
            },
            {
                "line_number": 21,
                "text": "3.1 -"
            },
            {
                "line_number": 22,
                "text": "3.2 -"
            },
            {
                "line_number": 23,
                "text": "4 -"
            },
            {
                "line_number": 24,
                "text": "4.1 -"
            },
            {
                "line_number": 25,
                "text": "4.2 -"
            },
            {
                "line_number": 26,
                "text": "5 -"
            },
            {
                "line_number": 27,
                "text": "5.1 -"
            },
            {
                "line_number": 28,
                "text": "5.2 -"
            },
            {
                "line_number": 29,
                "text": "6.0 -"
            },
            {
                "line_number": 30,
                "text": "6.1 -"
            },
            {
                "line_number": 31,
                "text": "6.2 -"
            },
            {
                "line_number": 32,
                "text": "A.3.3.2 Level limits of the Main, High, Progressive High, Constrained High, High 10, Progressive High 10,"
            },
            {
                "line_number": 33,
                "text": "High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and"
            },
            {
                "line_number": 34,
                "text": "CAVLC 4:4:4 Intra profile"
            },
            {
                "line_number": 35,
                "text": "Table A-4 specifies limits for each level that are specific to bitstreams conforming to the Main, High, Progressive High,"
            },
            {
                "line_number": 36,
                "text": "Constrained High, High 10, Progressive High 10, High 4:2:2, High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra,"
            },
            {
                "line_number": 37,
                "text": "High 4:4:4 Intra, or CAVLC 4:4:4 Intra profiles. Each entry in Table A-4 indicates, for the level corresponding to the row"
            },
            {
                "line_number": 38,
                "text": "of the table, the absence or value of a limit that is imposed by the variable corresponding to the column of the table, as"
            },
            {
                "line_number": 39,
                "text": "follows:"
            },
            {
                "line_number": 40,
                "text": "– If the table entry is marked as \"-\", no limit is imposed by the value of the variable as a requirement of bitstream"
            },
            {
                "line_number": 41,
                "text": "conformance to the profile at the specified level."
            },
            {
                "line_number": 42,
                "text": "– Otherwise, the table entry specifies the value of the variable for the associated limit that is imposed as a requirement"
            },
            {
                "line_number": 43,
                "text": "of bitstream conformance to the profile at the specified level."
            },
            {
                "line_number": 44,
                "text": "298 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 321,
        "lines": [
            {
                "line_number": 1,
                "text": "NOTE – The constraints for MinLumaBiPredSize and direct_8x8_inference_flag are not relevant to the"
            },
            {
                "line_number": 2,
                "text": "Constrained High, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and CAVLC 4:4:4 Intra profiles, as these profiles"
            },
            {
                "line_number": 3,
                "text": "do not support B slices."
            },
            {
                "line_number": 4,
                "text": "Table A-4 – Main, High, Progressive High, Constrained High, High 10, Progressive High 10, High 4:2:2,"
            },
            {
                "line_number": 5,
                "text": "High 4:4:4 Predictive, High 10 Intra, High 4:2:2 Intra, High 4:4:4 Intra, and CAVLC 4:4:4 Intra profile level"
            },
            {
                "line_number": 6,
                "text": "limits"
            },
            {
                "line_number": 7,
                "text": "Level number SliceRate MinLumaBiPredSize direct_8x8_inference_flag frame_mbs_only_flag"
            },
            {
                "line_number": 8,
                "text": "1 - - - 1"
            },
            {
                "line_number": 9,
                "text": "1b - - - 1"
            },
            {
                "line_number": 10,
                "text": "1.1 - - - 1"
            },
            {
                "line_number": 11,
                "text": "1.2 - - - 1"
            },
            {
                "line_number": 12,
                "text": "1.3 - - - 1"
            },
            {
                "line_number": 13,
                "text": "2 - - - 1"
            },
            {
                "line_number": 14,
                "text": "2.1 - - - -"
            },
            {
                "line_number": 15,
                "text": "2.2 - - - -"
            },
            {
                "line_number": 16,
                "text": "3 22 - 1 -"
            },
            {
                "line_number": 17,
                "text": "3.1 60 8x8 1 -"
            },
            {
                "line_number": 18,
                "text": "3.2 60 8x8 1 -"
            },
            {
                "line_number": 19,
                "text": "4 60 8x8 1 -"
            },
            {
                "line_number": 20,
                "text": "4.1 24 8x8 1 -"
            },
            {
                "line_number": 21,
                "text": "4.2 24 8x8 1 1"
            },
            {
                "line_number": 22,
                "text": "5 24 8x8 1 1"
            },
            {
                "line_number": 23,
                "text": "5.1 24 8x8 1 1"
            },
            {
                "line_number": 24,
                "text": "5.2 24 8x8 1 1"
            },
            {
                "line_number": 25,
                "text": "6 24 8x8 1 1"
            },
            {
                "line_number": 26,
                "text": "6.1 24 8x8 1 1"
            },
            {
                "line_number": 27,
                "text": "6.2 24 8x8 1 1"
            },
            {
                "line_number": 28,
                "text": "A.3.3.3 Level limits of the Extended profile"
            },
            {
                "line_number": 29,
                "text": "Table A-5 specifies limits for each level that are specific to bitstreams conforming to the Extended profile. Each entry in"
            },
            {
                "line_number": 30,
                "text": "Table A-5 indicates, for the level corresponding to the row of the table, the absence or value of a limit that is imposed by"
            },
            {
                "line_number": 31,
                "text": "the variable corresponding to the column of the table, as follows:"
            },
            {
                "line_number": 32,
                "text": "– If the table entry is marked as \"-\", no limit is imposed by the value of the variable as a requirement of bitstream"
            },
            {
                "line_number": 33,
                "text": "conformance to the profile at the specified level."
            },
            {
                "line_number": 34,
                "text": "– Otherwise, the table entry specifies the value of the variable for the associated limit that is imposed as a requirement"
            },
            {
                "line_number": 35,
                "text": "of bitstream conformance to the profile at the specified level."
            },
            {
                "line_number": 36,
                "text": "Rec. ITU-T H.264 (06/2019) 299"
            }
        ]
    },
    {
        "page_number": 322,
        "lines": [
            {
                "line_number": 1,
                "text": "Table A-5 – Extended profile level limits"
            },
            {
                "line_number": 2,
                "text": "Level number MaxSubMbRectSize MinLumaBiPredSize frame_mbs_only_flag"
            },
            {
                "line_number": 3,
                "text": "1 576 - 1"
            },
            {
                "line_number": 4,
                "text": "1b 576 - 1"
            },
            {
                "line_number": 5,
                "text": "1.1 576 - 1"
            },
            {
                "line_number": 6,
                "text": "1.2 576 - 1"
            },
            {
                "line_number": 7,
                "text": "1.3 576 - 1"
            },
            {
                "line_number": 8,
                "text": "2 576 - 1"
            },
            {
                "line_number": 9,
                "text": "2.1 576 - -"
            },
            {
                "line_number": 10,
                "text": "2.2 576 - -"
            },
            {
                "line_number": 11,
                "text": "3 576 - -"
            },
            {
                "line_number": 12,
                "text": "3.1 - 8x8 -"
            },
            {
                "line_number": 13,
                "text": "3.2 - 8x8 -"
            },
            {
                "line_number": 14,
                "text": "4 - 8x8 -"
            },
            {
                "line_number": 15,
                "text": "4.1 - 8x8 -"
            },
            {
                "line_number": 16,
                "text": "4.2 - 8x8 1"
            },
            {
                "line_number": 17,
                "text": "5 - 8x8 1"
            },
            {
                "line_number": 18,
                "text": "5.1 - 8x8 1"
            },
            {
                "line_number": 19,
                "text": "5.2 - 8x8 1"
            },
            {
                "line_number": 20,
                "text": "6 - 8x8 1"
            },
            {
                "line_number": 21,
                "text": "6.1 - 8x8 1"
            },
            {
                "line_number": 22,
                "text": "6.2 - 8x8 1"
            },
            {
                "line_number": 23,
                "text": "300 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 323,
        "lines": [
            {
                "line_number": 1,
                "text": "A.3.4 Effect of level limits on frame rate (informative)"
            },
            {
                "line_number": 2,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 3,
                "text": "Table A-6 – Maximum frame rates (frames per second) for some example frame sizes"
            },
            {
                "line_number": 4,
                "text": "Level: 1 1b 1.1 1.2 1.3 2 2.1"
            },
            {
                "line_number": 5,
                "text": "Max frame size (macroblocks): 99 99 396 396 396 396 792"
            },
            {
                "line_number": 6,
                "text": "Max macroblocks/second: 1 485 1 485 3 000 6 000 11 880 11 880 19 800"
            },
            {
                "line_number": 7,
                "text": "Max frame size (samples): 25 344 25 344 101 376 101 376 101 376 101 376 202 752"
            },
            {
                "line_number": 8,
                "text": "Max samples/second: 380 160 380 160 768 000 1 536 000 3 041 280 3 041 280 5 068 800"
            },
            {
                "line_number": 9,
                "text": "Luma Luma MBs Luma"
            },
            {
                "line_number": 10,
                "text": "Format Width Height Total Samples"
            },
            {
                "line_number": 11,
                "text": "SQCIF 128 96 48 12 288 30.9 30.9 62.5 125.0 172.0 172.0 172.0"
            },
            {
                "line_number": 12,
                "text": "QCIF 176 144 99 25 344 15.0 15.0 30.3 60.6 120.0 120.0 172.0"
            },
            {
                "line_number": 13,
                "text": "QVGA 320 240 300 76 800 - - 10.0 20.0 39.6 39.6 66.0"
            },
            {
                "line_number": 14,
                "text": "525 SIF 352 240 330 84 480 - - 9.1 18.2 36.0 36.0 60.0"
            },
            {
                "line_number": 15,
                "text": "CIF 352 288 396 101 376 - - 7.6 15.2 30.0 30.0 50.0"
            },
            {
                "line_number": 16,
                "text": "525 HHR 352 480 660 168 960 - - - - - - 30.0"
            },
            {
                "line_number": 17,
                "text": "625 HHR 352 576 792 202 752 - - - - - - 25.0"
            },
            {
                "line_number": 18,
                "text": "VGA 640 480 1 200 307 200 - - - - - - -"
            },
            {
                "line_number": 19,
                "text": "525 4SIF 704 480 1 320 337 920 - - - - - - -"
            },
            {
                "line_number": 20,
                "text": "525 SD 720 480 1 350 345 600 - - - - - - -"
            },
            {
                "line_number": 21,
                "text": "4CIF 704 576 1 584 405 504 - - - - - - -"
            },
            {
                "line_number": 22,
                "text": "625 SD 720 576 1 620 414 720 - - - - - - -"
            },
            {
                "line_number": 23,
                "text": "SVGA 800 600 1 900 486 400 - - - - - - -"
            },
            {
                "line_number": 24,
                "text": "XGA 1024 768 3 072 786 432 - - - - - - -"
            },
            {
                "line_number": 25,
                "text": "720p HD 1280 720 3 600 921 600 - - - - - - -"
            },
            {
                "line_number": 26,
                "text": "4VGA 1280 960 4 800 1 228 800 - - - - - - -"
            },
            {
                "line_number": 27,
                "text": "SXGA 1280 1024 5 120 1 310 720 - - - - - - -"
            },
            {
                "line_number": 28,
                "text": "525 16SIF 1408 960 5 280 1 351 680 - - - - - - -"
            },
            {
                "line_number": 29,
                "text": "16CIF 1408 1152 6 336 1 622 016 - - - - - - -"
            },
            {
                "line_number": 30,
                "text": "4SVGA 1600 1200 7 500 1 920 000 - - - - - - -"
            },
            {
                "line_number": 31,
                "text": "1080 HD 1920 1088 8 160 2 088 960 - - - - - - -"
            },
            {
                "line_number": 32,
                "text": "2Kx1K 2048 1024 8 192 2 097 152 - - - - - - -"
            },
            {
                "line_number": 33,
                "text": "2Kx1080 2048 1088 8 704 2 228 224 - - - - - - -"
            },
            {
                "line_number": 34,
                "text": "4XGA 2048 1536 12 288 3 145 728 - - - - - - -"
            },
            {
                "line_number": 35,
                "text": "16VGA 2560 1920 19 200 4 915 200 - - - - - - -"
            },
            {
                "line_number": 36,
                "text": "3616x1536 (2.35:1) 3616 1536 21 696 5 554 176 - - - - - - -"
            },
            {
                "line_number": 37,
                "text": "3672x1536 (2.39:1) 3680 1536 22 080 5 652 480 - - - - - - -"
            },
            {
                "line_number": 38,
                "text": "3840x2160 3840 2160 31 035 7 948 800 - - - - - - -"
            },
            {
                "line_number": 39,
                "text": "4Kx2K 4096 2048 32 768 8 388 608 - - - - - - -"
            },
            {
                "line_number": 40,
                "text": "4096x2160 4096 2160 34 560 8 847 360 - - - - - - -"
            },
            {
                "line_number": 41,
                "text": "4096x2304 (16:9) 4096 2304 36 864 9 437 184 - - - - - - -"
            },
            {
                "line_number": 42,
                "text": "7680x4320 7680 4320 129 600 33 177 600 - - - - - - -"
            },
            {
                "line_number": 43,
                "text": "8192x4096 8192 4096 131 072 33 554 432 - - - - - - -"
            },
            {
                "line_number": 44,
                "text": "8192x4320 8192 4320 138 240 35 389 440 - - - - - - -"
            },
            {
                "line_number": 45,
                "text": "Rec. ITU-T H.264 (06/2019) 301"
            }
        ]
    },
    {
        "page_number": 324,
        "lines": [
            {
                "line_number": 1,
                "text": "Table A-6 (continued) – Maximum frame rates (frames per second) for some example frame sizes"
            },
            {
                "line_number": 2,
                "text": "Level: 2.2 3 3.1 3.2 4 4.1 4.2"
            },
            {
                "line_number": 3,
                "text": "Max frame size (macroblocks): 1 620 1 620 3 600 5 120 8 192 8 192 8 704"
            },
            {
                "line_number": 4,
                "text": "Max macroblocks/second: 20 250 40 500 108 000 216 000 245 760 245 760 522 240"
            },
            {
                "line_number": 5,
                "text": "Max frame size (samples): 414 720 414 720 921 600 1 310 720 2 097 152 2 097 152 2 228 224"
            },
            {
                "line_number": 6,
                "text": "Max samples/second: 5 184 000 10 368 000 27 648 000 55 296 000 62 914 560 62 914 560 133 693 440"
            },
            {
                "line_number": 7,
                "text": "Luma Luma MBs Luma"
            },
            {
                "line_number": 8,
                "text": "Format Width Height Total Samples"
            },
            {
                "line_number": 9,
                "text": "SQCIF 128 96 48 12 288 172.0 172.0 172.0 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 10,
                "text": "QCIF 176 144 99 25 344 172.0 172.0 172.0 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 11,
                "text": "QVGA 320 240 300 76 800 67.5 135.0 172.0 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 12,
                "text": "525 SIF 352 240 330 84 480 61.4 122.7 172.0 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 13,
                "text": "CIF 352 288 396 101 376 51.1 102.3 172.0 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 14,
                "text": "525 HHR 352 480 660 168 960 30.7 61.4 163.6 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 15,
                "text": "625 HHR 352 576 792 202 752 25.6 51.1 136.4 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 16,
                "text": "VGA 640 480 1 200 307 200 16.9 33.8 90.0 172.0 172.0 172.0 172.0"
            },
            {
                "line_number": 17,
                "text": "525 4SIF 704 480 1 320 337 920 15.3 30.7 81.8 163.6 172.0 172.0 172.0"
            },
            {
                "line_number": 18,
                "text": "525 SD 720 480 1 350 345 600 15.0 30.0 80.0 160.0 172.0 172.0 172.0"
            },
            {
                "line_number": 19,
                "text": "4CIF 704 576 1 584 405 504 12.8 25.6 68.2 136.4 155.2 155.2 172.0"
            },
            {
                "line_number": 20,
                "text": "625 SD 720 576 1 620 414 720 12.5 25.0 66.7 133.3 151.7 151.7 172.0"
            },
            {
                "line_number": 21,
                "text": "SVGA 800 600 1 900 486 400 - - 56.8 113.7 129.3 129.3 172.0"
            },
            {
                "line_number": 22,
                "text": "XGA 1024 768 3 072 786 432 - - 35.2 70.3 80.0 80.0 170.0"
            },
            {
                "line_number": 23,
                "text": "720p HD 1280 720 3 600 921 600 - - 30.0 60.0 68.3 68.3 145.1"
            },
            {
                "line_number": 24,
                "text": "4VGA 1280 960 4 800 1 228 800 - - - 45.0 51.2 51.2 108.8"
            },
            {
                "line_number": 25,
                "text": "SXGA 1280 1024 5 120 1 310 720 - - - 42.2 48.0 48.0 102.0"
            },
            {
                "line_number": 26,
                "text": "525 16SIF 1408 960 5 280 1 351 680 - - - - 46.5 46.5 98.9"
            },
            {
                "line_number": 27,
                "text": "16CIF 1408 1152 6 336 1 622 016 - - - - 38.8 38.8 82.4"
            },
            {
                "line_number": 28,
                "text": "4SVGA 1600 1200 7 500 1 920 000 - - - - 32.8 32.8 69.6"
            },
            {
                "line_number": 29,
                "text": "1080 HD 1920 1088 8 160 2 088 960 - - - - 30.1 30.1 64.0"
            },
            {
                "line_number": 30,
                "text": "2Kx1K 2048 1024 8 192 2 097 152 - - - - 30.0 30.0 63.8"
            },
            {
                "line_number": 31,
                "text": "2Kx1080 2048 1088 8 704 2 228 224 - - - - - - 60.0"
            },
            {
                "line_number": 32,
                "text": "4XGA 2048 1536 12 288 3 145 728 - - - - - - -"
            },
            {
                "line_number": 33,
                "text": "16VGA 2560 1920 19 200 4 915 200 - - - - - - -"
            },
            {
                "line_number": 34,
                "text": "3616x1536 (2.35:1) 3616 1536 21 696 5 554 176 - - - - - - -"
            },
            {
                "line_number": 35,
                "text": "3672x1536 (2.39:1) 3680 1536 22 080 5 652 480 - - - - - - -"
            },
            {
                "line_number": 36,
                "text": "3840x2160 3840 2160 31 035 7 948 800 - - - - - - -"
            },
            {
                "line_number": 37,
                "text": "4Kx2K 4096 2048 32 768 8 388 608 - - - - - - -"
            },
            {
                "line_number": 38,
                "text": "4096x2160 4096 2160 34 560 8 847 360 - - - - - - -"
            },
            {
                "line_number": 39,
                "text": "4096x2304 (16:9) 4096 2304 36 864 9 437 184 - - - - - - -"
            },
            {
                "line_number": 40,
                "text": "7680x4320 7680 4320 129 600 33 177 600 - - - - - - -"
            },
            {
                "line_number": 41,
                "text": "8192x4096 8192 4096 131 072 33 554 432 - - - - - - -"
            },
            {
                "line_number": 42,
                "text": "8192x4320 8192 4320 138 240 35 389 440 - - - - - - -"
            },
            {
                "line_number": 43,
                "text": "302 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 325,
        "lines": [
            {
                "line_number": 1,
                "text": "Table A-6 (concluded) – Maximum frame rates (frames per second) for some example frame sizes"
            },
            {
                "line_number": 2,
                "text": "Level: 5 5.1 5.2 6 6.1 6.2"
            },
            {
                "line_number": 3,
                "text": "Max frame size (macroblocks): 22 080 36 864 36 864 139 264 139 264 139 264"
            },
            {
                "line_number": 4,
                "text": "Max macroblocks/second: 589 824 983 040 2 073 600 4 177 920 8 355 840 16 711 680"
            },
            {
                "line_number": 5,
                "text": "Max frame size (samples): 5 652 480 9 437 184 9 437 184 35 651 584 35 651 584 35 651 584"
            },
            {
                "line_number": 6,
                "text": "Max samples/second: 150 994 944 251 658 240 530 841 600 1 069 547 520 2 139 095 040 4 278 190 080"
            },
            {
                "line_number": 7,
                "text": "Luma Luma MBs Luma"
            },
            {
                "line_number": 8,
                "text": "Format Width Height Total Samples"
            },
            {
                "line_number": 9,
                "text": "SQCIF 128 96 48 12 288 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 10,
                "text": "QCIF 176 144 99 25 344 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 11,
                "text": "QVGA 320 240 300 76 800 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 12,
                "text": "525 SIF 352 240 330 84 480 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 13,
                "text": "CIF 352 288 396 101 376 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 14,
                "text": "525 HHR 352 480 660 168 960 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 15,
                "text": "625 HHR 352 576 792 202 752 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 16,
                "text": "VGA 640 480 1 200 307 200 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 17,
                "text": "525 4SIF 704 480 1 320 337 920 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 18,
                "text": "525 SD 720 480 1 350 345 600 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 19,
                "text": "4CIF 704 576 1 584 405 504 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 20,
                "text": "625 SD 720 576 1 620 414 720 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 21,
                "text": "SVGA 800 600 1 900 486 400 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 22,
                "text": "XGA 1024 768 3 072 786 432 172.0 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 23,
                "text": "720p HD 1280 720 3 600 921 600 163.8 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 24,
                "text": "4VGA 1280 960 4 800 1 228 800 122.9 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 25,
                "text": "SXGA 1280 1024 5 120 1 310 720 115.2 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 26,
                "text": "525 16SIF 1408 960 5 280 1 351 680 111.7 172.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 27,
                "text": "16CIF 1408 1152 6 336 1 622 016 93.1 155.2 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 28,
                "text": "4SVGA 1600 1200 7 500 1 920 000 78.6 131.1 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 29,
                "text": "1080 HD 1920 1088 8 160 2 088 960 72.3 120.5 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 30,
                "text": "2Kx1K 2048 1024 8 192 2 097 152 72.0 120.0 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 31,
                "text": "2Kx1080 2048 1088 8 704 2 228 224 67.8 112.9 172.0 300.0 300.0 300.0"
            },
            {
                "line_number": 32,
                "text": "4XGA 2048 1536 12 288 3 145 728 48.0 80.0 168.8 300.0 300.0 300.0"
            },
            {
                "line_number": 33,
                "text": "16VGA 2560 1920 19 200 4 915 200 30.7 51.2 108.0 217.6 300.0 300.0"
            },
            {
                "line_number": 34,
                "text": "3616x1536 (2.35:1) 3616 1536 21 696 5 554 176 27.2 45.3 95.6 192.6 300.0 300.0"
            },
            {
                "line_number": 35,
                "text": "3672x1536 (2.39:1) 3680 1536 22 080 5 652 480 26.7 44.5 93.9 189.2 300.0 300.0"
            },
            {
                "line_number": 36,
                "text": "3840x2160 3840 2160 31 035 7 948 800 - 30.3 64.0 128.9 257.9 300.0"
            },
            {
                "line_number": 37,
                "text": "4Kx2K 4096 2048 32 768 8 388 608 - 30.0 63.3 127.5 255.0 300.0"
            },
            {
                "line_number": 38,
                "text": "4096x2160 4096 2160 34 560 8 847 360 - 28.4 60.0 120.9 241.8 300.0"
            },
            {
                "line_number": 39,
                "text": "4096x2304 (16:9) 4096 2304 36 864 9 437 184 - 26.7 56.3 113.3 226.7 300.0"
            },
            {
                "line_number": 40,
                "text": "7680x4320 7680 4320 129 600 33 177 600 - - - 32.2 64.5 128.9"
            },
            {
                "line_number": 41,
                "text": "8192x4096 8192 4096 131 072 33 554 432 - - - 31.9 63.8 127.5"
            },
            {
                "line_number": 42,
                "text": "8192x4320 8192 4320 138 240 35 389 440 - - - 30.2 60.4 120.9"
            },
            {
                "line_number": 43,
                "text": "The following should be noted:"
            },
            {
                "line_number": 44,
                "text": "– This Recommendation | International Standard is a variable-frame-size specification. The specific frame sizes in"
            },
            {
                "line_number": 45,
                "text": "Table A-6 are illustrative examples only."
            },
            {
                "line_number": 46,
                "text": "– As used in Table A-6, \"525\" refers to typical use for environments using 525 analogue scan lines (of which"
            },
            {
                "line_number": 47,
                "text": "approximately 480 lines contain the visible picture region), and \"625\" refers to environments using 625 analogue scan"
            },
            {
                "line_number": 48,
                "text": "lines (of which approximately 576 lines contain the visible picture region)."
            },
            {
                "line_number": 49,
                "text": "– XGA is also known as (aka) XVGA, 4SVGA aka UXGA, 16XGA aka 4Kx3K, CIF aka 625 SIF, 625 HHR aka 2CIF"
            },
            {
                "line_number": 50,
                "text": "aka half 625 D-1, aka half 625 ITU-R BT.601, 525 SD aka 525 D-1 aka 525 ITU-R BT.601, 625 SD aka 625 D-1 aka"
            },
            {
                "line_number": 51,
                "text": "625 ITU-R BT.601."
            },
            {
                "line_number": 52,
                "text": "– The given maximum frame rate values that have a zero to the right of the decimal point are exact. Others have been"
            },
            {
                "line_number": 53,
                "text": "rounded to the nearest 0.1 frames per second, i.e., the precise maximum frame rates may be higher or lower within a"
            },
            {
                "line_number": 54,
                "text": "margin of plus or minus 0.05 frames per second. For example, for Level 4, the maximum frame rate for 720p HD has"
            },
            {
                "line_number": 55,
                "text": "been rounded up to 68.3 from a value of 68.2666…, and the maximum frame rate for 1080 HD has been rounded"
            },
            {
                "line_number": 56,
                "text": "down to 30.1 from a value of 30.1176…."
            },
            {
                "line_number": 57,
                "text": "– Frame rates given are correct for progressive scan modes. The frame rates are also correct for interlaced video coding"
            },
            {
                "line_number": 58,
                "text": "for the cases of frame height divisible by 32."
            },
            {
                "line_number": 59,
                "text": "Rec. ITU-T H.264 (06/2019) 303"
            }
        ]
    },
    {
        "page_number": 326,
        "lines": [
            {
                "line_number": 1,
                "text": "A.3.5 Effect of level limits on maximum DPB size in units of frames (informative)"
            },
            {
                "line_number": 2,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 3,
                "text": "Table A-7 – Maximum DPB size (frames) for some example frame sizes"
            },
            {
                "line_number": 4,
                "text": "Level: 1 1b 1.1 1.2 1.3 2 2.1 2.2"
            },
            {
                "line_number": 5,
                "text": "Max frame size (macroblocks): 99 99 396 396 396 396 792 1 620"
            },
            {
                "line_number": 6,
                "text": "Max DPB size (macroblocks): 396 396 900 2 376 2 376 2 376 4 752 8 100"
            },
            {
                "line_number": 7,
                "text": "Format Luma Width Luma Height MBs Total"
            },
            {
                "line_number": 8,
                "text": "SQCIF 128 96 48 8 8 16 16 16 16 16 16"
            },
            {
                "line_number": 9,
                "text": "QCIF 176 144 99 4 4 9 16 16 16 16 16"
            },
            {
                "line_number": 10,
                "text": "QVGA 320 240 300 - - 3 7 7 7 15 16"
            },
            {
                "line_number": 11,
                "text": "525 SIF 352 240 330 - - 2 7 7 7 14 16"
            },
            {
                "line_number": 12,
                "text": "CIF 352 288 396 - - 2 6 6 6 12 16"
            },
            {
                "line_number": 13,
                "text": "525 HHR 352 480 660 - - - - - - 7 12"
            },
            {
                "line_number": 14,
                "text": "625 HHR 352 576 792 - - - - - - 6 10"
            },
            {
                "line_number": 15,
                "text": "VGA 640 480 1 200 - - - - - - - 6"
            },
            {
                "line_number": 16,
                "text": "525 4SIF 704 480 1 320 - - - - - - - 6"
            },
            {
                "line_number": 17,
                "text": "525 SD 720 480 1 350 - - - - - - - 6"
            },
            {
                "line_number": 18,
                "text": "4CIF 704 576 1 584 - - - - - - - 5"
            },
            {
                "line_number": 19,
                "text": "625 SD 720 576 1 620 - - - - - - - 5"
            },
            {
                "line_number": 20,
                "text": "SVGA 800 600 1 900 - - - - - - - -"
            },
            {
                "line_number": 21,
                "text": "XGA 1024 768 3 072 - - - - - - - -"
            },
            {
                "line_number": 22,
                "text": "720p HD 1280 720 3 600 - - - - - - - -"
            },
            {
                "line_number": 23,
                "text": "4VGA 1280 960 4 800 - - - - - - - -"
            },
            {
                "line_number": 24,
                "text": "SXGA 1280 1024 5 120 - - - - - - - -"
            },
            {
                "line_number": 25,
                "text": "525 16SIF 1408 960 5 280 - - - - - - - -"
            },
            {
                "line_number": 26,
                "text": "16CIF 1408 1152 6 336 - - - - - - - -"
            },
            {
                "line_number": 27,
                "text": "4SVGA 1600 1200 7 500 - - - - - - - -"
            },
            {
                "line_number": 28,
                "text": "1080 HD 1920 1088 8 160 - - - - - - - -"
            },
            {
                "line_number": 29,
                "text": "2Kx1K 2048 1024 8 192 - - - - - - - -"
            },
            {
                "line_number": 30,
                "text": "2Kx1080 2048 1088 8 704 - - - - - - - -"
            },
            {
                "line_number": 31,
                "text": "4XGA 2048 1536 12 288 - - - - - - - -"
            },
            {
                "line_number": 32,
                "text": "16VGA 2560 1920 19 200 - - - - - - - -"
            },
            {
                "line_number": 33,
                "text": "3616x1536 (2.35:1) 3616 1536 21 696 - - - - - - - -"
            },
            {
                "line_number": 34,
                "text": "3672x1536 (2.39:1) 3680 1536 22 080 - - - - - - - -"
            },
            {
                "line_number": 35,
                "text": "3840x2160 3840 2160 31 035 - - - - - - - -"
            },
            {
                "line_number": 36,
                "text": "4Kx2K 4096 2048 32 768 - - - - - - - -"
            },
            {
                "line_number": 37,
                "text": "4096x2160 4096 2160 34 560 - - - - - - - -"
            },
            {
                "line_number": 38,
                "text": "4096x2304 (16:9) 4096 2304 36 864 - - - - - - - -"
            },
            {
                "line_number": 39,
                "text": "7680x4320 7680 4320 129 600 - - - - - - - -"
            },
            {
                "line_number": 40,
                "text": "8192x4096 8192 4096 131 072 - - - - - - - -"
            },
            {
                "line_number": 41,
                "text": "8192x4320 8192 4320 138 240 - - - - - - - -"
            },
            {
                "line_number": 42,
                "text": "304 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 327,
        "lines": [
            {
                "line_number": 1,
                "text": "Table A-7 (continued) – Maximum DPB size (frames) for some example frame sizes"
            },
            {
                "line_number": 2,
                "text": "Level: 3 3.1 3.2 4 4.1 4.2"
            },
            {
                "line_number": 3,
                "text": "Max frame size (macroblocks): 1 620 3 600 5 120 8 192 8 192 8 704"
            },
            {
                "line_number": 4,
                "text": "Max DPB size (macroblocks): 8 100 18 000 20 480 32 768 32 768 34 816"
            },
            {
                "line_number": 5,
                "text": "MBs"
            },
            {
                "line_number": 6,
                "text": "Format Luma Width Luma Height Total"
            },
            {
                "line_number": 7,
                "text": "SQCIF 128 96 48 16 16 16 16 16 16"
            },
            {
                "line_number": 8,
                "text": "QCIF 176 144 99 16 16 16 16 16 16"
            },
            {
                "line_number": 9,
                "text": "QVGA 320 240 300 16 16 16 16 16 16"
            },
            {
                "line_number": 10,
                "text": "525 SIF 352 240 330 16 16 16 16 16 16"
            },
            {
                "line_number": 11,
                "text": "CIF 352 288 396 16 16 16 16 16 16"
            },
            {
                "line_number": 12,
                "text": "525 HHR 352 480 660 12 16 16 16 16 16"
            },
            {
                "line_number": 13,
                "text": "625 HHR 352 576 792 10 16 16 16 16 16"
            },
            {
                "line_number": 14,
                "text": "VGA 640 480 1 200 6 15 16 16 16 16"
            },
            {
                "line_number": 15,
                "text": "525 4SIF 704 480 1 320 6 13 15 16 16 16"
            },
            {
                "line_number": 16,
                "text": "525 SD 720 480 1 350 6 13 15 16 16 16"
            },
            {
                "line_number": 17,
                "text": "4CIF 704 576 1 584 5 11 12 16 16 16"
            },
            {
                "line_number": 18,
                "text": "625 SD 720 576 1 620 5 11 12 16 16 16"
            },
            {
                "line_number": 19,
                "text": "SVGA 800 600 1 900 - 9 10 16 16 16"
            },
            {
                "line_number": 20,
                "text": "XGA 1024 768 3 072 - 5 6 10 10 11"
            },
            {
                "line_number": 21,
                "text": "720p HD 1280 720 3 600 - 5 5 9 9 9"
            },
            {
                "line_number": 22,
                "text": "4VGA 1280 960 4 800 - - 4 6 6 7"
            },
            {
                "line_number": 23,
                "text": "SXGA 1280 1024 5 120 - - 4 6 6 6"
            },
            {
                "line_number": 24,
                "text": "525 16SIF 1408 960 5 280 - - - 6 6 6"
            },
            {
                "line_number": 25,
                "text": "16CIF 1408 1152 6 336 - - - 5 5 5"
            },
            {
                "line_number": 26,
                "text": "4SVGA 1600 1200 7 500 - - - 4 4 4"
            },
            {
                "line_number": 27,
                "text": "1080 HD 1920 1088 8 160 - - - 4 4 4"
            },
            {
                "line_number": 28,
                "text": "2Kx1K 2048 1024 8 192 - - - 4 4 4"
            },
            {
                "line_number": 29,
                "text": "2Kx1080 2048 1088 8 704 - - - - - 4"
            },
            {
                "line_number": 30,
                "text": "4XGA 2048 1536 12 288 - - - - - -"
            },
            {
                "line_number": 31,
                "text": "16VGA 2560 1920 19 200 - - - - - -"
            },
            {
                "line_number": 32,
                "text": "3616x1536 (2.35:1) 3616 1536 21 696 - - - - - -"
            },
            {
                "line_number": 33,
                "text": "3672x1536 (2.39:1) 3680 1536 22 080 - - - - - -"
            },
            {
                "line_number": 34,
                "text": "3840x2160 3840 2160 31 035 - - - - - -"
            },
            {
                "line_number": 35,
                "text": "4Kx2K 4096 2048 32 768 - - - - - -"
            },
            {
                "line_number": 36,
                "text": "4096x2160 4096 2160 34 560 - - - - - -"
            },
            {
                "line_number": 37,
                "text": "4096x2304 (16:9) 4096 2304 36 864 - - - - - -"
            },
            {
                "line_number": 38,
                "text": "7680x4320 7680 4320 129 600 - - - - - -"
            },
            {
                "line_number": 39,
                "text": "8192x4096 8192 4096 131 072 - - - - - -"
            },
            {
                "line_number": 40,
                "text": "8192x4320 8192 4320 138 240 - - - - - -"
            },
            {
                "line_number": 41,
                "text": "Table A-7 (concluded) – Maximum DPB size (frames) for some example frame sizes"
            },
            {
                "line_number": 42,
                "text": "Level: 5 5.1 5.2 6 6.1 6.2"
            },
            {
                "line_number": 43,
                "text": "Max frame size (macroblocks): 22 080 36 864 36 864 129 600 131 072 138 240"
            },
            {
                "line_number": 44,
                "text": "Max DPB size (macroblocks): 110 400 184 320 184 320 696 320 696 320 696 320"
            },
            {
                "line_number": 45,
                "text": "Format Luma Width Luma Height MBs Total"
            },
            {
                "line_number": 46,
                "text": "SQCIF 128 96 48 16 16 16 16 16 16"
            },
            {
                "line_number": 47,
                "text": "QCIF 176 144 99 16 16 16 16 16 16"
            },
            {
                "line_number": 48,
                "text": "QVGA 320 240 300 16 16 16 16 16 16"
            },
            {
                "line_number": 49,
                "text": "525 SIF 352 240 330 16 16 16 16 16 16"
            },
            {
                "line_number": 50,
                "text": "CIF 352 288 396 16 16 16 16 16 16"
            },
            {
                "line_number": 51,
                "text": "525 HHR 352 480 660 16 16 16 16 16 16"
            },
            {
                "line_number": 52,
                "text": "625 HHR 352 576 792 16 16 16 16 16 16"
            },
            {
                "line_number": 53,
                "text": "VGA 640 480 1 200 16 16 16 16 16 16"
            },
            {
                "line_number": 54,
                "text": "525 4SIF 704 480 1 320 16 16 16 16 16 16"
            },
            {
                "line_number": 55,
                "text": "525 SD 720 480 1 350 16 16 16 16 16 16"
            },
            {
                "line_number": 56,
                "text": "4CIF 704 576 1 584 16 16 16 16 16 16"
            },
            {
                "line_number": 57,
                "text": "625 SD 720 576 1 620 16 16 16 16 16 16"
            },
            {
                "line_number": 58,
                "text": "SVGA 800 600 1 900 16 16 16 16 16 16"
            },
            {
                "line_number": 59,
                "text": "XGA 1024 768 3 072 16 16 16 16 16 16"
            },
            {
                "line_number": 60,
                "text": "720p HD 1280 720 3 600 16 16 16 16 16 16"
            },
            {
                "line_number": 61,
                "text": "4VGA 1280 960 4 800 16 16 16 16 16 16"
            },
            {
                "line_number": 62,
                "text": "SXGA 1280 1024 5 120 16 16 16 16 16 16"
            },
            {
                "line_number": 63,
                "text": "525 16SIF 1408 960 5 280 16 16 16 16 16 16"
            },
            {
                "line_number": 64,
                "text": "16CIF 1408 1152 6 336 16 16 16 16 16 16"
            },
            {
                "line_number": 65,
                "text": "4SVGA 1600 1200 7 500 14 16 16 16 16 16"
            },
            {
                "line_number": 66,
                "text": "1080 HD 1920 1088 8 160 13 16 16 16 16 16"
            },
            {
                "line_number": 67,
                "text": "2Kx1K 2048 1024 8 192 13 16 16 16 16 16"
            },
            {
                "line_number": 68,
                "text": "2Kx1080 2048 1088 8 704 12 16 16 16 16 16"
            },
            {
                "line_number": 69,
                "text": "4XGA 2048 1536 12 288 8 15 15 16 16 16"
            },
            {
                "line_number": 70,
                "text": "16VGA 2560 1920 19 200 5 9 9 16 16 16"
            },
            {
                "line_number": 71,
                "text": "3616x1536 (2.35:1) 3616 1536 21 696 5 8 8 16 16 16"
            },
            {
                "line_number": 72,
                "text": "3672x1536 (2.39:1) 3680 1536 22 080 5 8 8 16 16 16"
            },
            {
                "line_number": 73,
                "text": "3840x2160 3840 2160 31 035 - 5 5 16 16 16"
            },
            {
                "line_number": 74,
                "text": "4Kx2K 4096 2048 32 768 - 5 5 16 16 16"
            },
            {
                "line_number": 75,
                "text": "4096x2160 4096 2160 34 560 - 5 5 16 16 16"
            },
            {
                "line_number": 76,
                "text": "4096x2304 (16:9) 4096 2304 36 864 - 5 5 16 16 16"
            },
            {
                "line_number": 77,
                "text": "7680x4320 7680 4320 129 600 - - - 5 5 5"
            },
            {
                "line_number": 78,
                "text": "8192x4096 8192 4096 131 072 - - - 5 5 5"
            },
            {
                "line_number": 79,
                "text": "8192x4320 8192 4320 138 240 - - - 5 5 5"
            },
            {
                "line_number": 80,
                "text": "Rec. ITU-T H.264 (06/2019) 305"
            }
        ]
    },
    {
        "page_number": 328,
        "lines": [
            {
                "line_number": 1,
                "text": "The following should be noted:"
            },
            {
                "line_number": 2,
                "text": "– As used in Table A-7, \"525\" refers to typical use for environments using 525 analogue scan lines (of which"
            },
            {
                "line_number": 3,
                "text": "approximately 480 lines contain the visible picture region), and \"625\" refers to environments using 625 analogue scan"
            },
            {
                "line_number": 4,
                "text": "lines (of which approximately 576 lines contain the visible picture region)."
            },
            {
                "line_number": 5,
                "text": "– XGA is also known as (aka) XVGA, 4SVGA aka UXGA, 16XGA aka 4Kx3K, CIF aka 625 SIF, 625 HHR aka 2CIF"
            },
            {
                "line_number": 6,
                "text": "aka half 625 D-1, aka half 625 ITU-R BT.601, 525 SD aka 525 D-1 aka 525 ITU-R BT.601, 625 SD aka 625 D-1 aka"
            },
            {
                "line_number": 7,
                "text": "625 ITU-R BT.601."
            },
            {
                "line_number": 8,
                "text": "306 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 329,
        "lines": [
            {
                "line_number": 1,
                "text": "Annex B"
            },
            {
                "line_number": 2,
                "text": "Byte stream format"
            },
            {
                "line_number": 3,
                "text": "(This annex forms an integral part of this Recommendation | International Standard.)"
            },
            {
                "line_number": 4,
                "text": "This annex specifies syntax and semantics of a byte stream format specified for use by applications that deliver some or"
            },
            {
                "line_number": 5,
                "text": "all of the NAL unit stream as an ordered stream of bytes or bits within which the locations of NAL unit boundaries need"
            },
            {
                "line_number": 6,
                "text": "to be identifiable from patterns in the data, such as Rec. ITU-T H.222.0 | ISO/IEC 13818-1 systems or Rec. ITU-T H.320"
            },
            {
                "line_number": 7,
                "text": "systems. For bit-oriented delivery, the bit order for the byte stream format is specified to start with the MSB of the first"
            },
            {
                "line_number": 8,
                "text": "byte, proceed to the LSB of the first byte, followed by the MSB of the second byte, etc."
            },
            {
                "line_number": 9,
                "text": "The byte stream format consists of a sequence of byte stream NAL unit syntax structures. Each byte stream NAL unit"
            },
            {
                "line_number": 10,
                "text": "syntax structure contains one start code prefix followed by one nal_unit( NumBytesInNALunit ) syntax structure. It may"
            },
            {
                "line_number": 11,
                "text": "(and under some circumstances, it shall) also contain an additional zero_byte syntax element. It may also contain one or"
            },
            {
                "line_number": 12,
                "text": "more additional trailing_zero_8bits syntax elements. When it is the first byte stream NAL unit in the bitstream, it may also"
            },
            {
                "line_number": 13,
                "text": "contain one or more additional leading_zero_8bits syntax elements."
            },
            {
                "line_number": 14,
                "text": "B.1 Byte stream NAL unit syntax and semantics"
            },
            {
                "line_number": 15,
                "text": "B.1.1 Byte stream NAL unit syntax"
            },
            {
                "line_number": 16,
                "text": "byte_stream_nal_unit( NumBytesInNALunit ) { C Descriptor"
            },
            {
                "line_number": 17,
                "text": "while( next_bits( 24 ) != 0x000001 &&"
            },
            {
                "line_number": 18,
                "text": "next_bits( 32 ) != 0x00000001 )"
            },
            {
                "line_number": 19,
                "text": "leading_zero_8bits /* equal to 0x00 */ f(8)"
            },
            {
                "line_number": 20,
                "text": "if( next_bits( 24 ) != 0x000001 )"
            },
            {
                "line_number": 21,
                "text": "zero_byte /* equal to 0x00 */ f(8)"
            },
            {
                "line_number": 22,
                "text": "start_code_prefix_one_3bytes /* equal to 0x000001 */ f(24)"
            },
            {
                "line_number": 23,
                "text": "nal_unit( NumBytesInNALunit )"
            },
            {
                "line_number": 24,
                "text": "while( more_data_in_byte_stream( ) &&"
            },
            {
                "line_number": 25,
                "text": "next_bits( 24 ) != 0x000001 &&"
            },
            {
                "line_number": 26,
                "text": "next_bits( 32 ) != 0x00000001 )"
            },
            {
                "line_number": 27,
                "text": "trailing_zero_8bits /* equal to 0x00 */ f(8)"
            },
            {
                "line_number": 28,
                "text": "}"
            },
            {
                "line_number": 29,
                "text": "B.1.2 Byte stream NAL unit semantics"
            },
            {
                "line_number": 30,
                "text": "The order of byte stream NAL units in the byte stream shall follow the decoding order of the NAL units contained in the"
            },
            {
                "line_number": 31,
                "text": "byte stream NAL units (see clause 7.4.1.2). The content of each byte stream NAL unit is associated with the same access"
            },
            {
                "line_number": 32,
                "text": "unit as the NAL unit contained in the byte stream NAL unit (see clause 7.4.1.2.3)."
            },
            {
                "line_number": 33,
                "text": "leading_zero_8bits is a byte equal to 0x00."
            },
            {
                "line_number": 34,
                "text": "NOTE – The leading_zero_8bits syntax element can only be present in the first byte stream NAL unit of the bitstream, because (as"
            },
            {
                "line_number": 35,
                "text": "shown in the syntax diagram of clause B.1.1) any bytes equal to 0x00 that follow a NAL unit syntax structure and precede the four-"
            },
            {
                "line_number": 36,
                "text": "byte sequence 0x00000001 (which is to be interpreted as a zero_byte followed by a start_code_prefix_one_3bytes) will be"
            },
            {
                "line_number": 37,
                "text": "considered to be trailing_zero_8bits syntax elements that are part of the preceding byte stream NAL unit."
            },
            {
                "line_number": 38,
                "text": "zero_byte is a single byte equal to 0x00."
            },
            {
                "line_number": 39,
                "text": "When any of the following conditions are true, the zero_byte syntax element shall be present:"
            },
            {
                "line_number": 40,
                "text": "– the nal_unit_type within the nal_unit( ) is equal to 7 (sequence parameter set) or 8 (picture parameter set),"
            },
            {
                "line_number": 41,
                "text": "– the byte stream NAL unit syntax structure contains the first NAL unit of an access unit in decoding order, as specified"
            },
            {
                "line_number": 42,
                "text": "in clause 7.4.1.2.3."
            },
            {
                "line_number": 43,
                "text": "start_code_prefix_one_3bytes is a fixed-value sequence of 3 bytes equal to 0x000001. This syntax element is called a"
            },
            {
                "line_number": 44,
                "text": "start code prefix."
            },
            {
                "line_number": 45,
                "text": "trailing_zero_8bits is a byte equal to 0x00."
            },
            {
                "line_number": 46,
                "text": "Rec. ITU-T H.264 (06/2019) 307"
            }
        ]
    },
    {
        "page_number": 330,
        "lines": [
            {
                "line_number": 1,
                "text": "B.2 Byte stream NAL unit decoding process"
            },
            {
                "line_number": 2,
                "text": "Input to this process consists of an ordered stream of bytes consisting of a sequence of byte stream NAL unit syntax"
            },
            {
                "line_number": 3,
                "text": "structures."
            },
            {
                "line_number": 4,
                "text": "Output of this process consists of a sequence of NAL unit syntax structures."
            },
            {
                "line_number": 5,
                "text": "At the beginning of the decoding process, the decoder initializes its current position in the byte stream to the beginning of"
            },
            {
                "line_number": 6,
                "text": "the byte stream. It then extracts and discards each leading_zero_8bits syntax element (if present), moving the current"
            },
            {
                "line_number": 7,
                "text": "position in the byte stream forward one byte at a time, until the current position in the byte stream is such that the next four"
            },
            {
                "line_number": 8,
                "text": "bytes in the bitstream form the four-byte sequence 0x00000001."
            },
            {
                "line_number": 9,
                "text": "The decoder then performs the following step-wise process repeatedly to extract and decode each NAL unit syntax structure"
            },
            {
                "line_number": 10,
                "text": "in the byte stream until the end of the byte stream has been encountered (as determined by unspecified means) and the last"
            },
            {
                "line_number": 11,
                "text": "NAL unit in the byte stream has been decoded:"
            },
            {
                "line_number": 12,
                "text": "1. When the next four bytes in the bitstream form the four-byte sequence 0x00000001, the next byte in the byte"
            },
            {
                "line_number": 13,
                "text": "stream (which is a zero_byte syntax element) is extracted and discarded and the current position in the byte stream"
            },
            {
                "line_number": 14,
                "text": "is set equal to the position of the byte following this discarded byte."
            },
            {
                "line_number": 15,
                "text": "2. The next three-byte sequence in the byte stream (which is a start_code_prefix_one_3bytes) is extracted and"
            },
            {
                "line_number": 16,
                "text": "discarded and the current position in the byte stream is set equal to the position of the byte following this three-byte"
            },
            {
                "line_number": 17,
                "text": "sequence."
            },
            {
                "line_number": 18,
                "text": "3. NumBytesInNALunit is set equal to the number of bytes starting with the byte at the current position in the byte"
            },
            {
                "line_number": 19,
                "text": "stream up to and including the last byte that precedes the location of any of the following:"
            },
            {
                "line_number": 20,
                "text": "– A subsequent byte-aligned three-byte sequence equal to 0x000000,"
            },
            {
                "line_number": 21,
                "text": "– A subsequent byte-aligned three-byte sequence equal to 0x000001,"
            },
            {
                "line_number": 22,
                "text": "– The end of the byte stream, as determined by unspecified means."
            },
            {
                "line_number": 23,
                "text": "4. NumBytesInNALunit bytes are removed from the bitstream and the current position in the byte stream is advanced"
            },
            {
                "line_number": 24,
                "text": "by NumBytesInNALunit bytes. This sequence of bytes is nal_unit( NumBytesInNALunit ) and is decoded using"
            },
            {
                "line_number": 25,
                "text": "the NAL unit decoding process."
            },
            {
                "line_number": 26,
                "text": "5. When the current position in the byte stream is not at the end of the byte stream (as determined by unspecified"
            },
            {
                "line_number": 27,
                "text": "means) and the next bytes in the byte stream do not start with a three-byte sequence equal to 0x000001 and the"
            },
            {
                "line_number": 28,
                "text": "next bytes in the byte stream do not start with a four byte sequence equal to 0x00000001, the decoder extracts and"
            },
            {
                "line_number": 29,
                "text": "discards each trailing_zero_8bits syntax element, moving the current position in the byte stream forward one byte"
            },
            {
                "line_number": 30,
                "text": "at a time, until the current position in the byte stream is such that the next bytes in the byte stream form the four-"
            },
            {
                "line_number": 31,
                "text": "byte sequence 0x00000001 or the end of the byte stream has been encountered (as determined by unspecified"
            },
            {
                "line_number": 32,
                "text": "means)."
            },
            {
                "line_number": 33,
                "text": "B.3 Decoder byte-alignment recovery (informative)"
            },
            {
                "line_number": 34,
                "text": "This clause does not form an integral part of this Recommendation | International Standard."
            },
            {
                "line_number": 35,
                "text": "Many applications provide data to a decoder in a manner that is inherently byte aligned, and thus have no need for the bit-"
            },
            {
                "line_number": 36,
                "text": "oriented byte alignment detection procedure described in this clause."
            },
            {
                "line_number": 37,
                "text": "A decoder is said to have byte-alignment with a bitstream when the decoder is able to determine whether or not the positions"
            },
            {
                "line_number": 38,
                "text": "of data in the bitstream are byte-aligned. When a decoder does not have byte alignment with the encoder's byte stream, the"
            },
            {
                "line_number": 39,
                "text": "decoder may examine the incoming bitstream for the binary pattern '00000000 00000000 00000000 00000001' (31"
            },
            {
                "line_number": 40,
                "text": "consecutive bits equal to 0 followed by a bit equal to 1). The bit immediately following this pattern is the first bit of an"
            },
            {
                "line_number": 41,
                "text": "aligned byte following a start code prefix. Upon detecting this pattern, the decoder will be byte aligned with the encoder"
            },
            {
                "line_number": 42,
                "text": "and positioned at the start of a NAL unit in the byte stream."
            },
            {
                "line_number": 43,
                "text": "Once byte aligned with the encoder, the decoder can examine the incoming byte stream for subsequent three-byte sequences"
            },
            {
                "line_number": 44,
                "text": "0x000001 and 0x000003."
            },
            {
                "line_number": 45,
                "text": "When the three-byte sequence 0x000001 is detected, this is a start code prefix."
            },
            {
                "line_number": 46,
                "text": "When the three-byte sequence 0x000003 is detected, the third byte (0x03) is an emulation_prevention_three_byte to be"
            },
            {
                "line_number": 47,
                "text": "discarded as specified in clause 7.4.1."
            },
            {
                "line_number": 48,
                "text": "When an error in the bitstream syntax is detected (e.g., a non-zero value of the forbidden_zero_bit or one of the three-byte"
            },
            {
                "line_number": 49,
                "text": "or four-byte sequences that are prohibited in clause 7.4.1), the decoder may consider the detected condition as an indication"
            },
            {
                "line_number": 50,
                "text": "that byte alignment may have been lost and may discard all bitstream data until the detection of byte alignment at a later"
            },
            {
                "line_number": 51,
                "text": "position in the bitstream as described in this clause."
            },
            {
                "line_number": 52,
                "text": "308 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 331,
        "lines": [
            {
                "line_number": 1,
                "text": "Annex C"
            },
            {
                "line_number": 2,
                "text": "Hypothetical reference decoder"
            },
            {
                "line_number": 3,
                "text": "(This annex forms an integral part of this Recommendation | International Standard.)"
            },
            {
                "line_number": 4,
                "text": "This annex specifies the hypothetical reference decoder (HRD) and its use to check bitstream and decoder conformance."
            },
            {
                "line_number": 5,
                "text": "Two types of bitstreams are subject to HRD conformance checking for this Recommendation | International Standard. The"
            },
            {
                "line_number": 6,
                "text": "first such type of bitstream, called Type I bitstream, is a NAL unit stream containing only the VCL NAL units and filler"
            },
            {
                "line_number": 7,
                "text": "data NAL units for all access units in the bitstream. The second type of bitstream, called a Type II bitstream, contains, in"
            },
            {
                "line_number": 8,
                "text": "addition to the VCL NAL units and filler data NAL units for all access units in the bitstream, at least one of the following:"
            },
            {
                "line_number": 9,
                "text": "– additional non-VCL NAL units other than filler data NAL units,"
            },
            {
                "line_number": 10,
                "text": "– all leading_zero_8bits, zero_byte, start_code_prefix_one_3bytes, and trailing_zero_8bits syntax elements that form a"
            },
            {
                "line_number": 11,
                "text": "byte stream from the NAL unit stream (as specified in Annex B)."
            },
            {
                "line_number": 12,
                "text": "Figure C-1 shows the types of bitstream conformance points checked by the HRD."
            },
            {
                "line_number": 13,
                "text": "Non-VCL NAL units other"
            },
            {
                "line_number": 14,
                "text": "VCL NAL units than filter data NAL units"
            },
            {
                "line_number": 15,
                "text": "Filter data NAL units"
            },
            {
                "line_number": 16,
                "text": "Byte stream format"
            },
            {
                "line_number": 17,
                "text": "encapsulation"
            },
            {
                "line_number": 18,
                "text": "(see Annex B)"
            },
            {
                "line_number": 19,
                "text": "H.264(09)_FC-1"
            },
            {
                "line_number": 20,
                "text": "Figure C-1 – Structure of byte streams and NAL unit streams for HRD conformance checks"
            },
            {
                "line_number": 21,
                "text": "The syntax elements of non-VCL NAL units (or their default values for some of the syntax elements), required for the"
            },
            {
                "line_number": 22,
                "text": "HRD, are specified in the semantics subclauses of clause 7, Annexes D and E, and clauses G.7, G.13, G.14, H.7, H.13,"
            },
            {
                "line_number": 23,
                "text": "H.14, I.7, I.13, and I.14."
            },
            {
                "line_number": 24,
                "text": "Two types of HRD parameter sets (NAL HRD parameters and VCL HRD parameters) are used. The HRD parameter sets"
            },
            {
                "line_number": 25,
                "text": "are signalled as follows:"
            },
            {
                "line_number": 26,
                "text": "– When the coded video sequence conforms to one or more of the profiles specified in Annex A and the decoding"
            },
            {
                "line_number": 27,
                "text": "process specified in clauses 2 to 9 is applied, the HRD parameter sets are signalled through video usability information"
            },
            {
                "line_number": 28,
                "text": "as specified in clauses E.1 and E.2, which is part of the sequence parameter set syntax structure."
            },
            {
                "line_number": 29,
                "text": "– When the coded video sequence conforms to one or more of the profiles specified in Annex G and the decoding"
            },
            {
                "line_number": 30,
                "text": "process specified in Annex G is applied, the HRD parameter sets are signalled through the SVC video usability"
            },
            {
                "line_number": 31,
                "text": "information extension as specified in clauses G.14.1 and G.14.2, which is part of the subset sequence parameter set"
            },
            {
                "line_number": 32,
                "text": "syntax structure."
            },
            {
                "line_number": 33,
                "text": "NOTE 1 – For coded video sequences that conform to both, one or more of the profiles specified in Annex A and one or more of the"
            },
            {
                "line_number": 34,
                "text": "profiles specified in Annex G, the signalling of the applicable HRD parameter sets is depending on whether the decoding process"
            },
            {
                "line_number": 35,
                "text": "specified in clauses 2 to 9 or the decoding process specified in Annex G is applied."
            },
            {
                "line_number": 36,
                "text": "– When the coded video sequence conforms to one or more of the profiles specified in Annex H and the decoding"
            },
            {
                "line_number": 37,
                "text": "process specified in Annex H is applied, the HRD parameter sets are signalled through the MVC video usability"
            },
            {
                "line_number": 38,
                "text": "information extension as specified in clauses H.14.1 and H.14.2, which is part of the subset sequence parameter set"
            },
            {
                "line_number": 39,
                "text": "syntax structure."
            },
            {
                "line_number": 40,
                "text": "Rec. ITU-T H.264 (06/2019) 309"
            }
        ]
    },
    {
        "page_number": 332,
        "lines": [
            {
                "line_number": 1,
                "text": "NOTE 2 – For coded video sequences that conform to both, one or more of the profiles specified in Annex A and one or more of the"
            },
            {
                "line_number": 2,
                "text": "profiles specified in Annex H, the signalling of the applicable HRD parameter sets is depending on whether the decoding process"
            },
            {
                "line_number": 3,
                "text": "specified in clauses 2 to 9 or the decoding process specified in Annex H is applied."
            },
            {
                "line_number": 4,
                "text": "– When the coded video sequence conforms to one or more of the profiles specified in Annex I and the decoding process"
            },
            {
                "line_number": 5,
                "text": "specified in Annex I is applied, the HRD parameter sets are signalled through the MVC video usability information"
            },
            {
                "line_number": 6,
                "text": "extension as specified in clause I.14, which is part of the subset sequence parameter set syntax structure."
            },
            {
                "line_number": 7,
                "text": "NOTE 3 – For coded video sequences that conform to one or more of the profiles specified in Annex A, one or more of the profiles"
            },
            {
                "line_number": 8,
                "text": "specified in Annex H and one or more of the profiles specified in Annex I, the signalling of the applicable HRD parameter sets is"
            },
            {
                "line_number": 9,
                "text": "dependent on whether the decoding process specified in clauses 2-9, the decoding process specified in Annex H, or the decoding"
            },
            {
                "line_number": 10,
                "text": "process specified in Annex I is applied."
            },
            {
                "line_number": 11,
                "text": "All sequence parameter sets and picture parameter sets referred to in the VCL NAL units, and corresponding buffering"
            },
            {
                "line_number": 12,
                "text": "period and picture timing SEI messages shall be conveyed to the HRD, in a timely manner, either in the bitstream (by non-"
            },
            {
                "line_number": 13,
                "text": "VCL NAL units), or by other means not specified in this Recommendation | International Standard."
            },
            {
                "line_number": 14,
                "text": "In Annexes C, D, and E and clauses G.12, G.13, G.14, H.12, H.13, H.14, I.13 and I.14 the specification for \"presence\" of"
            },
            {
                "line_number": 15,
                "text": "non-VCL NAL units is also satisfied when those NAL units (or just some of them) are conveyed to decoders (or to the"
            },
            {
                "line_number": 16,
                "text": "HRD) by other means not specified by this Recommendation | International Standard. For the purpose of counting bits,"
            },
            {
                "line_number": 17,
                "text": "only the appropriate bits that are actually present in the bitstream are counted."
            },
            {
                "line_number": 18,
                "text": "NOTE 4 – As an example, synchronization of a non-VCL NAL unit, conveyed by means other than presence in the bitstream, with"
            },
            {
                "line_number": 19,
                "text": "the NAL units that are present in the bitstream, can be achieved by indicating two points in the bitstream, between which the"
            },
            {
                "line_number": 20,
                "text": "non-VCL NAL unit would have been present in the bitstream, had the encoder decided to convey it in the bitstream."
            },
            {
                "line_number": 21,
                "text": "When the content of a non-VCL NAL unit is conveyed for the application by some means other than presence within the"
            },
            {
                "line_number": 22,
                "text": "bitstream, the representation of the content of the non-VCL NAL unit is not required to use the same syntax specified in"
            },
            {
                "line_number": 23,
                "text": "this annex."
            },
            {
                "line_number": 24,
                "text": "NOTE 5 – When HRD information is contained within the bitstream, it is possible to verify the conformance of a bitstream to the"
            },
            {
                "line_number": 25,
                "text": "requirements of this clause based solely on information contained in the bitstream. When the HRD information is not present in the"
            },
            {
                "line_number": 26,
                "text": "bitstream, as is the case for all \"stand-alone\" Type I bitstreams, conformance can only be verified when the HRD data is supplied"
            },
            {
                "line_number": 27,
                "text": "by some other means not specified in this Recommendation | International Standard."
            },
            {
                "line_number": 28,
                "text": "The HRD contains a coded picture buffer (CPB), an instantaneous decoding process, a decoded picture buffer (DPB), and"
            },
            {
                "line_number": 29,
                "text": "output cropping as shown in Figure C-2."
            },
            {
                "line_number": 30,
                "text": "310 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 333,
        "lines": [
            {
                "line_number": 1,
                "text": "Hypothetical"
            },
            {
                "line_number": 2,
                "text": "stream scheduler"
            },
            {
                "line_number": 3,
                "text": "(HSS)"
            },
            {
                "line_number": 4,
                "text": "Type I or Type II bitstream"
            },
            {
                "line_number": 5,
                "text": "Coded picture"
            },
            {
                "line_number": 6,
                "text": "buffer (CPB)"
            },
            {
                "line_number": 7,
                "text": "Access units"
            },
            {
                "line_number": 8,
                "text": "Decoding process"
            },
            {
                "line_number": 9,
                "text": "(instantaneous)"
            },
            {
                "line_number": 10,
                "text": "Reference Pictures"
            },
            {
                "line_number": 11,
                "text": "fields or frames"
            },
            {
                "line_number": 12,
                "text": "Decoded picture"
            },
            {
                "line_number": 13,
                "text": "buffer (DPB)"
            },
            {
                "line_number": 14,
                "text": "Pictures"
            },
            {
                "line_number": 15,
                "text": "Output cropping"
            },
            {
                "line_number": 16,
                "text": "Output cropped pictures"
            },
            {
                "line_number": 17,
                "text": "H.264(13)_FC-2"
            },
            {
                "line_number": 18,
                "text": "Figure C-2 – HRD buffer model"
            },
            {
                "line_number": 19,
                "text": "The CPB size (number of bits) is CpbSize[ SchedSelIdx ]. The DPB size (number of frame buffers) is"
            },
            {
                "line_number": 20,
                "text": "Max( 1, max_dec_frame_buffering ). When the coded video sequence conforms to one or more of the profiles specified in"
            },
            {
                "line_number": 21,
                "text": "Annex H and the decoding process specified in Annex H is applied, the DPB size is specified in units of view components."
            },
            {
                "line_number": 22,
                "text": "When the coded video sequence conforms to one or more of the profiles specified in Annex I and the decoding process"
            },
            {
                "line_number": 23,
                "text": "specified in Annex I is applied, the DPB is operated separately for texture view components and depth view components"
            },
            {
                "line_number": 24,
                "text": "and the terms texture DPB and depth DPB are used, respectively. The texture DPB size is specified in units of texture view"
            },
            {
                "line_number": 25,
                "text": "components and the depth DPB size is specified in units of depth view components."
            },
            {
                "line_number": 26,
                "text": "The HRD operates as follows. Data associated with access units that flow into the CPB according to a specified arrival"
            },
            {
                "line_number": 27,
                "text": "schedule are delivered by the HSS. The data associated with each access unit are removed and decoded instantaneously by"
            },
            {
                "line_number": 28,
                "text": "the instantaneous decoding process at CPB removal times. Each decoded picture is placed in the DPB at its CPB removal"
            },
            {
                "line_number": 29,
                "text": "time unless it is output at its CPB removal time and is a non-reference picture. When a picture is placed in the DPB it is"
            },
            {
                "line_number": 30,
                "text": "removed from the DPB at the later of the DPB output time or the time that it is marked as \"unused for reference\"."
            },
            {
                "line_number": 31,
                "text": "For each picture in the bitstream, the variable OutputFlag for the decoded picture and, when applicable, the reference base"
            },
            {
                "line_number": 32,
                "text": "picture, is set as follows:"
            },
            {
                "line_number": 33,
                "text": "– If the coded video sequence containing the picture conforms to one or more of the profiles specified in Annex A and"
            },
            {
                "line_number": 34,
                "text": "the decoding process specified in clauses 2 to 9 is applied, OutputFlag is set equal to 1."
            },
            {
                "line_number": 35,
                "text": "– Otherwise, if the coded video sequence containing the picture conforms to one or more of the profiles specified in"
            },
            {
                "line_number": 36,
                "text": "Annex G and the decoding process specified in Annex G is applied, the following applies:"
            },
            {
                "line_number": 37,
                "text": "– For a reference base picture, OutputFlag is set equal to 0."
            },
            {
                "line_number": 38,
                "text": "– For a decoded picture, OutputFlag is set equal to the value of the output_flag syntax element of the target layer"
            },
            {
                "line_number": 39,
                "text": "representation."
            },
            {
                "line_number": 40,
                "text": "– Otherwise, if the coded video sequence containing the picture conforms to one or more of the profiles specified in"
            },
            {
                "line_number": 41,
                "text": "Annex H and the decoding process specified in Annex H is applied, the following applies:"
            },
            {
                "line_number": 42,
                "text": "– For the decoded view components of the target output views, OutputFlag is set equal to 1."
            },
            {
                "line_number": 43,
                "text": "– For the decoded view components of other views, OutputFlag is set equal to 0."
            },
            {
                "line_number": 44,
                "text": "– Otherwise (the coded video sequence containing the picture conforms to one or more of the profiles specified in"
            },
            {
                "line_number": 45,
                "text": "Annex I and the decoding process specified in Annex I is applied), the following applies:"
            },
            {
                "line_number": 46,
                "text": "Rec. ITU-T H.264 (06/2019) 311"
            }
        ]
    },
    {
        "page_number": 334,
        "lines": [
            {
                "line_number": 1,
                "text": "– For the decoded texture view components and corresponding depth view components with the same VOIdx as"
            },
            {
                "line_number": 2,
                "text": "the target output views, OutputFlag is set equal to 1."
            },
            {
                "line_number": 3,
                "text": "– For the decoded texture view components and corresponding depth view components with the same VOIdx as"
            },
            {
                "line_number": 4,
                "text": "other views, OutputFlag is set equal to 0."
            },
            {
                "line_number": 5,
                "text": "The operation of the CPB is specified in clause C.1. The instantaneous decoder operation is specified in clauses 2 to 9 (for"
            },
            {
                "line_number": 6,
                "text": "coded video sequences conforming to one or more of the profiles specified in Annex A) and in Annex G (for coded video"
            },
            {
                "line_number": 7,
                "text": "sequences conforming to one or more of the profiles specified in Annex G) and in Annex H (for coded video sequences"
            },
            {
                "line_number": 8,
                "text": "conforming to one or more of the profiles specified in Annex H) and in Annex I (for coded video sequences conforming"
            },
            {
                "line_number": 9,
                "text": "to one or more of the profiles specified in Annex I). The operation of the DPB is specified in clause C.2. The output"
            },
            {
                "line_number": 10,
                "text": "cropping is specified in clause C.2.2."
            },
            {
                "line_number": 11,
                "text": "NOTE 6 – Coded video sequences that conform to one or more of the profiles specified in Annex A, and at the same time, one or"
            },
            {
                "line_number": 12,
                "text": "more of the profiles specified in Annex G can be decoded either by the decoding process specified in clauses 2 to 9 or by the decoding"
            },
            {
                "line_number": 13,
                "text": "process specified in Annex G. The decoding result and the HRD operation may be dependent on which of the decoding processes is"
            },
            {
                "line_number": 14,
                "text": "applied."
            },
            {
                "line_number": 15,
                "text": "NOTE 7 – Coded video sequences that conform to one or more of the profiles specified in Annex A, and at the same time, one or"
            },
            {
                "line_number": 16,
                "text": "more of the profiles specified in Annex H can be decoded either by the decoding process specified in clauses 2 to 9 or by the decoding"
            },
            {
                "line_number": 17,
                "text": "process specified in Annex H. The decoding result and the HRD operation may be dependent on which of the decoding processes is"
            },
            {
                "line_number": 18,
                "text": "applied."
            },
            {
                "line_number": 19,
                "text": "NOTE 8 – Coded video sequences that conform to one or more of the profiles specified in Annex A, one or more of the profiles"
            },
            {
                "line_number": 20,
                "text": "specified in Annex H, and one or more of the profiles specified in Annex I, can be decoded either by the decoding process specified"
            },
            {
                "line_number": 21,
                "text": "in clauses 2 to 9, by the decoding process specified in Annex H or by the decoding process specified in Annex I. The decoding result"
            },
            {
                "line_number": 22,
                "text": "and the HRD operation may be dependent on which of the decoding processes is applied."
            },
            {
                "line_number": 23,
                "text": "HSS and HRD information concerning the number of enumerated delivery schedules and their associated bit rates and"
            },
            {
                "line_number": 24,
                "text": "buffer sizes is specified in clauses E.1.1, E.1.2, E.2.1, E.2.2, G.14.1, G.14.2, H.14.1, H.14.2 and I.14. The HRD is initialized"
            },
            {
                "line_number": 25,
                "text": "as specified by the buffering period SEI message as specified in clauses D.1.2 and D.2.1. The removal timing of access"
            },
            {
                "line_number": 26,
                "text": "units from the CPB and output timing from the DPB are specified in the picture timing SEI message as specified in"
            },
            {
                "line_number": 27,
                "text": "clauses D.1.3 and D.2.3. All timing information relating to a specific access unit shall arrive prior to the CPB removal time"
            },
            {
                "line_number": 28,
                "text": "of the access unit."
            },
            {
                "line_number": 29,
                "text": "When the coded video sequence conforms to one or more of the profiles specified in Annex G and the decoding process"
            },
            {
                "line_number": 30,
                "text": "specified in Annex G is applied, the following is specified:"
            },
            {
                "line_number": 31,
                "text": "(a) When an access unit contains one or more buffering period SEI messages that are included in scalable nesting"
            },
            {
                "line_number": 32,
                "text": "SEI messages and are associated with values of DQId in the range of ( ( DQIdMax >> 4) << 4 ) to"
            },
            {
                "line_number": 33,
                "text": "( ( ( DQIdMax >> 4 ) << 4 ) + 15 ), inclusive, the last of these buffering period SEI messages in decoding order"
            },
            {
                "line_number": 34,
                "text": "is the buffering period SEI message that initializes the HRD. Let hrdDQId be the largest value of"
            },
            {
                "line_number": 35,
                "text": "16 * sei_dependency_id[ i ] + sei_quality_id[ i ] that is associated with the scalable nesting SEI message"
            },
            {
                "line_number": 36,
                "text": "containing the buffering period SEI message that initializes the HRD, let hrdDId and hrdQId be equal to"
            },
            {
                "line_number": 37,
                "text": "hrdDQId >> 4 and hrdDQId & 15, respectively, and let hrdTId be the value of sei_temporal_id that is associated"
            },
            {
                "line_number": 38,
                "text": "with the scalable nesting SEI message containing the buffering period SEI message that initializes the HRD."
            },
            {
                "line_number": 39,
                "text": "(b) The picture timing SEI messages that specify the removal timing of access units from the CPB and output timing"
            },
            {
                "line_number": 40,
                "text": "from the DPB are the picture timing SEI messages that are included in scalable nesting SEI messages associated"
            },
            {
                "line_number": 41,
                "text": "with values of sei_dependency_id[ i ], sei_quality_id[ i ], and sei_temporal_id equal to hrdDId, hrdQId, and"
            },
            {
                "line_number": 42,
                "text": "hrdTId, respectively."
            },
            {
                "line_number": 43,
                "text": "(c) The HRD parameters that are used for conformance checking are the HRD parameters included in the SVC video"
            },
            {
                "line_number": 44,
                "text": "usability information extension of the active SVC sequence parameter set that are associated with values of"
            },
            {
                "line_number": 45,
                "text": "vui_ext_dependency_id[ i ], vui_ext_quality_id[ i ], and vui_ext_temporal_id[ i ] equal to hrdDId, hrdQId, and"
            },
            {
                "line_number": 46,
                "text": "hrdTId, respectively. For the specification in this annex, num_units_in_tick, time_scale, fixed_frame_rate_flag,"
            },
            {
                "line_number": 47,
                "text": "nal_hrd_parameters_present_flag, vcl_hrd_parameters_present_flag, low_delay_hrd_flag, and"
            },
            {
                "line_number": 48,
                "text": "pic_struct_present_flag are substituted with the values of vui_ext_num_units_in_tick[ i ],"
            },
            {
                "line_number": 49,
                "text": "vui_ext_time_scale[ i ], vui_ext_fixed_frame_rate_flag[ i ], vui_ext_nal_hrd_parameters_present_flag[ i ],"
            },
            {
                "line_number": 50,
                "text": "vui_ext_vcl_hrd_parameters_present_flag[ i ], vui_ext_low_delay_hrd_flag[ i ], and"
            },
            {
                "line_number": 51,
                "text": "vui_ext_pic_struct_present_flag[ i ], respectively, with i being the value for which vui_ext_dependency_id[ i ],"
            },
            {
                "line_number": 52,
                "text": "vui_ext_quality_id[ i ], and vui_ext_temporal_id[ i ] are equal to hrdDId, hrdQId, and hrdTId, respectively."
            },
            {
                "line_number": 53,
                "text": "When the coded video sequence conforms to one or more of the profiles specified in Annex H and the decoding process"
            },
            {
                "line_number": 54,
                "text": "specified in Annex H is applied, the following is specified:"
            },
            {
                "line_number": 55,
                "text": "(a) When an access unit contains one or more buffering period SEI messages that are included in MVC scalable"
            },
            {
                "line_number": 56,
                "text": "nesting SEI messages, the buffering period SEI message that is associated with the operation point being decoded"
            },
            {
                "line_number": 57,
                "text": "is the buffering period SEI message that initializes the HRD. Let hrdVId[ i ] be equal to sei_op_view_id[ i ] for"
            },
            {
                "line_number": 58,
                "text": "all i in the range of 0 to num_view_components_op_minus1, inclusive, and let hrdTId be the value of"
            },
            {
                "line_number": 59,
                "text": "312 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 335,
        "lines": [
            {
                "line_number": 1,
                "text": "sei_op_temporal_id, that are associated with the MVC scalable nesting SEI message containing the buffering"
            },
            {
                "line_number": 2,
                "text": "period SEI message that initializes the HRD."
            },
            {
                "line_number": 3,
                "text": "(b) The picture timing SEI messages that specify the removal timing of access units from the CPB and output timing"
            },
            {
                "line_number": 4,
                "text": "from the DPB are the picture timing SEI messages that are included in MVC scalable nesting SEI messages"
            },
            {
                "line_number": 5,
                "text": "associated with values of sei_op_view_id[ i ] equal to hrdVId[ i ] for all i in the range of 0 to"
            },
            {
                "line_number": 6,
                "text": "num_view_components_op_minus1, inclusive, and sei_temporal_id equal to hrdTId."
            },
            {
                "line_number": 7,
                "text": "(c) The HRD parameters that are used for conformance checking are the HRD parameters included in the MVC"
            },
            {
                "line_number": 8,
                "text": "video usability information extension of the active MVC sequence parameter set that are associated with values"
            },
            {
                "line_number": 9,
                "text": "of vui_mvc_view_id[ i ][ j ] for all j in the range of 0 to vui_mvc_num_target_output_views_minus1[ i ],"
            },
            {
                "line_number": 10,
                "text": "inclusive, equal to hrdVId[ j ], and the value of vui_mvc_temporal_id[ i ] equal to hrdTId. For the specification"
            },
            {
                "line_number": 11,
                "text": "in this annex, num_units_in_tick, time_scale, fixed_frame_rate_flag, nal_hrd_parameters_present_flag,"
            },
            {
                "line_number": 12,
                "text": "vcl_hrd_parameters_present_flag, low_delay_hrd_flag, and pic_struct_present_flag are substituted with the"
            },
            {
                "line_number": 13,
                "text": "values of vui_mvc_num_units_in_tick[ i ], vui_mvc_time_scale[ i ], vui_mvc_fixed_frame_rate_flag[ i ],"
            },
            {
                "line_number": 14,
                "text": "vui_mvc_nal_hrd_parameters_present_flag[ i ], vui_mvc_vcl_hrd_parameters_present_flag[ i ],"
            },
            {
                "line_number": 15,
                "text": "vui_mvc_low_delay_hrd_flag[ i ], and vui_mvc_pic_struct_present_flag[ i ], respectively, with i being the value"
            },
            {
                "line_number": 16,
                "text": "for which vui_mvc_view_id[ i ] is equal to hrdVId[ j ] for all j in the range of 0 to"
            },
            {
                "line_number": 17,
                "text": "vui_mvc_num_traget_output_views_minus1[ i ], inclusive, and vui_mvc_temporal_id[ i ] equal to hrdTId."
            },
            {
                "line_number": 18,
                "text": "When the coded video sequence conforms to one or more of the profiles specified in Annex I and the decoding process"
            },
            {
                "line_number": 19,
                "text": "specified in Annex I is applied, the following is specified:"
            },
            {
                "line_number": 20,
                "text": "(a) When an access unit contains one or more buffering period SEI messages that are included in MVCD scalable"
            },
            {
                "line_number": 21,
                "text": "nesting SEI messages, the buffering period SEI message that is associated with the operation point being decoded"
            },
            {
                "line_number": 22,
                "text": "is the buffering period SEI message that initializes the HRD. Let hrdVId[ i ] be equal to sei_op_view_id[ i ] for"
            },
            {
                "line_number": 23,
                "text": "all i in the range of 0 to num_view_components_op_minus1, inclusive, and let hrdTId be the value of"
            },
            {
                "line_number": 24,
                "text": "sei_op_temporal_id, that are associated with the MVCD scalable nesting SEI message containing the buffering"
            },
            {
                "line_number": 25,
                "text": "period SEI message that initializes the HRD."
            },
            {
                "line_number": 26,
                "text": "(b) The picture timing SEI messages that specify the removal timing of access units from the CPB and output timing"
            },
            {
                "line_number": 27,
                "text": "from the DPB are the picture timing SEI messages that are included in MVCD scalable nesting SEI messages"
            },
            {
                "line_number": 28,
                "text": "associated with values of sei_op_view_id[ i ] equal to hrdVId[ i ] for all i in the range of 0 to"
            },
            {
                "line_number": 29,
                "text": "num_view_components_op_minus1, inclusive, and sei_temporal_id equal to hrdTId."
            },
            {
                "line_number": 30,
                "text": "(c) The HRD parameter sets that are used for conformance checking are the HRD parameter sets, included in the"
            },
            {
                "line_number": 31,
                "text": "MVC video usability information extension of the active MVCD sequence parameter set, that are associated with"
            },
            {
                "line_number": 32,
                "text": "values of vui_mvc_view_id[ i ][ j ] for all j in the range of 0 to vui_mvc_num_target_output_views_minus1[ i ],"
            },
            {
                "line_number": 33,
                "text": "inclusive, equal to hrdVId[ j ], and the value of vui_mvc_temporal_id[ i ] equal to hrdTId. For the specification"
            },
            {
                "line_number": 34,
                "text": "in this annex, num_units_in_tick, time_scale, fixed_frame_rate_flag, nal_hrd_parameters_present_flag,"
            },
            {
                "line_number": 35,
                "text": "vcl_hrd_parameters_present_flag, low_delay_hrd_flag, and pic_struct_present_flag are substituted with the"
            },
            {
                "line_number": 36,
                "text": "values of vui_mvc_num_units_in_tick[ i ], vui_mvc_time_scale[ i ], vui_mvc_fixed_frame_rate_flag[ i ],"
            },
            {
                "line_number": 37,
                "text": "vui_mvc_nal_hrd_parameters_present_flag[ i ], vui_mvc_vcl_hrd_parameters_present_flag[ i ],"
            },
            {
                "line_number": 38,
                "text": "vui_mvc_low_delay_hrd_flag[ i ], and vui_mvc_pic_struct_present_flag[ i ], respectively, with i being the value"
            },
            {
                "line_number": 39,
                "text": "for which vui_mvc_view_id[ i ] is equal to hrdVId[ j ] for all j in the range of 0 to"
            },
            {
                "line_number": 40,
                "text": "vui_mvc_num_traget_output_views_minus1[ i ], inclusive, and vui_mvc_temporal_id[ i ] equal to hrdTId."
            },
            {
                "line_number": 41,
                "text": "The HRD is used to check conformance of bitstreams and decoders as specified in clauses C.3 and C.4, respectively."
            },
            {
                "line_number": 42,
                "text": "NOTE 9 – While conformance is guaranteed under the assumption that all frame-rates and clocks used to generate the bitstream"
            },
            {
                "line_number": 43,
                "text": "match exactly the values signalled in the bitstream, in a real system each of these may vary from the signalled or specified value."
            },
            {
                "line_number": 44,
                "text": "All the arithmetic in this annex is done with real values, so that no rounding errors can propagate. For example, the number"
            },
            {
                "line_number": 45,
                "text": "of bits in a CPB just prior to or after removal of an access unit is not necessarily an integer."
            },
            {
                "line_number": 46,
                "text": "The variable t is derived as follows and is called a clock tick:"
            },
            {
                "line_number": 47,
                "text": "c"
            },
            {
                "line_number": 48,
                "text": "t = num_units_in_tick ÷ time_scale (C-1)"
            },
            {
                "line_number": 49,
                "text": "c"
            },
            {
                "line_number": 50,
                "text": "The following is specified for expressing the constraints in this annex:"
            },
            {
                "line_number": 51,
                "text": "– Let access unit n be the n-th access unit in decoding order with the first access unit being access unit 0."
            },
            {
                "line_number": 52,
                "text": "– Let picture n be the primary coded picture or the decoded primary picture of access unit n."
            },
            {
                "line_number": 53,
                "text": "C.1 Operation of coded picture buffer (CPB)"
            },
            {
                "line_number": 54,
                "text": "The specifications in this clause apply independently to each set of CPB parameters that is present and to both the Type I"
            },
            {
                "line_number": 55,
                "text": "and Type II conformance points shown in Figure C-1."
            },
            {
                "line_number": 56,
                "text": "Rec. ITU-T H.264 (06/2019) 313"
            }
        ]
    },
    {
        "page_number": 336,
        "lines": [
            {
                "line_number": 1,
                "text": "C.1.1 Timing of bitstream arrival"
            },
            {
                "line_number": 2,
                "text": "The HRD may be initialized at any one of the buffering period SEI messages. Prior to initialization, the CPB is empty."
            },
            {
                "line_number": 3,
                "text": "NOTE – After initialization, the HRD is not initialized again by subsequent buffering period SEI messages."
            },
            {
                "line_number": 4,
                "text": "Each access unit is referred to as access unit n, where the number n identifies the particular access unit. The access unit"
            },
            {
                "line_number": 5,
                "text": "that is associated with the buffering period SEI message that initializes the CPB is referred to as access unit 0. The value"
            },
            {
                "line_number": 6,
                "text": "of n is incremented by 1 for each subsequent access unit in decoding order."
            },
            {
                "line_number": 7,
                "text": "The time at which the first bit of access unit n begins to enter the CPB is referred to as the initial arrival time t ( n )."
            },
            {
                "line_number": 8,
                "text": "ai"
            },
            {
                "line_number": 9,
                "text": "The initial arrival time of access units is derived as follows:"
            },
            {
                "line_number": 10,
                "text": "– If the access unit is access unit 0, t ( 0 ) = 0,"
            },
            {
                "line_number": 11,
                "text": "ai"
            },
            {
                "line_number": 12,
                "text": "– Otherwise (the access unit is access unit n with n > 0), the following applies:"
            },
            {
                "line_number": 13,
                "text": "– If cbr_flag[ SchedSelIdx ] is equal to 1, the initial arrival time for access unit n, is equal to the final arrival time"
            },
            {
                "line_number": 14,
                "text": "(which is derived below) of access unit n − 1, i.e.,"
            },
            {
                "line_number": 15,
                "text": "t ( n ) = t ( n − 1 ) (C-2)"
            },
            {
                "line_number": 16,
                "text": "ai af"
            },
            {
                "line_number": 17,
                "text": "– Otherwise (cbr_flag[ SchedSelIdx ] is equal to 0), the initial arrival time for access unit n is derived by"
            },
            {
                "line_number": 18,
                "text": "t ( n ) = Max( t ( n − 1 ), t ( n ) ) (C-3)"
            },
            {
                "line_number": 19,
                "text": "ai af ai,earliest"
            },
            {
                "line_number": 20,
                "text": "where t ( n ) is derived as follows:"
            },
            {
                "line_number": 21,
                "text": "ai,earliest"
            },
            {
                "line_number": 22,
                "text": "– If access unit n is not the first access unit of a subsequent buffering period, t ( n ) is derived as"
            },
            {
                "line_number": 23,
                "text": "ai,earliest"
            },
            {
                "line_number": 24,
                "text": "t"
            },
            {
                "line_number": 25,
                "text": "ai,earliest"
            },
            {
                "line_number": 26,
                "text": "( n ) = t"
            },
            {
                "line_number": 27,
                "text": "r,n"
            },
            {
                "line_number": 28,
                "text": "( n ) − ( initial_cpb_removal_delay[ SchedSelIdx ] +"
            },
            {
                "line_number": 29,
                "text": "initial_cpb_removal_delay_offset[ SchedSelIdx ] ) ÷ 90000 (C-4)"
            },
            {
                "line_number": 30,
                "text": "with t ( n ) being the nominal removal time of access unit n from the CPB as specified in clause C.1.2 and"
            },
            {
                "line_number": 31,
                "text": "r,n"
            },
            {
                "line_number": 32,
                "text": "initial_cpb_removal_delay[ SchedSelIdx ] and initial_cpb_removal_delay_offset[ SchedSelIdx ] being"
            },
            {
                "line_number": 33,
                "text": "specified in the previous buffering period SEI message."
            },
            {
                "line_number": 34,
                "text": "– Otherwise (access unit n is the first access unit of a subsequent buffering period), t ( n ) is derived as"
            },
            {
                "line_number": 35,
                "text": "ai,earliest"
            },
            {
                "line_number": 36,
                "text": "t ( n ) = t ( n ) − ( initial_cpb_removal_delay[ SchedSelIdx ] ÷ 90000 ) (C-5)"
            },
            {
                "line_number": 37,
                "text": "ai,earliest r,n"
            },
            {
                "line_number": 38,
                "text": "with initial_cpb_removal_delay[ SchedSelIdx ] being specified in the buffering period SEI message"
            },
            {
                "line_number": 39,
                "text": "associated with access unit n."
            },
            {
                "line_number": 40,
                "text": "The final arrival time for access unit n is derived by"
            },
            {
                "line_number": 41,
                "text": "t ( n ) = t ( n ) + b( n ) ÷ BitRate[ SchedSelIdx ] (C-6)"
            },
            {
                "line_number": 42,
                "text": "af ai"
            },
            {
                "line_number": 43,
                "text": "where b( n ) is the size in bits of access unit n, counting the bits of the VCL NAL units and the filler data NAL units for"
            },
            {
                "line_number": 44,
                "text": "the Type I conformance point or all bits of the Type II bitstream for the Type II conformance point, where the Type I and"
            },
            {
                "line_number": 45,
                "text": "Type II conformance points are as shown in Figure C-1."
            },
            {
                "line_number": 46,
                "text": "The values of SchedSelIdx, BitRate[ SchedSelIdx ], and CpbSize[ SchedSelIdx ] are constrained as follows:"
            },
            {
                "line_number": 47,
                "text": "– If the content of the active sequence parameter sets for access unit n and access unit n − 1 differ, the HSS selects a"
            },
            {
                "line_number": 48,
                "text": "value SchedSelIdx1 of SchedSelIdx from among the values of SchedSelIdx provided in the active sequence parameter"
            },
            {
                "line_number": 49,
                "text": "set for access unit n that results in a BitRate[ SchedSelIdx1 ] or CpbSize[ SchedSelIdx1 ] for access unit n. The value"
            },
            {
                "line_number": 50,
                "text": "of BitRate[ SchedSelIdx1 ] or CpbSize[ SchedSelIdx1 ] may differ from the value of BitRate[ SchedSelIdx0 ] or"
            },
            {
                "line_number": 51,
                "text": "CpbSize[ SchedSelIdx0 ] for the value SchedSelIdx0 of SchedSelIdx that was in use for access unit n − 1."
            },
            {
                "line_number": 52,
                "text": "– Otherwise, the HSS continues to operate with the previous values of SchedSelIdx, BitRate[ SchedSelIdx ] and"
            },
            {
                "line_number": 53,
                "text": "CpbSize[ SchedSelIdx ]."
            },
            {
                "line_number": 54,
                "text": "When the HSS selects values of BitRate[ SchedSelIdx ] or CpbSize[ SchedSelIdx ] that differ from those of the previous"
            },
            {
                "line_number": 55,
                "text": "access unit, the following applies:"
            },
            {
                "line_number": 56,
                "text": "– the variable BitRate[ SchedSelIdx ] comes into effect at time t ( n )"
            },
            {
                "line_number": 57,
                "text": "ai"
            },
            {
                "line_number": 58,
                "text": "– the variable CpbSize[ SchedSelIdx ] comes into effect as follows:"
            },
            {
                "line_number": 59,
                "text": "314 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 337,
        "lines": [
            {
                "line_number": 1,
                "text": "– If the new value of CpbSize[ SchedSelIdx ] exceeds the old CPB size, it comes into effect at time t ( n ),"
            },
            {
                "line_number": 2,
                "text": "ai"
            },
            {
                "line_number": 3,
                "text": "– Otherwise, the new value of CpbSize[ SchedSelIdx ] comes into effect at the time t( n )."
            },
            {
                "line_number": 4,
                "text": "r"
            },
            {
                "line_number": 5,
                "text": "C.1.2 Timing of coded picture removal"
            },
            {
                "line_number": 6,
                "text": "When an access unit n is the access unit with n equal to 0 (the access unit that initializes the HRD), the nominal removal"
            },
            {
                "line_number": 7,
                "text": "time of the access unit from the CPB is specified by"
            },
            {
                "line_number": 8,
                "text": "t ( 0 ) = initial_cpb_removal_delay[ SchedSelIdx ] ÷ 90000 (C-7)"
            },
            {
                "line_number": 9,
                "text": "r,n"
            },
            {
                "line_number": 10,
                "text": "When an access unit n is the first access unit of a buffering period that does not initialize the HRD, the nominal removal"
            },
            {
                "line_number": 11,
                "text": "time of the access unit from the CPB is specified by"
            },
            {
                "line_number": 12,
                "text": "t ( n ) = t ( n ) + t * cpb_removal_delay( n ) (C-8)"
            },
            {
                "line_number": 13,
                "text": "r,n r,n b c"
            },
            {
                "line_number": 14,
                "text": "where t ( n ) is the nominal removal time of the first access unit of the previous buffering period and"
            },
            {
                "line_number": 15,
                "text": "r,n b"
            },
            {
                "line_number": 16,
                "text": "cpb_removal_delay( n ) is the value of cpb_removal_delay specified in the picture timing SEI message associated with"
            },
            {
                "line_number": 17,
                "text": "access unit n."
            },
            {
                "line_number": 18,
                "text": "The nominal removal time t (n) of an access unit n that is not the first access unit of a buffering period is given by"
            },
            {
                "line_number": 19,
                "text": "r,n"
            },
            {
                "line_number": 20,
                "text": "t ( n ) = t ( n ) + t * cpb_removal_delay( n ) (C-9)"
            },
            {
                "line_number": 21,
                "text": "r,n r,n b c"
            },
            {
                "line_number": 22,
                "text": "where t ( n ) is the nominal removal time of the first access unit of the current buffering period and"
            },
            {
                "line_number": 23,
                "text": "r,n b"
            },
            {
                "line_number": 24,
                "text": "cpb_removal_delay( n ) is the value of cpb_removal_delay specified in the picture timing SEI message associated with"
            },
            {
                "line_number": 25,
                "text": "access unit n."
            },
            {
                "line_number": 26,
                "text": "The removal time of access unit n is specified as follows:"
            },
            {
                "line_number": 27,
                "text": "– If low_delay_hrd_flag is equal to 0 or t ( n ) >= t ( n ), the removal time of access unit n is specified by"
            },
            {
                "line_number": 28,
                "text": "r,n af"
            },
            {
                "line_number": 29,
                "text": "t( n ) = t ( n ) (C-10)"
            },
            {
                "line_number": 30,
                "text": "r r,n"
            },
            {
                "line_number": 31,
                "text": "– Otherwise (low_delay_hrd_flag is equal to 1 and t ( n ) < t ( n )), the removal time of access unit n is specified by"
            },
            {
                "line_number": 32,
                "text": "r,n af"
            },
            {
                "line_number": 33,
                "text": "t( n ) = t ( n ) + t * Ceil( ( t ( n ) − t ( n ) ) ÷t ) (C-11)"
            },
            {
                "line_number": 34,
                "text": "r r,n c af r,n c"
            },
            {
                "line_number": 35,
                "text": "NOTE – The latter case indicates that the size of access unit n, b( n ), is so large that it prevents removal at the nominal removal"
            },
            {
                "line_number": 36,
                "text": "time."
            },
            {
                "line_number": 37,
                "text": "When an access unit n is the first access unit of a buffering period, n is set equal to n at the removal time t( n ) of the"
            },
            {
                "line_number": 38,
                "text": "b r"
            },
            {
                "line_number": 39,
                "text": "access unit n."
            },
            {
                "line_number": 40,
                "text": "C.2 Operation of the decoded picture buffer (DPB)"
            },
            {
                "line_number": 41,
                "text": "The decoded picture buffer contains frame buffers. When a coded video sequence conforming to one or more of the profiles"
            },
            {
                "line_number": 42,
                "text": "specified in Annex A is decoded by applying the decoding process specified in clauses 2 to 9, each of the frame buffers"
            },
            {
                "line_number": 43,
                "text": "may contain a decoded frame, a decoded complementary field pair or a single (non-paired) decoded field that is marked as"
            },
            {
                "line_number": 44,
                "text": "\"used for reference\" (reference pictures) or is held for future output (reordered or delayed pictures). When a coded video"
            },
            {
                "line_number": 45,
                "text": "sequence conforming to one or more of the profiles specified in Annex G is decoded by applying the decoding process"
            },
            {
                "line_number": 46,
                "text": "specified in Annex G, each frame buffer may contain a decoded frame, a decoded complementary field pair, a single (non-"
            },
            {
                "line_number": 47,
                "text": "paired) decoded field, a decoded reference base frame, a decoded reference base complementary field pair or a single (non-"
            },
            {
                "line_number": 48,
                "text": "paired) decoded reference base field that is marked as \"used for reference\" (reference pictures) or is held for future output"
            },
            {
                "line_number": 49,
                "text": "(reordered or delayed pictures). When a coded video sequence conforming to one or more of the profiles specified in"
            },
            {
                "line_number": 50,
                "text": "Annex H is decoded by applying the decoding process specified in Annex H, each of the frame buffers may contain a"
            },
            {
                "line_number": 51,
                "text": "decoded frame view component, a decoded complementary field view component pair, or a single (non-paired) decoded"
            },
            {
                "line_number": 52,
                "text": "field view component that is marked as \"used for reference\" (reference pictures) or is held for future output (reordered or"
            },
            {
                "line_number": 53,
                "text": "delayed pictures) or is held as reference for inter-view prediction (inter-view only reference components). When a coded"
            },
            {
                "line_number": 54,
                "text": "video sequence conforming to one or more of the profiles specified in Annex I is decoded by applying the decoding process"
            },
            {
                "line_number": 55,
                "text": "specified in Annex I, each of the frame buffers of the texture DPB may contain: a decoded depth frame view component,"
            },
            {
                "line_number": 56,
                "text": "a decoded complementary texture field view component pair, or a single (non-paired) decoded texture field view"
            },
            {
                "line_number": 57,
                "text": "component that is marked as \"used for reference\" (reference pictures) or is held for future output (reordered or delayed"
            },
            {
                "line_number": 58,
                "text": "pictures) or is held as reference for inter-view prediction (inter-view only reference components). When a coded video"
            },
            {
                "line_number": 59,
                "text": "sequence conforming to one or more of the profiles specified in Annex I is decoded by applying the decoding process"
            },
            {
                "line_number": 60,
                "text": "specified in Annex I, each of the frame buffers of the depth DPB may contain a decoded depth frame view component, a"
            },
            {
                "line_number": 61,
                "text": "decoded complementary depth field view component pair, or a single (non-paired) decoded depth field view component"
            },
            {
                "line_number": 62,
                "text": "Rec. ITU-T H.264 (06/2019) 315"
            }
        ]
    },
    {
        "page_number": 338,
        "lines": [
            {
                "line_number": 1,
                "text": "that is marked as \"used for reference\" (reference pictures) or is held for future output (reordered or delayed pictures) or is"
            },
            {
                "line_number": 2,
                "text": "held as reference for inter-view prediction (inter-view only reference components)."
            },
            {
                "line_number": 3,
                "text": "Prior to initialization, the DPB is empty (the DPB fullness is set to zero). The following steps specified in this clause all"
            },
            {
                "line_number": 4,
                "text": "happen instantaneously at t( n ) and in the order listed. When the decoding process specified in Annex H or Annex I is"
            },
            {
                "line_number": 5,
                "text": "r"
            },
            {
                "line_number": 6,
                "text": "applied, the view components of the current primary coded picture are processed by applying the ordered steps to each"
            },
            {
                "line_number": 7,
                "text": "view component in increasing order of the associated view order index VOIdx. During the invocation of the process for a"
            },
            {
                "line_number": 8,
                "text": "particular texture view, only the texture view components of the particular view are considered. During the invocation of"
            },
            {
                "line_number": 9,
                "text": "the process for a particular depth view, only the depth view components of the particular view are considered. For each"
            },
            {
                "line_number": 10,
                "text": "view component of the current primary coded picture, the corresponding depth view component with the same view order"
            },
            {
                "line_number": 11,
                "text": "index VOIdx, if present, is processed after the texture view component."
            },
            {
                "line_number": 12,
                "text": "1. The process of decoding gaps in frame_num and storing \"non-existing\" frames as specified in clause C.2.1 is"
            },
            {
                "line_number": 13,
                "text": "invoked."
            },
            {
                "line_number": 14,
                "text": "2. The picture decoding and output process as specified in clause C.2.2 is invoked."
            },
            {
                "line_number": 15,
                "text": "3. The process of removing pictures from the DPB before possible insertion of the current picture as specified in"
            },
            {
                "line_number": 16,
                "text": "clause C.2.3 is invoked."
            },
            {
                "line_number": 17,
                "text": "4. The process of marking and storing the current decoded picture as specified in clause C.2.4 is invoked."
            },
            {
                "line_number": 18,
                "text": "NOTE – When the decoding process specified in Annex G is applied, the DPB is only operated for decoded pictures and"
            },
            {
                "line_number": 19,
                "text": "reference base pictures associated with decoded pictures. The DPB is not operated for layer pictures with dependency_id less"
            },
            {
                "line_number": 20,
                "text": "than DependencyIdMax (and associated reference base pictures). All decoded pictures and associated reference base pictures are"
            },
            {
                "line_number": 21,
                "text": "decoded pictures and associated reference base pictures for dependency_id equal to DependencyIdMax, which represent the"
            },
            {
                "line_number": 22,
                "text": "results of the decoding process specified in clause G.8."
            },
            {
                "line_number": 23,
                "text": "C.2.1 Decoding of gaps in frame_num and storage of \"non-existing\" frames"
            },
            {
                "line_number": 24,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 25,
                "text": "view with view order index VOIdx, with \"picture\" being replaced by \"view component\", \"frame\" being replaced by \"frame"
            },
            {
                "line_number": 26,
                "text": "view component\", and \"field\" being replaced by \"field view component\". During the invocation of the process for a"
            },
            {
                "line_number": 27,
                "text": "particular view, only view components of the particular view are considered and view components of other views are not"
            },
            {
                "line_number": 28,
                "text": "marked as \"unused for reference\" or removed from the DPB. When the decoding process specified in Annex I is applied,"
            },
            {
                "line_number": 29,
                "text": "the process specified in this clause for Annex H is invoked for particular texture view or depth view with view order index"
            },
            {
                "line_number": 30,
                "text": "VOIdx, with each \"view component\" being replaced by \"texture view component\" or \"depth view component\", \"frame"
            },
            {
                "line_number": 31,
                "text": "view component\" being replaced by \"texture frame view component\" or \"depth frame view component\", and \"field view"
            },
            {
                "line_number": 32,
                "text": "component\" being replaced by \"texture field view component\". During the invocation of the process for a particular texture"
            },
            {
                "line_number": 33,
                "text": "view, only the texture view components of the particular view are considered and during the invocation of the process for"
            },
            {
                "line_number": 34,
                "text": "a particular depth view, only the depth view components of the particular view are considered and view components of"
            },
            {
                "line_number": 35,
                "text": "other views are not marked as \"unused for reference\" or removed from the DPB."
            },
            {
                "line_number": 36,
                "text": "The DPB fullness represents the total number of non-empty frame buffers. When the decoding process specified in"
            },
            {
                "line_number": 37,
                "text": "Annex H is applied; this includes frame buffers that contain view components of other views. When the decoding process"
            },
            {
                "line_number": 38,
                "text": "specified in Annex I is applied, this includes frame buffers that contain texture or depth view components of other views."
            },
            {
                "line_number": 39,
                "text": "When applicable, gaps in frame_num are detected by the decoding process and the generated frames are marked and"
            },
            {
                "line_number": 40,
                "text": "inserted into the DPB as specified below."
            },
            {
                "line_number": 41,
                "text": "Gaps in frame_num are detected by the decoding process and the generated frames are marked as specified in"
            },
            {
                "line_number": 42,
                "text": "clauses 8.2.5.2 and G.8.2.5."
            },
            {
                "line_number": 43,
                "text": "After the marking of each generated frame, each picture m marked by the \"sliding window\" process as \"unused for"
            },
            {
                "line_number": 44,
                "text": "reference\" is removed from the DPB when it is also marked as \"non-existing\" or its DPB output time is less than or equal"
            },
            {
                "line_number": 45,
                "text": "to the CPB removal time of the current picture n; i.e., t o,dpb ( m ) <= t r ( n ), or it has OutputFlag equal to 0. When a frame or"
            },
            {
                "line_number": 46,
                "text": "the last field in a frame buffer is removed from the DPB, the DPB fullness is decremented by one. The \"non-existing\""
            },
            {
                "line_number": 47,
                "text": "generated frame is inserted into the DPB and the DPB fullness is incremented by one."
            },
            {
                "line_number": 48,
                "text": "C.2.2 Picture decoding and output"
            },
            {
                "line_number": 49,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 50,
                "text": "view with view order index VOIdx."
            },
            {
                "line_number": 51,
                "text": "When the decoding process specified in Annex I is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 52,
                "text": "texture view or depth view with view order index VOIdx."
            },
            {
                "line_number": 53,
                "text": "The decoding of the current picture or view component (when applying the decoding process specified in Annex H or"
            },
            {
                "line_number": 54,
                "text": "Annex I) and the derivation of the DPB output time (if applicable) is specified as follows:"
            },
            {
                "line_number": 55,
                "text": "– If the decoding process specified in clause 8 or Annex G is applied, the following applies:"
            },
            {
                "line_number": 56,
                "text": "316 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 339,
        "lines": [
            {
                "line_number": 1,
                "text": "– The current primary coded picture n is decoded."
            },
            {
                "line_number": 2,
                "text": "– When picture n has OutputFlag equal to 1, its DPB output time t ( n ) is derived by"
            },
            {
                "line_number": 3,
                "text": "o,dpb"
            },
            {
                "line_number": 4,
                "text": "t ( n ) = t( n ) + t * dpb_output_delay( n ) (C-12)"
            },
            {
                "line_number": 5,
                "text": "o,dpb r c"
            },
            {
                "line_number": 6,
                "text": "where dpb_output_delay( n ) is the value of dpb_output_delay specified in the picture timing SEI message"
            },
            {
                "line_number": 7,
                "text": "associated with access unit n."
            },
            {
                "line_number": 8,
                "text": "– Otherwise (the decoding process specified in Annex H or Annex I is applied), the following applies:"
            },
            {
                "line_number": 9,
                "text": "– The view component with view order index VOIdx of the current primary coded picture n is decoded."
            },
            {
                "line_number": 10,
                "text": "– When VOIdx is equal to VOIdxMin and any of the view components of picture n has OutputFlag equal to 1, the"
            },
            {
                "line_number": 11,
                "text": "DPB output time t ( n ) for picture n is derived by Equation C-12, where dpb_output_delay( n ) is the value"
            },
            {
                "line_number": 12,
                "text": "o,dpb"
            },
            {
                "line_number": 13,
                "text": "of dpb_output_delay specified in the picture timing SEI message associated with access unit n."
            },
            {
                "line_number": 14,
                "text": "The output of the current picture or view component (when applying the decoding process specified in Annex H) is"
            },
            {
                "line_number": 15,
                "text": "specified as follows:"
            },
            {
                "line_number": 16,
                "text": "– If OutputFlag is equal to 1 and t ( n ) = t( n ), the current picture or view component is output."
            },
            {
                "line_number": 17,
                "text": "o,dpb r"
            },
            {
                "line_number": 18,
                "text": "NOTE 1 – When the current picture or view component has nal_ref_idc greater than 0 (when using the decoding process"
            },
            {
                "line_number": 19,
                "text": "specified in Annex G, nal_ref_idc is the syntax element of the target layer representation), it will be stored in the DPB."
            },
            {
                "line_number": 20,
                "text": "– Otherwise, if OutputFlag is equal to 0, the current picture or view component is not output, but it may be stored in the"
            },
            {
                "line_number": 21,
                "text": "DPB as specified in clause C.2.4."
            },
            {
                "line_number": 22,
                "text": "– Otherwise (OutputFlag is equal to 1 and t ( n ) > t( n ) ), the current picture or view component is output later and"
            },
            {
                "line_number": 23,
                "text": "o,dpb r"
            },
            {
                "line_number": 24,
                "text": "will be stored in the DPB (as specified in clause C.2.4) and is output at time t ( n ) unless indicated not to be output"
            },
            {
                "line_number": 25,
                "text": "o,dpb"
            },
            {
                "line_number": 26,
                "text": "by the decoding or inference of no_output_of_prior_pics_flag equal to 1 at a time that precedes t ( n )."
            },
            {
                "line_number": 27,
                "text": "o,dpb"
            },
            {
                "line_number": 28,
                "text": "NOTE 2 – When the coded video sequence conforms to a profile specified in Annex H and the decoding process specified in"
            },
            {
                "line_number": 29,
                "text": "Annex H is used, the view components of all the target output views of a picture are output at the same time instant and in"
            },
            {
                "line_number": 30,
                "text": "increasing order of the view order index VOIdx."
            },
            {
                "line_number": 31,
                "text": "NOTE 3 – When the coded video sequence conforms to a profile specified in Annex I and the decoding process specified in"
            },
            {
                "line_number": 32,
                "text": "Annex I is used, the view components of all the target output views of a picture are output at the same time instant and in"
            },
            {
                "line_number": 33,
                "text": "increasing order of the view order index VOIdx. A depth view component, if present, follows the texture view component"
            },
            {
                "line_number": 34,
                "text": "within the same view component."
            },
            {
                "line_number": 35,
                "text": "When output, the picture or view component shall be cropped, using the cropping rectangle specified in the active sequence"
            },
            {
                "line_number": 36,
                "text": "parameter set for the picture or view component."
            },
            {
                "line_number": 37,
                "text": "When the decoding process specified in clause 8 or Annex G is applied, the current picture n is a picture that is output and"
            },
            {
                "line_number": 38,
                "text": "is not the last picture of the bitstream that is output, the value of t ( n ) is derived by"
            },
            {
                "line_number": 39,
                "text": "o,dpb"
            },
            {
                "line_number": 40,
                "text": "t ( n ) = t ( n ) − t ( n ) (C-13)"
            },
            {
                "line_number": 41,
                "text": "o,dpb o,dpb n o,dpb"
            },
            {
                "line_number": 42,
                "text": "where n indicates the picture that follows after picture n in output order and has OutputFlag equal to 1."
            },
            {
                "line_number": 43,
                "text": "n"
            },
            {
                "line_number": 44,
                "text": "When the decoding process specified in Annex H or Annex I is applied, the current picture n is a picture that contains at"
            },
            {
                "line_number": 45,
                "text": "least one view component that is output and the current picture is not the last picture of the bitstream that contains at least"
            },
            {
                "line_number": 46,
                "text": "one view component that is output and VOIdx is equal to VOIdxMin, the value of t ( n ) is derived by Equation C-13,"
            },
            {
                "line_number": 47,
                "text": "o,dpb"
            },
            {
                "line_number": 48,
                "text": "where n indicates the picture that follows after picture n in output order and contains at least one any view component"
            },
            {
                "line_number": 49,
                "text": "n"
            },
            {
                "line_number": 50,
                "text": "with OutputFlag equal to 1."
            },
            {
                "line_number": 51,
                "text": "The decoded picture or view component is temporarily stored (not in the DPB)."
            },
            {
                "line_number": 52,
                "text": "C.2.3 Removal of pictures from the DPB before possible insertion of the current picture"
            },
            {
                "line_number": 53,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 54,
                "text": "view with view order index VOIdx, with \"picture\" being replaced by \"view component\", \"frame\" being replaced by \"frame"
            },
            {
                "line_number": 55,
                "text": "view component\", and \"field\" being replaced by \"field view component\"."
            },
            {
                "line_number": 56,
                "text": "When the decoding process specified in Annex I is applied, the process specified in this clause for Annex I is invoked for"
            },
            {
                "line_number": 57,
                "text": "particular texture view and depth view with view order index VOIdx, with each \"view component\" being replaced by"
            },
            {
                "line_number": 58,
                "text": "\"texture view component\" or \"depth view component\", \"frame view component\" being replaced by \"texture frame view"
            },
            {
                "line_number": 59,
                "text": "component\" or \"depth frame view component\", and \"field view component\" being replaced by \"texture field view"
            },
            {
                "line_number": 60,
                "text": "component\". During the invocation of the process for a particular texture view, only the texture view components of the"
            },
            {
                "line_number": 61,
                "text": "particular view are considered and during the invocation of the process for a particular depth view, only the depth view"
            },
            {
                "line_number": 62,
                "text": "components of the particular view are considered."
            },
            {
                "line_number": 63,
                "text": "Rec. ITU-T H.264 (06/2019) 317"
            }
        ]
    },
    {
        "page_number": 340,
        "lines": [
            {
                "line_number": 1,
                "text": "When the decoding process specified in Annex H or Annex I is applied, the following process is specified for removing"
            },
            {
                "line_number": 2,
                "text": "inter-view only reference components of the current access unit from the DPB. By this process, view components of the"
            },
            {
                "line_number": 3,
                "text": "current view with view order index VOIdx are not removed from the DPB, but inter-view only reference components of"
            },
            {
                "line_number": 4,
                "text": "other views may be removed. The removal of inter-view only reference components is specified as follows:"
            },
            {
                "line_number": 5,
                "text": "– If the view order index VOIdx of the current view is equal to VOIdxMax, all inter-view only reference components"
            },
            {
                "line_number": 6,
                "text": "m for which any of the following conditions are true are removed from the DPB:"
            },
            {
                "line_number": 7,
                "text": "– OutputFlag is equal to 0,"
            },
            {
                "line_number": 8,
                "text": "– The DPB output time t ( m ) of the picture containing the view component m is less than or equal to the CPB"
            },
            {
                "line_number": 9,
                "text": "o,dpb"
            },
            {
                "line_number": 10,
                "text": "removal time t( n ) of the current picture."
            },
            {
                "line_number": 11,
                "text": "r"
            },
            {
                "line_number": 12,
                "text": "– Otherwise (the view order index VOIdx of the current view is less than VOIdxMax), all inter-view only reference"
            },
            {
                "line_number": 13,
                "text": "components m for which both of the following conditions are true are removed from the DPB:"
            },
            {
                "line_number": 14,
                "text": "– OutputFlag is equal to 0 or the DPB output time t ( m ) of the picture containing the view component m is"
            },
            {
                "line_number": 15,
                "text": "o,dpb"
            },
            {
                "line_number": 16,
                "text": "less than or equal to the CPB removal time t( n ) of the current picture,"
            },
            {
                "line_number": 17,
                "text": "r"
            },
            {
                "line_number": 18,
                "text": "– One of the following conditions is true:"
            },
            {
                "line_number": 19,
                "text": "– The current view component is a view component of an anchor picture and the view_id of the inter-view"
            },
            {
                "line_number": 20,
                "text": "only reference component m is not equal to any value of anchor_ref_lX[ k ][ j ], with X being equal to 0"
            },
            {
                "line_number": 21,
                "text": "or 1, k being any integer value greater than the view order index VOIdx of the current view, and j being any"
            },
            {
                "line_number": 22,
                "text": "integer value in the range of 0 to Max( 0, num_anchor_refs_lX[ k ] − 1 ), inclusive,"
            },
            {
                "line_number": 23,
                "text": "– The current view component is not a view component of an anchor picture and the view_id of the inter-view"
            },
            {
                "line_number": 24,
                "text": "only reference component m is not equal to any value of non_anchor_ref_lX[ k ][ j ], with X being equal"
            },
            {
                "line_number": 25,
                "text": "to 0 or 1, k being any integer value greater than the view order index VOIdx of the current view, and j being"
            },
            {
                "line_number": 26,
                "text": "any integer value in the range of 0 to Max( 0, num_non_anchor_refs_lX[ k ] − 1 ), inclusive."
            },
            {
                "line_number": 27,
                "text": "When the decoding process specified in Annex H is applied, for the following processes specified in this clause, only view"
            },
            {
                "line_number": 28,
                "text": "components of the particular view for which this clause is invoked are considered, and view components of other views"
            },
            {
                "line_number": 29,
                "text": "are not marked as \"unused for reference\" or removed from the DPB. When the decoding process specified in Annex I is"
            },
            {
                "line_number": 30,
                "text": "applied, for the following processes specified for Annex I in this clause, during the invocation of the process for a particular"
            },
            {
                "line_number": 31,
                "text": "texture view, only texture view components of the particular texture view are considered and during the invocation of the"
            },
            {
                "line_number": 32,
                "text": "process for a particular depth view, only depth view components of the particular depth view are considered, and view"
            },
            {
                "line_number": 33,
                "text": "components of other views are not marked as \"unused for reference\" or removed from the DPB."
            },
            {
                "line_number": 34,
                "text": "The DPB fullness represents the total number of non-empty frame buffers. When the decoding process specified in"
            },
            {
                "line_number": 35,
                "text": "Annex H is applied, this includes frame buffers that contain texture view components of other views. When the decoding"
            },
            {
                "line_number": 36,
                "text": "process specified in Annex I is applied, this includes frame buffers that contain texture or depth view components of other"
            },
            {
                "line_number": 37,
                "text": "views."
            },
            {
                "line_number": 38,
                "text": "The removal of pictures from the DPB before possible insertion of the current picture proceeds as follows:"
            },
            {
                "line_number": 39,
                "text": "– If the decoded picture is an IDR picture the following applies:"
            },
            {
                "line_number": 40,
                "text": "1. All reference pictures in the DPB are marked as \"unused for reference\" as specified in clause 8.2.5.1 when a coded"
            },
            {
                "line_number": 41,
                "text": "video sequence conforming to one or more of the profiles specified in Annex A is decoded by applying the"
            },
            {
                "line_number": 42,
                "text": "decoding process specified in clauses 2 to 9, or as specified in clause G.8.2.4 when a coded video sequence"
            },
            {
                "line_number": 43,
                "text": "conforming to one or more of the profiles specified in Annex G is decoded by applying the decoding process"
            },
            {
                "line_number": 44,
                "text": "specified in Annex G, or as specified in clause H.8.3 when a coded video sequence conforming to one or more of"
            },
            {
                "line_number": 45,
                "text": "the profiles specified in Annex H is decoded by applying the decoding process specified in Annex H, or as"
            },
            {
                "line_number": 46,
                "text": "specified in clause I.8.3 when a coded video sequence conforming to one or more of the profiles specified in"
            },
            {
                "line_number": 47,
                "text": "Annex I is decoded by applying the decoding process specified in Annex I."
            },
            {
                "line_number": 48,
                "text": "2. When the IDR picture is not the first IDR picture decoded and the value of PicWidthInMbs or FrameHeightInMbs"
            },
            {
                "line_number": 49,
                "text": "or max_dec_frame_buffering derived from the active sequence parameter set is different from the value of"
            },
            {
                "line_number": 50,
                "text": "PicWidthInMbs or FrameHeightInMbs or max_dec_frame_buffering derived from the sequence parameter set"
            },
            {
                "line_number": 51,
                "text": "that was active for the preceding picture, respectively, no_output_of_prior_pics_flag is inferred to be equal to 1"
            },
            {
                "line_number": 52,
                "text": "by the HRD, regardless of the actual value of no_output_of_prior_pics_flag."
            },
            {
                "line_number": 53,
                "text": "NOTE – Decoder implementations should try to handle frame or DPB size changes more gracefully than the HRD in"
            },
            {
                "line_number": 54,
                "text": "regard to changes in PicWidthInMbs or FrameHeightInMbs."
            },
            {
                "line_number": 55,
                "text": "3. When no_output_of_prior_pics_flag is equal to 1 or is inferred to be equal to 1, all frame buffers in the DPB are"
            },
            {
                "line_number": 56,
                "text": "emptied without output of the pictures they contain, and DPB fullness is set to 0."
            },
            {
                "line_number": 57,
                "text": "– Otherwise (the decoded picture is not an IDR picture), the following applies:"
            },
            {
                "line_number": 58,
                "text": "318 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 341,
        "lines": [
            {
                "line_number": 1,
                "text": "– If the slice header of the current picture includes memory_management_control_operation equal to 5, all"
            },
            {
                "line_number": 2,
                "text": "reference pictures in the DPB are marked as \"unused for reference\"."
            },
            {
                "line_number": 3,
                "text": "– Otherwise (the slice header of the current picture does not include memory_management_control_operation"
            },
            {
                "line_number": 4,
                "text": "equal to 5), the decoded reference picture marking process specified in clause 8.2.5 is invoked when a coded"
            },
            {
                "line_number": 5,
                "text": "video sequence conforming to one or more of the profiles specified in Annex A is decoded by applying the"
            },
            {
                "line_number": 6,
                "text": "decoding process specified in clauses 2 to 9, or the decoded reference picture marking process specified in"
            },
            {
                "line_number": 7,
                "text": "clause G.8.2.4 is invoked when a coded video sequence conforming to one or more of the profiles specified in"
            },
            {
                "line_number": 8,
                "text": "Annex G is decoded by applying the decoding process specified in Annex G, or the decoded reference picture"
            },
            {
                "line_number": 9,
                "text": "marking process specified in clause H.8.3 is invoked when a coded video sequence conforming to one or more"
            },
            {
                "line_number": 10,
                "text": "of the profiles specified in Annex H is decoded by applying the decoding process specified in Annex H, or the"
            },
            {
                "line_number": 11,
                "text": "decoded reference picture marking process specified in clause I.8.3 is invoked when a coded video sequence"
            },
            {
                "line_number": 12,
                "text": "conforming to one or more of the profiles specified in Annex I is decoded by applying the decoding process"
            },
            {
                "line_number": 13,
                "text": "specified in Annex I."
            },
            {
                "line_number": 14,
                "text": "All pictures m in the DPB, for which all of the following conditions are true, are removed from the DPB:"
            },
            {
                "line_number": 15,
                "text": "– picture m is marked as \"unused for reference\" or picture m is a non-reference picture. When a picture is a reference"
            },
            {
                "line_number": 16,
                "text": "frame, it is considered to be marked as \"unused for reference\" only when both of its fields have been marked as"
            },
            {
                "line_number": 17,
                "text": "\"unused for reference\","
            },
            {
                "line_number": 18,
                "text": "– picture m is marked as \"non-existing\" or it has OutputFlag equal to 0 or its DPB output time t ( m ) is less than or"
            },
            {
                "line_number": 19,
                "text": "o,dpb"
            },
            {
                "line_number": 20,
                "text": "equal to the CPB removal time t( n ) of the current picture n."
            },
            {
                "line_number": 21,
                "text": "r"
            },
            {
                "line_number": 22,
                "text": "When a frame or the last field in a frame buffer is removed from the DPB, the DPB fullness is decremented by one."
            },
            {
                "line_number": 23,
                "text": "C.2.4 Current decoded picture marking and storage"
            },
            {
                "line_number": 24,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 25,
                "text": "view with view order index VOIdx, with \"picture\" being replaced by \"view component\", \"frame\" being replaced by \"frame"
            },
            {
                "line_number": 26,
                "text": "view component\", and \"field\" being replaced by \"field view component\". When the decoding process specified in Annex I"
            },
            {
                "line_number": 27,
                "text": "is applied, the process specified in this clause for Annex I is invoked for particular texture view and depth view with view"
            },
            {
                "line_number": 28,
                "text": "order index VOIdx, with each \"view component\" being replaced by \"texture view component\" and \"depth view"
            },
            {
                "line_number": 29,
                "text": "component\", \"frame view component\" being replaced by \"texture frame view component\" and \"depth frame view"
            },
            {
                "line_number": 30,
                "text": "component\", and \"field view component\" being replaced by \"texture field view component\". In clause C.2.4.2, the DPB"
            },
            {
                "line_number": 31,
                "text": "output time t (n) and the CPB removal time t(n) of a view component are the DPB output time and the CPB removal"
            },
            {
                "line_number": 32,
                "text": "o,dpb r"
            },
            {
                "line_number": 33,
                "text": "time of the picture n containing the view component."
            },
            {
                "line_number": 34,
                "text": "The marking and storage of the current decoded picture is specified as follows:"
            },
            {
                "line_number": 35,
                "text": "– If the current picture is a reference picture, the marking and storage process for reference pictures as specified in"
            },
            {
                "line_number": 36,
                "text": "clause C.2.4.1 is invoked."
            },
            {
                "line_number": 37,
                "text": "– Otherwise (the current picture is a non-reference picture), the storage process for non-reference pictures as specified"
            },
            {
                "line_number": 38,
                "text": "in clause C.2.4.2 is invoked."
            },
            {
                "line_number": 39,
                "text": "C.2.4.1 Marking and storage of a reference picture into the DPB"
            },
            {
                "line_number": 40,
                "text": "The current picture is stored in the DPB as follows:"
            },
            {
                "line_number": 41,
                "text": "– If the current decoded picture is a second field (in decoding order) of a complementary reference field pair, and the"
            },
            {
                "line_number": 42,
                "text": "first field of the pair is still in the DPB, the current decoded picture is stored in the same frame buffer as the first field"
            },
            {
                "line_number": 43,
                "text": "of the pair."
            },
            {
                "line_number": 44,
                "text": "– Otherwise, the current decoded picture is stored in an empty frame buffer, and the DPB fullness is incremented by"
            },
            {
                "line_number": 45,
                "text": "one."
            },
            {
                "line_number": 46,
                "text": "When the coded video sequence conforms to one or more of the profiles specified in Annex G and the decoding process"
            },
            {
                "line_number": 47,
                "text": "specified in Annex G is applied and the current picture has store_ref_base_pic_flag equal to 1 (i.e., the current picture is"
            },
            {
                "line_number": 48,
                "text": "associated with a reference base picture), the associated reference base picture is stored in the DPB as follows:"
            },
            {
                "line_number": 49,
                "text": "– If the reference base picture is a second field (in decoding order) of a complementary reference base field pair, and"
            },
            {
                "line_number": 50,
                "text": "the first field of the pair is still in the DPB, the reference base picture is stored in the same frame buffer as the first"
            },
            {
                "line_number": 51,
                "text": "field of the pair."
            },
            {
                "line_number": 52,
                "text": "– Otherwise, the reference base picture is stored in an empty frame buffer, and the DPB fullness is incremented by one."
            },
            {
                "line_number": 53,
                "text": "C.2.4.2 Storage of a non-reference picture into the DPB"
            },
            {
                "line_number": 54,
                "text": "The variable storePicFlag is derived as follows:"
            },
            {
                "line_number": 55,
                "text": "Rec. ITU-T H.264 (06/2019) 319"
            }
        ]
    },
    {
        "page_number": 342,
        "lines": [
            {
                "line_number": 1,
                "text": "– If any of the following conditions are true, storePicFlag is set equal to 1:"
            },
            {
                "line_number": 2,
                "text": "– the current picture n has OutputFlag equal to 1 and t (n) > t(n),"
            },
            {
                "line_number": 3,
                "text": "o,dpb r"
            },
            {
                "line_number": 4,
                "text": "– the decoding process specified in Annex H or Annex I is used and the current view component has a view order"
            },
            {
                "line_number": 5,
                "text": "index VOIdx less than VOIdxMax and inter_view_flag equal to 1."
            },
            {
                "line_number": 6,
                "text": "– Otherwise, storePicFlag is set equal to 0."
            },
            {
                "line_number": 7,
                "text": "When storePicFlag is equal to 1, the current picture is stored in the DPB as follows:"
            },
            {
                "line_number": 8,
                "text": "– If the current decoded picture is a second field (in decoding order) of a complementary non-reference field pair, and"
            },
            {
                "line_number": 9,
                "text": "the first field of the pair is still in the DPB, the current decoded picture is stored in the same frame buffer as the first"
            },
            {
                "line_number": 10,
                "text": "field of the pair."
            },
            {
                "line_number": 11,
                "text": "– Otherwise, the current decoded picture is stored in an empty frame buffer, and the DPB fullness is incremented by"
            },
            {
                "line_number": 12,
                "text": "one."
            },
            {
                "line_number": 13,
                "text": "C.3 Bitstream conformance"
            },
            {
                "line_number": 14,
                "text": "A bitstream of coded data conforming to this Recommendation | International Standard fulfils the following requirements."
            },
            {
                "line_number": 15,
                "text": "The bitstream is constructed according to the syntax, semantics, and constraints specified in this"
            },
            {
                "line_number": 16,
                "text": "Recommendation | International Standard outside of this annex."
            },
            {
                "line_number": 17,
                "text": "The bitstream is tested by the HRD as specified below:"
            },
            {
                "line_number": 18,
                "text": "For Type I bitstreams, the number of tests carried out is equal to cpb_cnt_minus1 + 1 where cpb_cnt_minus1 is either the"
            },
            {
                "line_number": 19,
                "text": "syntax element of hrd_parameters( ) following the vcl_hrd_parameters_present_flag or is determined by the application"
            },
            {
                "line_number": 20,
                "text": "by other means not specified in this Recommendation | International Standard. One test is carried out for each bit rate and"
            },
            {
                "line_number": 21,
                "text": "CPB size combination specified by hrd_parameters( ) following the vcl_hrd_parameters_present_flag. Each of these tests"
            },
            {
                "line_number": 22,
                "text": "is conducted at the Type I conformance point shown in Figure C-1."
            },
            {
                "line_number": 23,
                "text": "For Type II bitstreams there are two sets of tests. The number of tests of the first set is equal to cpb_cnt_minus1 + 1 where"
            },
            {
                "line_number": 24,
                "text": "cpb_cnt_minus1 is either the syntax element of hrd_parameters( ) following the vcl_hrd_parameters_present_flag or is"
            },
            {
                "line_number": 25,
                "text": "determined by the application by other means not specified in this Recommendation | International Standard. One test is"
            },
            {
                "line_number": 26,
                "text": "carried out for each bit rate and CPB size combination. Each of these tests is conducted at the Type I conformance point"
            },
            {
                "line_number": 27,
                "text": "shown in Figure C-1. For these tests, only VCL and filler data NAL units are counted for the input bit rate and CPB storage."
            },
            {
                "line_number": 28,
                "text": "The number of tests of the second set, for Type II bitstreams, is equal to cpb_cnt_minus1 + 1 where cpb_cnt_minus1 is"
            },
            {
                "line_number": 29,
                "text": "either the syntax element of hrd_parameters( ) following the nal_hrd_parameters_present_flag or is determined by the"
            },
            {
                "line_number": 30,
                "text": "application by other means not specified in this Recommendation | International Standard. One test is carried out for each"
            },
            {
                "line_number": 31,
                "text": "bit rate and CPB size combination specified by hrd_parameters( ) following the nal_hrd_parameters_present_flag. Each of"
            },
            {
                "line_number": 32,
                "text": "these tests is conducted at the Type II conformance point shown in Figure C-1. For these tests, all NAL units (of a Type II"
            },
            {
                "line_number": 33,
                "text": "NAL unit stream) or all bytes (of a byte stream) are counted for the input bit rate and CPB storage."
            },
            {
                "line_number": 34,
                "text": "NOTE 1 – NAL HRD parameters established by a value of SchedSelIdx for the Type II conformance point shown in Figure C-1 are"
            },
            {
                "line_number": 35,
                "text": "sufficient to also establish VCL HRD conformance for the Type I conformance point shown in Figure C-1 for the same values of"
            },
            {
                "line_number": 36,
                "text": "initial_cpb_removal_delay[ SchedSelIdx ], BitRate[ SchedSelIdx ], and CpbSize[ SchedSelIdx ] for the VBR case"
            },
            {
                "line_number": 37,
                "text": "(cbr_flag[ SchedSelIdx ] equal to 0). This is because the data flow into the Type I conformance point is a subset of the data flow"
            },
            {
                "line_number": 38,
                "text": "into the Type II conformance point and because, for the VBR case, the CPB is allowed to become empty and stay empty until the"
            },
            {
                "line_number": 39,
                "text": "time a next picture is scheduled to begin to arrive. For example, when a coded video sequence conforming to one or more of the"
            },
            {
                "line_number": 40,
                "text": "profiles specified in Annex A is decoded by applying the decoding process specified in clauses 2 to 9, when NAL HRD parameters"
            },
            {
                "line_number": 41,
                "text": "are provided for the Type II conformance point that not only fall within the bounds set for NAL HRD parameters for profile"
            },
            {
                "line_number": 42,
                "text": "conformance in item j) of clause A.3.1 or item h) of clause A.3.3 (depending on the profile in use) but also fall within the bounds"
            },
            {
                "line_number": 43,
                "text": "set for VCL HRD parameters for profile conformance in item i) of clause A.3.1 or item g) of clause A.3.3 (depending on the profile"
            },
            {
                "line_number": 44,
                "text": "in use), conformance of the VCL HRD for the Type I conformance point is also assured to fall within the bounds of item i) of"
            },
            {
                "line_number": 45,
                "text": "clause A.3.1."
            },
            {
                "line_number": 46,
                "text": "For conforming bitstreams, all of the following conditions shall be fulfilled for each of the tests:"
            },
            {
                "line_number": 47,
                "text": "1. For each access unit n, with n>0, associated with a buffering period SEI message, with t ( n ) specified by"
            },
            {
                "line_number": 48,
                "text": "g,90"
            },
            {
                "line_number": 49,
                "text": "t ( n ) = 90000 * ( t ( n ) − t ( n − 1 ) ) (C-14)"
            },
            {
                "line_number": 50,
                "text": "g,90 r,n af"
            },
            {
                "line_number": 51,
                "text": "the value of initial_cpb_removal_delay[ SchedSelIdx ] shall be constrained as follows:"
            },
            {
                "line_number": 52,
                "text": "– If cbr_flag[ SchedSelIdx ] is equal to 0,"
            },
            {
                "line_number": 53,
                "text": "initial_cpb_removal_delay[ SchedSelIdx ] <= Ceil( t ( n ) ) (C-15)"
            },
            {
                "line_number": 54,
                "text": "g,90"
            },
            {
                "line_number": 55,
                "text": "320 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 343,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise (cbr_flag[ SchedSelIdx ] is equal to 1),"
            },
            {
                "line_number": 2,
                "text": "Floor( t ( n ) ) <= initial_cpb_removal_delay[ SchedSelIdx ] <= Ceil( t ( n ) ) (C-16)"
            },
            {
                "line_number": 3,
                "text": "g,90 g,90"
            },
            {
                "line_number": 4,
                "text": "NOTE 2 – The exact number of bits in the CPB at the removal time of each picture may depend on which buffering"
            },
            {
                "line_number": 5,
                "text": "period SEI message is selected to initialize the HRD. Encoders must take this into account to ensure that all specified"
            },
            {
                "line_number": 6,
                "text": "constraints must be obeyed regardless of which buffering period SEI message is selected to initialize the HRD, as the"
            },
            {
                "line_number": 7,
                "text": "HRD may be initialized at any one of the buffering period SEI messages."
            },
            {
                "line_number": 8,
                "text": "2. A CPB overflow is specified as the condition in which the total number of bits in the CPB is larger than the CPB"
            },
            {
                "line_number": 9,
                "text": "size. The CPB shall never overflow."
            },
            {
                "line_number": 10,
                "text": "3. A CPB underflow is specified as the condition in which t ( n ) is less than t ( n ). When low_delay_hrd_flag is"
            },
            {
                "line_number": 11,
                "text": "r,n af"
            },
            {
                "line_number": 12,
                "text": "equal to 0, the CPB shall never underflow."
            },
            {
                "line_number": 13,
                "text": "4. The nominal removal times of pictures from the CPB (starting from the second picture in decoding order), shall"
            },
            {
                "line_number": 14,
                "text": "satisfy the constraints on t ( n ) and t( n ) expressed in clauses A.3.1 through A.3.3 for the profile and level"
            },
            {
                "line_number": 15,
                "text": "r,n r"
            },
            {
                "line_number": 16,
                "text": "specified in the bitstream when a coded video sequence conforming to one or more of the profiles specified in"
            },
            {
                "line_number": 17,
                "text": "Annex A is decoded by applying the decoding process specified in clauses 2 to 9, and they shall satisfy the"
            },
            {
                "line_number": 18,
                "text": "constraints on t ( n ) and t( n ) expressed in clauses G.10.2.1 and G.10.2.2 for profile and level specified in the"
            },
            {
                "line_number": 19,
                "text": "r,n r"
            },
            {
                "line_number": 20,
                "text": "bitstream when a coded video sequence conforming to one or more of the profiles specified in Annex G is decoded"
            },
            {
                "line_number": 21,
                "text": "by applying the decoding process specified in Annex G, and they shall satisfy the constraints on t ( n ) and t( n )"
            },
            {
                "line_number": 22,
                "text": "r,n r"
            },
            {
                "line_number": 23,
                "text": "expressed in clause H.10.2 for the profile and level specified in the bitstream when a coded video sequence"
            },
            {
                "line_number": 24,
                "text": "conforming to one or more of the profiles specified in Annex H is decoded by applying the decoding process"
            },
            {
                "line_number": 25,
                "text": "specified in Annex H, and they shall satisfy the constraints on t ( n ) and t( n ) expressed in clause I.10.2 for the"
            },
            {
                "line_number": 26,
                "text": "r,n r"
            },
            {
                "line_number": 27,
                "text": "profile and level specified in the bitstream when a coded video sequence conforming to one or more of the profiles"
            },
            {
                "line_number": 28,
                "text": "specified in Annex I is decoded by applying the decoding process specified in Annex I."
            },
            {
                "line_number": 29,
                "text": "5. Immediately after any decoded picture is added to the DPB, the fullness of the DPB shall be less than or equal to"
            },
            {
                "line_number": 30,
                "text": "the DPB size as constrained by Annexes A, D, and E and clauses G.10, G.13, G.14, H.10, H.13, H.14, and I.14 for"
            },
            {
                "line_number": 31,
                "text": "the profile and level specified in the bitstream."
            },
            {
                "line_number": 32,
                "text": "6. All reference pictures shall be present in the DPB when needed for prediction. Each picture shall be present in the"
            },
            {
                "line_number": 33,
                "text": "DPB at its DPB output time unless it is not stored in the DPB at all, or is removed from the DPB before its output"
            },
            {
                "line_number": 34,
                "text": "time by one of the processes specified in clause C.2."
            },
            {
                "line_number": 35,
                "text": "7. The value of  ( n ) as given by Equation C-13, which is the difference between the output time of a picture and"
            },
            {
                "line_number": 36,
                "text": "to,dpb"
            },
            {
                "line_number": 37,
                "text": "that of the first picture following it in output order and having OutputFlag equal to 1, shall satisfy the constraint"
            },
            {
                "line_number": 38,
                "text": "expressed in clause A.3.1 for the profile and level specified in the bitstream when a coded video sequence"
            },
            {
                "line_number": 39,
                "text": "conforming to one or more of the profiles specified in Annex A is decoded by applying the decoding process"
            },
            {
                "line_number": 40,
                "text": "specified in clauses 2 to 9, and it shall satisfy the constraint expressed in clause G.10.2.1 for profile and level"
            },
            {
                "line_number": 41,
                "text": "specified in the bitstream when a coded video sequence conforming to one or more of the profiles specified in"
            },
            {
                "line_number": 42,
                "text": "Annex G is decoded by applying the decoding process specified in Annex G, and it shall satisfy the constraints"
            },
            {
                "line_number": 43,
                "text": "expressed in clause H.10.2 for the profile and level specified in the bitstream when a coded video sequence"
            },
            {
                "line_number": 44,
                "text": "conforming to one or more of the profiles specified in Annex H is decoded by applying the decoding process"
            },
            {
                "line_number": 45,
                "text": "specified in Annex H, and it shall satisfy the constraints expressed in clause I.10.2 for the profile and level specified"
            },
            {
                "line_number": 46,
                "text": "in the bitstream when a coded video sequence conforming to one or more of the profiles specified in Annex I is"
            },
            {
                "line_number": 47,
                "text": "decoded by applying the decoding process specified in Annex I."
            },
            {
                "line_number": 48,
                "text": "C.4 Decoder conformance"
            },
            {
                "line_number": 49,
                "text": "A decoder conforming to this Recommendation | International Standard fulfils the following requirements."
            },
            {
                "line_number": 50,
                "text": "A decoder claiming conformance to a specific profile and level shall be able to decode successfully all conforming"
            },
            {
                "line_number": 51,
                "text": "bitstreams specified for decoder conformance in clause C.3, provided that all sequence parameter sets and picture"
            },
            {
                "line_number": 52,
                "text": "parameter sets referred to in the VCL NAL units, and appropriate buffering period and picture timing SEI messages are"
            },
            {
                "line_number": 53,
                "text": "conveyed to the decoder, in a timely manner, either in the bitstream (by non-VCL NAL units), or by external means not"
            },
            {
                "line_number": 54,
                "text": "specified by this Recommendation | International Standard."
            },
            {
                "line_number": 55,
                "text": "There are two types of conformance that can be claimed by a decoder: output timing conformance and output order"
            },
            {
                "line_number": 56,
                "text": "conformance."
            },
            {
                "line_number": 57,
                "text": "To check conformance of a decoder, test bitstreams conforming to the claimed profile and level, as specified in clause C.3"
            },
            {
                "line_number": 58,
                "text": "are delivered by a hypothetical stream scheduler (HSS) both to the HRD and to the decoder under test (DUT). All pictures"
            },
            {
                "line_number": 59,
                "text": "output by the HRD shall also be output by the DUT and, for each picture output by the HRD, the values of all samples that"
            },
            {
                "line_number": 60,
                "text": "are output by the DUT for the corresponding picture shall be equal to the values of the samples output by the HRD."
            },
            {
                "line_number": 61,
                "text": "Rec. ITU-T H.264 (06/2019) 321"
            }
        ]
    },
    {
        "page_number": 344,
        "lines": [
            {
                "line_number": 1,
                "text": "For output timing decoder conformance, the HSS operates as described above, with delivery schedules selected only from"
            },
            {
                "line_number": 2,
                "text": "the subset of values of SchedSelIdx for which the bit rate and CPB size are restricted as specified in Annex A, Annex G,"
            },
            {
                "line_number": 3,
                "text": "Annex H, and Annex I for the specified profile and level, or with \"interpolated\" delivery schedules as specified below for"
            },
            {
                "line_number": 4,
                "text": "which the bit rate and CPB size are restricted as specified in Annex A, Annex G, Annex H, and Annex I. The same delivery"
            },
            {
                "line_number": 5,
                "text": "schedule is used for both the HRD and DUT."
            },
            {
                "line_number": 6,
                "text": "When the HRD parameters and the buffering period SEI messages are present with cpb_cnt_minus1 greater than 0, the"
            },
            {
                "line_number": 7,
                "text": "decoder shall be capable of decoding the bitstream as delivered from the HSS operating using an \"interpolated\" delivery"
            },
            {
                "line_number": 8,
                "text": "schedule specified as having peak bit rate r, CPB size c( r ), and initial CPB removal delay ( f( r ) ÷ r ) as follows:"
            },
            {
                "line_number": 9,
                "text": " = ( r − BitRate[ SchedSelIdx − 1 ] ) ÷ ( BitRate[ SchedSelIdx ] − BitRate[ SchedSelIdx − 1 ] ), (C-17)"
            },
            {
                "line_number": 10,
                "text": "c( r ) =  * CpbSize[ SchedSelIdx ] + (1 −  * CpbSize[ SchedSelIdx−1 ], (C-18)"
            },
            {
                "line_number": 11,
                "text": "f( r ) = initial_cpb_removal_delay[ SchedSelIdx ] * BitRate[ SchedSelIdx ] +"
            },
            {
                "line_number": 12,
                "text": "( 1 −  initial_cpb_removal_delay[ SchedSelIdx − 1 ] * BitRate[ SchedSelIdx − 1 ] (C-19)"
            },
            {
                "line_number": 13,
                "text": "for any SchedSelIdx > 0 and r such that BitRate[ SchedSelIdx − 1 ] <= r <= BitRate[ SchedSelIdx ] such that r and c( r )"
            },
            {
                "line_number": 14,
                "text": "are within the limits as specified in Annex A, Annex G, Annex H, and Annex I for the maximum bit rate and buffer size"
            },
            {
                "line_number": 15,
                "text": "for the specified profile and level."
            },
            {
                "line_number": 16,
                "text": "NOTE 1 – initial_cpb_removal_delay[ SchedSelIdx ] can be different from one buffering period to another and have to be"
            },
            {
                "line_number": 17,
                "text": "re-calculated."
            },
            {
                "line_number": 18,
                "text": "For output timing decoder conformance, an HRD as described above is used and the timing (relative to the delivery time"
            },
            {
                "line_number": 19,
                "text": "of the first bit) of picture output is the same for both HRD and the DUT up to a fixed delay."
            },
            {
                "line_number": 20,
                "text": "For output order decoder conformance, the HSS delivers the bitstream to the DUT \"by demand\" from the DUT, meaning"
            },
            {
                "line_number": 21,
                "text": "that the HSS delivers bits (in decoding order) only when the DUT requires more bits to proceed with its processing."
            },
            {
                "line_number": 22,
                "text": "NOTE 2 – This means that for this test, the coded picture buffer of the DUT could be as small as the size of the largest access unit."
            },
            {
                "line_number": 23,
                "text": "A modified HRD as described below is used, and the HSS delivers the bitstream to the HRD by one of the schedules"
            },
            {
                "line_number": 24,
                "text": "specified in the bitstream such that the bit rate and CPB size are restricted as specified in Annex A, Annex G, Annex H,"
            },
            {
                "line_number": 25,
                "text": "and Annex I. The order of pictures output shall be the same for both HRD and the DUT."
            },
            {
                "line_number": 26,
                "text": "For output order decoder conformance, the HRD CPB size is equal to CpbSize[ SchedSelIdx ] for the selected schedule"
            },
            {
                "line_number": 27,
                "text": "and the DPB size is equal to MaxDpbFrames. Removal time from the CPB for the HRD is equal to final bit arrival time"
            },
            {
                "line_number": 28,
                "text": "and decoding is immediate. The operation of the DPB of this HRD is specified in clause C.4.1."
            },
            {
                "line_number": 29,
                "text": "C.4.1 Operation of the output order DPB"
            },
            {
                "line_number": 30,
                "text": "The decoded picture buffer contains frame buffers. When a coded video sequence conforming to one or more of the profiles"
            },
            {
                "line_number": 31,
                "text": "specified in Annex A is decoded by applying the decoding process specified in clauses 2 to 9, each of the frame buffers"
            },
            {
                "line_number": 32,
                "text": "may contain a decoded frame, a decoded complementary field pair or a single (non-paired) decoded field that is marked as"
            },
            {
                "line_number": 33,
                "text": "\"used for reference\" or is held for future output (reordered pictures). When a coded video sequence conforming to one or"
            },
            {
                "line_number": 34,
                "text": "more of the profiles specified in Annex G is decoded by applying the decoding process specified in Annex G, each frame"
            },
            {
                "line_number": 35,
                "text": "buffer may contain a decoded frame, a decoded complementary field pair, a single (non-paired) decoded field, a decoded"
            },
            {
                "line_number": 36,
                "text": "reference base frame, a decoded reference base complementary field pair or a single (non-paired) decoded reference base"
            },
            {
                "line_number": 37,
                "text": "field that is marked as \"used for reference\" (reference pictures) or is held for future output (reordered or delayed pictures)."
            },
            {
                "line_number": 38,
                "text": "When a coded video sequence conforming to one or more of the profiles specified in Annex H is decoded by applying the"
            },
            {
                "line_number": 39,
                "text": "decoding process specified in Annex H, each of the frame buffers may contain a decoded frame view component, a decoded"
            },
            {
                "line_number": 40,
                "text": "complementary field view component pair, or a single (non-paired) decoded field view component that is marked as \"used"
            },
            {
                "line_number": 41,
                "text": "for reference\" (reference pictures) or is held for future output (reordered or delayed pictures) or is held for inter-view"
            },
            {
                "line_number": 42,
                "text": "prediction (inter-view only reference components). When a coded video sequence conforming to one or more of the profiles"
            },
            {
                "line_number": 43,
                "text": "specified in Annex I is decoded by applying the decoding process specified in Annex I, each of the frame buffers of the"
            },
            {
                "line_number": 44,
                "text": "texture DPB may contain a decoded texture frame view component, a decoded complementary texture field view"
            },
            {
                "line_number": 45,
                "text": "component pair, a single (non-paired) decoded texture field view component that is marked as \"used for reference\""
            },
            {
                "line_number": 46,
                "text": "(reference pictures) or is held for future output (reordered or delayed pictures) or is held for inter-view prediction (inter-"
            },
            {
                "line_number": 47,
                "text": "view only reference components). When a coded video sequence conforming to one or more of the profiles specified in"
            },
            {
                "line_number": 48,
                "text": "Annex I is decoded by applying the decoding process specified in Annex I, each of the frame buffers of the depth DPB"
            },
            {
                "line_number": 49,
                "text": "may contain a decoded depth frame view component, a decoded complementary depth field view component pair, or a"
            },
            {
                "line_number": 50,
                "text": "single (non-paired) decoded depth field view component that is marked as \"used for reference\" (reference pictures) or is"
            },
            {
                "line_number": 51,
                "text": "held for future output (reordered or delayed pictures) or is held as reference for inter-view prediction (inter-view only"
            },
            {
                "line_number": 52,
                "text": "reference components)."
            },
            {
                "line_number": 53,
                "text": "At HRD initialization, the DPB fullness, measured in non-empty frame buffers, is set equal to 0. The following steps all"
            },
            {
                "line_number": 54,
                "text": "happen instantaneously when an access unit is removed from the CPB, and in the order listed. When the decoding process"
            },
            {
                "line_number": 55,
                "text": "322 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 345,
        "lines": [
            {
                "line_number": 1,
                "text": "specified in Annex H or Annex I is applied, the view components of the current primary coded picture are processed by"
            },
            {
                "line_number": 2,
                "text": "applying the ordered steps to each view component in increasing order of the associated view order index VOIdx. The"
            },
            {
                "line_number": 3,
                "text": "invocation of the process for a depth view component, if present, follows the invocation of the process for the texture view"
            },
            {
                "line_number": 4,
                "text": "component within the same view component."
            },
            {
                "line_number": 5,
                "text": "1. The process of decoding gaps in frame_num and storing \"non-existing\" frames as specified in clause C.4.2 is"
            },
            {
                "line_number": 6,
                "text": "invoked."
            },
            {
                "line_number": 7,
                "text": "2. The picture decoding and output process as specified in clause C.4.3 is invoked."
            },
            {
                "line_number": 8,
                "text": "3. The process of removing pictures from the DPB before possible insertion of the current picture as specified in"
            },
            {
                "line_number": 9,
                "text": "clause C.4.4 is invoked."
            },
            {
                "line_number": 10,
                "text": "4. The process of marking and storing the current decoded picture as specified in clause C.4.5 is invoked."
            },
            {
                "line_number": 11,
                "text": "NOTE – When the decoding process specified in Annex G is applied, the DPB is only operated for decoded pictures and"
            },
            {
                "line_number": 12,
                "text": "reference base pictures associated with decoded pictures. The DPB is not operated for layer pictures with dependency_id less"
            },
            {
                "line_number": 13,
                "text": "than DependencyIdMax (and associated reference base pictures). All decoded pictures and associated reference base pictures are"
            },
            {
                "line_number": 14,
                "text": "decoded pictures and associated reference base pictures for dependency_id equal to DependencyIdMax, which represent the"
            },
            {
                "line_number": 15,
                "text": "results of the decoding process specified in clause G.8."
            },
            {
                "line_number": 16,
                "text": "C.4.2 Decoding of gaps in frame_num and storage of \"non-existing\" pictures"
            },
            {
                "line_number": 17,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 18,
                "text": "view with view order index VOIdx, with \"picture\" being replaced by \"view component\", \"frame\" being replaced by \"frame"
            },
            {
                "line_number": 19,
                "text": "view component\", and \"field\" being replaced by \"field view component\". During the invocation of the process for a"
            },
            {
                "line_number": 20,
                "text": "particular view, only view components of the particular view are considered and view components of other views are not"
            },
            {
                "line_number": 21,
                "text": "marked as \"unused for reference\" or removed from the DPB."
            },
            {
                "line_number": 22,
                "text": "When the decoding process specified in Annex I is applied, the process specified in this clause for Annex H is invoked for"
            },
            {
                "line_number": 23,
                "text": "particular texture view and depth view with view order index VOIdx, with each \"view component\" being replaced by"
            },
            {
                "line_number": 24,
                "text": "\"texture view component\" or \"depth view component\", \"frame view component\" being replaced by \"texture frame view"
            },
            {
                "line_number": 25,
                "text": "component\" or \"depth frame view component\", and \"field view component\" being replaced by \"texture field view"
            },
            {
                "line_number": 26,
                "text": "component\". During the invocation of the process for a particular texture view, only the texture view components of the"
            },
            {
                "line_number": 27,
                "text": "particular view are considered and during the invocation of the process for a particular depth view, only the depth view"
            },
            {
                "line_number": 28,
                "text": "components of the particular view are considered and view components of other views are not marked as \"unused for"
            },
            {
                "line_number": 29,
                "text": "reference\" or removed from the DPB."
            },
            {
                "line_number": 30,
                "text": "The DPB fullness represents the total number of non-empty frame buffers. When the decoding process specified in"
            },
            {
                "line_number": 31,
                "text": "Annex H is applied, this includes frame buffers that contain view components of other views. When the decoding process"
            },
            {
                "line_number": 32,
                "text": "specified in Annex I is applied, this includes frame buffers that contain texture or depth view components of other views."
            },
            {
                "line_number": 33,
                "text": "When applicable, gaps in frame_num are detected by the decoding process and the necessary number of \"non-existing\""
            },
            {
                "line_number": 34,
                "text": "frames are inferred in the order specified by the generation of values of UnusedShortTermFrameNum in Equation 7-24"
            },
            {
                "line_number": 35,
                "text": "and are marked as specified in clauses 8.2.5.2 and G.8.2.5. Frame buffers containing a frame or a complementary field pair"
            },
            {
                "line_number": 36,
                "text": "or a non-paired field which are marked as \"not needed for output\" and \"unused for reference\" are emptied (without output),"
            },
            {
                "line_number": 37,
                "text": "and the DPB fullness is decremented by the number of frame buffers emptied. Each \"non-existing\" frame is stored in the"
            },
            {
                "line_number": 38,
                "text": "DPB as follows:"
            },
            {
                "line_number": 39,
                "text": "– When there is no empty frame buffer (i.e., DPB fullness is equal to DPB size), the \"bumping\" process specified in"
            },
            {
                "line_number": 40,
                "text": "clause C.4.5.3 is invoked repeatedly until there is an empty frame buffer in which to store the \"non-existing\" frame."
            },
            {
                "line_number": 41,
                "text": "– The \"non-existing\" frame is stored in an empty frame buffer and is marked as \"not needed for output\", and the DPB"
            },
            {
                "line_number": 42,
                "text": "fullness is incremented by one."
            },
            {
                "line_number": 43,
                "text": "C.4.3 Picture decoding"
            },
            {
                "line_number": 44,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 45,
                "text": "view with view order index VOIdx."
            },
            {
                "line_number": 46,
                "text": "When the decoding process specified in Annex I is applied, the process specified for Annex H in this clause is invoked for"
            },
            {
                "line_number": 47,
                "text": "a particular texture view and depth view with view order index VOIdx."
            },
            {
                "line_number": 48,
                "text": "The decoding of the current picture or view component (when applying the decoding process specified in Annex H or"
            },
            {
                "line_number": 49,
                "text": "Annex I) is specified as follows:"
            },
            {
                "line_number": 50,
                "text": "– If the decoding process specified in clause 8 or Annex G is applied, the current primary coded picture n is decoded"
            },
            {
                "line_number": 51,
                "text": "and is temporarily stored (not in the DPB)."
            },
            {
                "line_number": 52,
                "text": "– Otherwise (the decoding process specified in Annex H or Annex I is applied), the view component with view order"
            },
            {
                "line_number": 53,
                "text": "index VOIdx of the current primary coded picture n is decoded and is temporarily stored (not in the DPB)."
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 323"
            }
        ]
    },
    {
        "page_number": 346,
        "lines": [
            {
                "line_number": 1,
                "text": "C.4.4 Removal of pictures from the DPB before possible insertion of the current picture"
            },
            {
                "line_number": 2,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 3,
                "text": "view with view order index VOIdx, with \"picture\" being replaced by \"view component\", \"frame\" being replaced by \"frame"
            },
            {
                "line_number": 4,
                "text": "view component\", and \"field\" being replaced by \"field view component\"."
            },
            {
                "line_number": 5,
                "text": "When the decoding process specified in Annex I is applied, the process specified in this clause for Annex H is invoked for"
            },
            {
                "line_number": 6,
                "text": "particular texture view and depth view with view order index VOIdx, with each \"view component\" being replaced by"
            },
            {
                "line_number": 7,
                "text": "\"texture view component\" or \"depth view component\", \"frame view component\" being replaced by \"texture frame view"
            },
            {
                "line_number": 8,
                "text": "component\" or \"depth frame view component\", and \"field view component\" being replaced by \"texture field view"
            },
            {
                "line_number": 9,
                "text": "component\". During the invocation of the process for a particular texture view, only the texture view components of the"
            },
            {
                "line_number": 10,
                "text": "particular view are considered and during the invocation of the process for a particular depth view, only the depth view"
            },
            {
                "line_number": 11,
                "text": "components of the particular view are considered."
            },
            {
                "line_number": 12,
                "text": "When the decoding process specified in Annex H or Annex I is applied, the following process is specified for emptying"
            },
            {
                "line_number": 13,
                "text": "frame buffers containing inter-view only reference components of the current access unit. By this process, frame buffers"
            },
            {
                "line_number": 14,
                "text": "that contain view components of the current view with view order index VOIdx are not emptied, but frame buffers that"
            },
            {
                "line_number": 15,
                "text": "contain inter-view only reference components of other views may be emptied. The process is specified as follows:"
            },
            {
                "line_number": 16,
                "text": "– If the view order index VOIdx of the current view is equal to VOIdxMax, all frame buffers containing a frame or a"
            },
            {
                "line_number": 17,
                "text": "complementary field pair or a non-paired field which are marked as \"not needed for output\" and \"unused for reference\""
            },
            {
                "line_number": 18,
                "text": "are emptied (without output), and the DPB fullness is decremented by the number of frame buffers emptied."
            },
            {
                "line_number": 19,
                "text": "NOTE 1 – At this stage of the process, all frame buffers that contain a frame or a complementary field pair or a"
            },
            {
                "line_number": 20,
                "text": "non-paired field marked as \"not needed for output\" and \"unused for reference\" are frame buffers that contain an inter-"
            },
            {
                "line_number": 21,
                "text": "view only reference component (of the current access unit and a view with view order index less than VOIdx) with"
            },
            {
                "line_number": 22,
                "text": "OutputFlag equal to 0."
            },
            {
                "line_number": 23,
                "text": "– Otherwise (the view order index VOIdx of the current view is less than VOIdxMax), frame buffers containing a frame"
            },
            {
                "line_number": 24,
                "text": "or a complementary field pair or a non-paired field for which both of the following conditions are true are emptied"
            },
            {
                "line_number": 25,
                "text": "(without output), and the DPB fullness is decremented by the number of frame buffers emptied:"
            },
            {
                "line_number": 26,
                "text": "– the frame or complementary field pair or non-paired field is marked as \"not needed for output\" and \"unused for"
            },
            {
                "line_number": 27,
                "text": "reference\","
            },
            {
                "line_number": 28,
                "text": "NOTE 2 – At this stage of the process, all frame buffers that contain a frame or a complementary field pair or a"
            },
            {
                "line_number": 29,
                "text": "non-paired field marked as \"not needed for output\" and \"unused for reference\" are frame buffers that contain an inter-"
            },
            {
                "line_number": 30,
                "text": "view only reference component (of the current access unit and a view with view order index less than VOIdx) with"
            },
            {
                "line_number": 31,
                "text": "OutputFlag equal to 0."
            },
            {
                "line_number": 32,
                "text": "– one of the following conditions is true:"
            },
            {
                "line_number": 33,
                "text": "– the current view component is a view component of an anchor picture and the view_id of the frame or"
            },
            {
                "line_number": 34,
                "text": "complementary field pair or non-paired field is not equal to any value of anchor_ref_lX[ k ][ j ], with X"
            },
            {
                "line_number": 35,
                "text": "being equal to 0 or 1, k being any integer value greater than the view order index VOIdx of the current view,"
            },
            {
                "line_number": 36,
                "text": "and j being any integer value in the range of 0 to Max( 0, num_anchor_refs_lX[ k ] − 1 ), inclusive,"
            },
            {
                "line_number": 37,
                "text": "– the current view component is not a view component of an anchor picture and the view_id of the frame or"
            },
            {
                "line_number": 38,
                "text": "complementary field pair or non-paired field is not equal to any value of non_anchor_ref_lX[ k ][ j ], with"
            },
            {
                "line_number": 39,
                "text": "X being equal to 0 or 1, k being any integer value greater than the view order index VOIdx of the current"
            },
            {
                "line_number": 40,
                "text": "view, and j being any integer value in the range of 0 to Max( 0, num_non_anchor_refs_lX[ k ] − 1 ),"
            },
            {
                "line_number": 41,
                "text": "inclusive."
            },
            {
                "line_number": 42,
                "text": "When the decoding process specified in Annex H or Annex I is applied, for the following processes specified in this clause,"
            },
            {
                "line_number": 43,
                "text": "only view components of the particular view for which this clause is invoked are considered, and frame buffers containing"
            },
            {
                "line_number": 44,
                "text": "view components of other views are not emptied. The DPB fullness represents the total number of non-empty frame buffers,"
            },
            {
                "line_number": 45,
                "text": "including frame buffers that contain view components of other views."
            },
            {
                "line_number": 46,
                "text": "The removal of pictures from the DPB before possible insertion of the current picture proceeds as follows:"
            },
            {
                "line_number": 47,
                "text": "– If the decoded picture is an IDR picture the following applies:"
            },
            {
                "line_number": 48,
                "text": "1. All reference pictures in the DPB are marked as \"unused for reference\" as specified in clause 8.2.5 when a"
            },
            {
                "line_number": 49,
                "text": "coded video sequence conforming to one or more of the profiles specified in Annex A is decoded by applying"
            },
            {
                "line_number": 50,
                "text": "the decoding process specified in clauses 2 to 9, or as specified in clause G.8.2.4 when a coded video sequence"
            },
            {
                "line_number": 51,
                "text": "conforming to one or more of the profiles specified in Annex G is decoded by applying the decoding process"
            },
            {
                "line_number": 52,
                "text": "specified in Annex G, or as specified in clause H.8.3 when a coded video sequence conforming to one or more"
            },
            {
                "line_number": 53,
                "text": "of the profiles specified in Annex H is decoded by applying the decoding process specified in Annex H, or as"
            },
            {
                "line_number": 54,
                "text": "specified in clause I.8.3 when a coded video sequence conforming to one or more of the profiles specified in"
            },
            {
                "line_number": 55,
                "text": "Annex I is decoded by applying the decoding process specified in Annex I."
            },
            {
                "line_number": 56,
                "text": "324 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 347,
        "lines": [
            {
                "line_number": 1,
                "text": "2. When the IDR picture is not the first IDR picture decoded and the value of PicWidthInMbs or"
            },
            {
                "line_number": 2,
                "text": "FrameHeightInMbs or max_dec_frame_buffering derived from the active sequence parameter set is different"
            },
            {
                "line_number": 3,
                "text": "from the value of PicWidthInMbs or FrameHeightInMbs or max_dec_frame_buffering derived from the"
            },
            {
                "line_number": 4,
                "text": "sequence parameter set that was active for the preceding picture, respectively, no_output_of_prior_pics_flag is"
            },
            {
                "line_number": 5,
                "text": "inferred to be equal to 1 by the HRD, regardless of the actual value of no_output_of_prior_pics_flag."
            },
            {
                "line_number": 6,
                "text": "NOTE 3 – Decoder implementations should try to handle changes in the value of PicWidthInMbs or FrameHeightInMbs"
            },
            {
                "line_number": 7,
                "text": "or max_dec_frame_buffering more gracefully than the HRD."
            },
            {
                "line_number": 8,
                "text": "3. When no_output_of_prior_pics_flag is equal to 1 or is inferred to be equal to 1, all frame buffers in the DPB"
            },
            {
                "line_number": 9,
                "text": "are emptied without output of the pictures they contain, and DPB fullness is set to 0."
            },
            {
                "line_number": 10,
                "text": "– Otherwise (the decoded picture is not an IDR picture), the decoded reference picture marking process is invoked as"
            },
            {
                "line_number": 11,
                "text": "specified in clause 8.2.5 when a coded video sequence conforming to one or more of the profiles specified in Annex A"
            },
            {
                "line_number": 12,
                "text": "is decoded by applying the decoding process specified in clauses 2 to 9, or as specified in clause G.8.2.4 when a coded"
            },
            {
                "line_number": 13,
                "text": "video sequence conforming to one or more of the profiles specified in Annex G is decoded by applying the decoding"
            },
            {
                "line_number": 14,
                "text": "process specified in Annex G, or as specified in clause H.8.3 when a coded video sequence conforming to one or"
            },
            {
                "line_number": 15,
                "text": "more of the profiles specified in Annex H is decoded by applying the decoding process specified in Annex H, or as"
            },
            {
                "line_number": 16,
                "text": "specified in clause I.8.3 when a coded video sequence conforming to one or more of the profiles specified in Annex I"
            },
            {
                "line_number": 17,
                "text": "is decoded by applying the decoding process specified in Annex I. Frame buffers containing a frame or a"
            },
            {
                "line_number": 18,
                "text": "complementary field pair or a non-paired field which are marked as \"not needed for output\" and \"unused for reference\""
            },
            {
                "line_number": 19,
                "text": "are emptied (without output), and the DPB fullness is decremented by the number of frame buffers emptied."
            },
            {
                "line_number": 20,
                "text": "When the current picture has a memory_management_control_operation equal to 5 or is an IDR picture for which"
            },
            {
                "line_number": 21,
                "text": "no_output_of_prior_pics_flag is not equal to 1 and is not inferred to be equal to 1, the following two steps are performed."
            },
            {
                "line_number": 22,
                "text": "1. Frame buffers containing a frame or a complementary field pair or a non-paired field which are marked as \"not"
            },
            {
                "line_number": 23,
                "text": "needed for output\" and \"unused for reference\" are emptied (without output), and the DPB fullness is decremented"
            },
            {
                "line_number": 24,
                "text": "by the number of frame buffers emptied."
            },
            {
                "line_number": 25,
                "text": "2. All non-empty frame buffers in the DPB are emptied by repeatedly invoking the \"bumping\" process specified in"
            },
            {
                "line_number": 26,
                "text": "clause C.4.5.3, and the DPB fullness is set to 0."
            },
            {
                "line_number": 27,
                "text": "C.4.5 Current decoded picture marking and storage"
            },
            {
                "line_number": 28,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 29,
                "text": "view with view order index VOIdx, with \"picture\" being replaced by \"view component\", \"frame\" being replaced by \"frame"
            },
            {
                "line_number": 30,
                "text": "view component\", and \"field\" being replaced by \"field view component\". During the invocation of the process for a"
            },
            {
                "line_number": 31,
                "text": "particular view, only view components of the particular view are considered and frame buffers containing view components"
            },
            {
                "line_number": 32,
                "text": "of other views are not emptied."
            },
            {
                "line_number": 33,
                "text": "When the decoding process specified in Annex I is applied, the process specified in this clause for Annex H is invoked for"
            },
            {
                "line_number": 34,
                "text": "particular texture view and depth view with view order index VOIdx, with each \"view component\" being replaced by"
            },
            {
                "line_number": 35,
                "text": "\"texture view component\" or \"depth view component\", \"frame view component\" being replaced by \"texture frame view"
            },
            {
                "line_number": 36,
                "text": "component\" or \"depth frame view component\", and \"field view component\" being replaced by \"texture field view"
            },
            {
                "line_number": 37,
                "text": "component\". During the invocation of the process for a particular texture view, only the texture view components of the"
            },
            {
                "line_number": 38,
                "text": "particular view are considered and during the invocation of the process for a particular depth view, only the depth view"
            },
            {
                "line_number": 39,
                "text": "components of the particular view are considered and frame buffers containing view components of other views are not"
            },
            {
                "line_number": 40,
                "text": "emptied."
            },
            {
                "line_number": 41,
                "text": "The DPB fullness represents the total number of non-empty frame buffers. When the decoding process specified in"
            },
            {
                "line_number": 42,
                "text": "Annex H is applied, this includes frame buffers that contain view components of other views. When the decoding process"
            },
            {
                "line_number": 43,
                "text": "specified in Annex I is applied, this includes frame buffers that contain texture or depth view components of other views."
            },
            {
                "line_number": 44,
                "text": "The marking and storage of the current decoded picture is specified as follows:"
            },
            {
                "line_number": 45,
                "text": "– If the current picture is a reference picture, the storage and marking process for decoded reference pictures as specified"
            },
            {
                "line_number": 46,
                "text": "in clause C.4.5.1 is invoked."
            },
            {
                "line_number": 47,
                "text": "– Otherwise (the current picture is a non-reference picture), the storage and marking process for decoded non-reference"
            },
            {
                "line_number": 48,
                "text": "pictures as specified in clause C.4.5.2 is invoked."
            },
            {
                "line_number": 49,
                "text": "C.4.5.1 Storage and marking of a reference decoded picture into the DPB"
            },
            {
                "line_number": 50,
                "text": "The current picture is stored in the DPB as follows:"
            },
            {
                "line_number": 51,
                "text": "– If the current decoded picture is the second field (in decoding order) of a complementary reference field pair, and the"
            },
            {
                "line_number": 52,
                "text": "first field of the pair is still in the DPB, the current picture is stored in the same frame buffer as the first field of the"
            },
            {
                "line_number": 53,
                "text": "pair and the following applies:"
            },
            {
                "line_number": 54,
                "text": "– If the current decoded picture has OutputFlag equal to 1, it is marked as \"needed for output\"."
            },
            {
                "line_number": 55,
                "text": "Rec. ITU-T H.264 (06/2019) 325"
            }
        ]
    },
    {
        "page_number": 348,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise (the current decoded picture has OutputFlag equal to 0), it is marked as \"not needed for output\"."
            },
            {
                "line_number": 2,
                "text": "– Otherwise, the following operations are performed:"
            },
            {
                "line_number": 3,
                "text": "1. When there is no empty frame buffer (i.e., DPB fullness is equal to DPB size), the \"bumping\" process specified"
            },
            {
                "line_number": 4,
                "text": "in clause C.4.5.3 is invoked repeatedly until there is an empty frame buffer in which to store the current decoded"
            },
            {
                "line_number": 5,
                "text": "picture."
            },
            {
                "line_number": 6,
                "text": "2. The current decoded picture is stored in an empty frame buffer, the DPB fullness is incremented by one, and"
            },
            {
                "line_number": 7,
                "text": "the following applies:"
            },
            {
                "line_number": 8,
                "text": "– If the current decoded picture has OutputFlag equal to 1, it is marked as \"needed for output\"."
            },
            {
                "line_number": 9,
                "text": "– Otherwise (the current decoded picture has OutputFlag equal to 0), it is marked as \"not needed for output\"."
            },
            {
                "line_number": 10,
                "text": "When the coded video sequence conforms to one or more of the profiles specified in Annex G and the decoding process"
            },
            {
                "line_number": 11,
                "text": "specified in Annex G is applied and the current picture has store_ref_base_pic_flag equal to 1 (i.e., the current picture is"
            },
            {
                "line_number": 12,
                "text": "associated with a reference base picture), the associated reference base picture is stored in the DPB as follows:"
            },
            {
                "line_number": 13,
                "text": "– If the reference base picture is a second field (in decoding order) of a complementary reference base field pair, and"
            },
            {
                "line_number": 14,
                "text": "the first field of the pair is still in the DPB, the reference base picture is stored in the same frame buffer as the first"
            },
            {
                "line_number": 15,
                "text": "field of the pair and marked as \"not needed for output\"."
            },
            {
                "line_number": 16,
                "text": "– Otherwise, the following operations are performed:"
            },
            {
                "line_number": 17,
                "text": "1. When there is no empty frame buffer (i.e., DPB fullness is equal to DPB size), the \"bumping\" process"
            },
            {
                "line_number": 18,
                "text": "specified in clause C.4.5.3 is invoked repeatedly until there is an empty frame buffer in which to store the"
            },
            {
                "line_number": 19,
                "text": "reference base picture."
            },
            {
                "line_number": 20,
                "text": "2. The reference base picture is stored in an empty frame buffer and marked as \"not needed for output\" and the"
            },
            {
                "line_number": 21,
                "text": "DPB fullness is incremented by one."
            },
            {
                "line_number": 22,
                "text": "C.4.5.2 Storage and marking of a non-reference decoded picture into the DPB"
            },
            {
                "line_number": 23,
                "text": "The current picture is associated with a variable StoreInterViewOnlyRefFlag, which is derived as follows:"
            },
            {
                "line_number": 24,
                "text": "– If the decoding process specified in Annex H or Annex I is applied, the current view component has a view order"
            },
            {
                "line_number": 25,
                "text": "index VOIdx less than VOIdxMax and inter_view_flag equal to 1, StoreInterViewOnlyRefFlag is set equal to 1."
            },
            {
                "line_number": 26,
                "text": "– Otherwise, StoreInterViewOnlyRefFlag is set equal to 0."
            },
            {
                "line_number": 27,
                "text": "The current picture is stored in the DPB or output as follows:"
            },
            {
                "line_number": 28,
                "text": "– If the current decoded picture is the second field (in decoding order) of a complementary non-reference field pair and"
            },
            {
                "line_number": 29,
                "text": "the first field of the pair is still in the DPB, the current picture is stored in the same frame buffer as the first field of"
            },
            {
                "line_number": 30,
                "text": "the pair and the following applies:"
            },
            {
                "line_number": 31,
                "text": "– If the current decoded picture has OutputFlag equal to 1, it is marked as \"needed for output\"."
            },
            {
                "line_number": 32,
                "text": "– Otherwise (the current decoded picture has OutputFlag equal to 0), it is marked as \"not needed for output\"."
            },
            {
                "line_number": 33,
                "text": "– Otherwise, if the current picture has OutputFlag equal to 0 and StoreInterViewOnlyRefFlag equal to 0, the DPB is"
            },
            {
                "line_number": 34,
                "text": "not modified and the current picture is not output."
            },
            {
                "line_number": 35,
                "text": "– Otherwise, if the current picture has StoreInterViewOnlyRefFlag equal to 1, the following operations are performed:"
            },
            {
                "line_number": 36,
                "text": "1. When there is no empty frame buffer (i.e., DPB fullness is equal to DPB size), the \"bumping\" process specified"
            },
            {
                "line_number": 37,
                "text": "in clause C.4.5.3 is invoked repeatedly until there is an empty frame buffer in which to store the current decoded"
            },
            {
                "line_number": 38,
                "text": "picture."
            },
            {
                "line_number": 39,
                "text": "2. The current decoded picture is stored in an empty frame buffer, the DPB fullness is incremented by one, and"
            },
            {
                "line_number": 40,
                "text": "the following applies:"
            },
            {
                "line_number": 41,
                "text": "– If the current decoded picture has OutputFlag equal to 1, it is marked as \"needed for output\"."
            },
            {
                "line_number": 42,
                "text": "– Otherwise (the current decoded picture has OutputFlag equal to 0), it is marked as \"not needed for output\"."
            },
            {
                "line_number": 43,
                "text": "– Otherwise, the following operations are performed repeatedly until the current decoded picture has been cropped and"
            },
            {
                "line_number": 44,
                "text": "output or has been stored in the DPB:"
            },
            {
                "line_number": 45,
                "text": "– If there is no empty frame buffer (i.e., DPB fullness is equal to DPB size), the following applies:"
            },
            {
                "line_number": 46,
                "text": "– If the current picture does not have a lower value of PicOrderCnt( ) than all pictures in the DPB that are"
            },
            {
                "line_number": 47,
                "text": "marked as \"needed for output\", the \"bumping\" process described in clause C.4.5.3 is performed."
            },
            {
                "line_number": 48,
                "text": "– Otherwise (the current picture has a lower value of PicOrderCnt( ) than all pictures in the DPB that are"
            },
            {
                "line_number": 49,
                "text": "marked as \"needed for output\"), the current picture is cropped, using the cropping rectangle specified in"
            },
            {
                "line_number": 50,
                "text": "the active sequence parameter set for the picture and the cropped picture is output."
            },
            {
                "line_number": 51,
                "text": "326 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 349,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise (there is an empty frame buffer, i.e., DPB fullness is less than DPB size), the current decoded picture"
            },
            {
                "line_number": 2,
                "text": "is stored in an empty frame buffer and is marked as \"needed for output\", and the DPB fullness is incremented"
            },
            {
                "line_number": 3,
                "text": "by one."
            },
            {
                "line_number": 4,
                "text": "C.4.5.3 \"Bumping\" process"
            },
            {
                "line_number": 5,
                "text": "When the decoding process specified in Annex H is applied, the process specified in this clause is invoked for a particular"
            },
            {
                "line_number": 6,
                "text": "view with view order index VOIdx, with \"picture\" being replaced by \"view component\", \"frame\" being replaced by \"frame"
            },
            {
                "line_number": 7,
                "text": "view component\", and \"field\" being replaced by \"field view component\". During the invocation of the process for a"
            },
            {
                "line_number": 8,
                "text": "particular view, only view components of the particular view are considered and frame buffers containing view components"
            },
            {
                "line_number": 9,
                "text": "of other views are not emptied."
            },
            {
                "line_number": 10,
                "text": "When the decoding process specified in Annex I is applied, the process specified in this clause for Annex H is invoked for"
            },
            {
                "line_number": 11,
                "text": "particular texture view and depth view with view order index VOIdx, with each \"view component\" being replaced by"
            },
            {
                "line_number": 12,
                "text": "\"texture view component\" or \"depth view component\", \"frame view component\" being replaced by \"texture frame view"
            },
            {
                "line_number": 13,
                "text": "component\" or \"depth frame view component\", and \"field view component\" being replaced by \"texture field view"
            },
            {
                "line_number": 14,
                "text": "component\". During the invocation of the process for a particular texture view, only the texture view components of the"
            },
            {
                "line_number": 15,
                "text": "particular view are considered while respective depth view components may be cropped and output too During the"
            },
            {
                "line_number": 16,
                "text": "invocation of the process for a particular depth view, only the depth view components of the particular view are considered"
            },
            {
                "line_number": 17,
                "text": "and frame buffers containing view components of other views are not emptied. The DPB fullness represents the total"
            },
            {
                "line_number": 18,
                "text": "number of non-empty frame buffers, including frame buffers that contain view components of other views, for the texture"
            },
            {
                "line_number": 19,
                "text": "DPB or the depth DPB depending on whether the process is invoked for a texture view or a depth view, respectively."
            },
            {
                "line_number": 20,
                "text": "The DPB fullness represents the total number of non-empty frame buffers. When the decoding process specified in"
            },
            {
                "line_number": 21,
                "text": "Annex H is applied, this includes frame buffers that contain view components of other views. When the decoding process"
            },
            {
                "line_number": 22,
                "text": "specified in Annex I is applied, this includes frame buffers that contain texture or depth view components of other views."
            },
            {
                "line_number": 23,
                "text": "The \"bumping\" process is invoked in the following cases."
            },
            {
                "line_number": 24,
                "text": "– There is no empty frame buffer (i.e., DPB fullness is equal to DPB size) and an empty frame buffer is needed for"
            },
            {
                "line_number": 25,
                "text": "storage of an inferred \"non-existing\" frame, as specified in clause C.4.2."
            },
            {
                "line_number": 26,
                "text": "– The current picture is an IDR picture and no_output_of_prior_pics_flag is not equal to 1 and is not inferred to be"
            },
            {
                "line_number": 27,
                "text": "equal to 1, as specified in clause C.4.4."
            },
            {
                "line_number": 28,
                "text": "– The current picture has memory_management_control_operation equal to 5, as specified in clause C.4.4."
            },
            {
                "line_number": 29,
                "text": "– There is no empty frame buffer (i.e., DPB fullness is equal to DPB size) and an empty frame buffer is needed for"
            },
            {
                "line_number": 30,
                "text": "storage of a decoded (non-IDR) reference picture or a reference base picture, as specified in clause C.4.5.1."
            },
            {
                "line_number": 31,
                "text": "– There is no empty frame buffer (i.e., DPB fullness is equal to DPB size) and the current picture is a non-reference"
            },
            {
                "line_number": 32,
                "text": "picture that is not the second field of a complementary non-reference field pair and the current picture has OutputFlag"
            },
            {
                "line_number": 33,
                "text": "equal to 1 and there are pictures in the DPB that are marked as \"needed for output\" that precede the current non-"
            },
            {
                "line_number": 34,
                "text": "reference picture in output order, as specified in clause C.4.5.2, so an empty buffer is needed for storage of the current"
            },
            {
                "line_number": 35,
                "text": "picture."
            },
            {
                "line_number": 36,
                "text": "– There is no empty frame buffer (i.e., DPB fullness is equal to DPB size) and the current picture is a non-reference"
            },
            {
                "line_number": 37,
                "text": "picture that is not the second field of a complementary non-reference field pair and the current picture has"
            },
            {
                "line_number": 38,
                "text": "StoreInterViewOnlyRefFlag equal to 1, as specified in clause C.4.5.2, so an empty buffer is needed for storage of the"
            },
            {
                "line_number": 39,
                "text": "current picture."
            },
            {
                "line_number": 40,
                "text": "The \"bumping\" process consists of the following ordered steps:"
            },
            {
                "line_number": 41,
                "text": "1. The picture or complementary reference field pair that is considered first for output is selected as follows:"
            },
            {
                "line_number": 42,
                "text": "a. The frame buffer is selected that contains the picture having the smallest value of PicOrderCnt( ) of all"
            },
            {
                "line_number": 43,
                "text": "pictures in the DPB marked as \"needed for output\"."
            },
            {
                "line_number": 44,
                "text": "b. Depending on the frame buffer, the following applies:"
            },
            {
                "line_number": 45,
                "text": "– If this frame buffer contains a complementary non-reference field pair with both fields marked as"
            },
            {
                "line_number": 46,
                "text": "\"needed for output\" and both fields have the same PicOrderCnt( ), the first of these two fields in"
            },
            {
                "line_number": 47,
                "text": "decoding order is considered first for output."
            },
            {
                "line_number": 48,
                "text": "– Otherwise, if this frame buffer contains a complementary reference field pair with both fields marked"
            },
            {
                "line_number": 49,
                "text": "as \"needed for output\" and both fields have the same PicOrderCnt( ), the entire complementary reference"
            },
            {
                "line_number": 50,
                "text": "field pair is considered first for output."
            },
            {
                "line_number": 51,
                "text": "NOTE – When the two fields of a complementary reference field pair have the same value of PicOrderCnt( ), this"
            },
            {
                "line_number": 52,
                "text": "\"bumping\" process will output these pictures together, although the two fields have different output times from a"
            },
            {
                "line_number": 53,
                "text": "decoder that satisfies output timing conformance criteria (as specified in clause C.2.2)."
            },
            {
                "line_number": 54,
                "text": "– Otherwise, the picture in this frame buffer that has the smallest value of PicOrderCnt( ) is considered"
            },
            {
                "line_number": 55,
                "text": "first for output."
            },
            {
                "line_number": 56,
                "text": "Rec. ITU-T H.264 (06/2019) 327"
            }
        ]
    },
    {
        "page_number": 350,
        "lines": [
            {
                "line_number": 1,
                "text": "2. Depending on whether a single picture or a complementary reference field pair is considered for output, the"
            },
            {
                "line_number": 2,
                "text": "following applies:"
            },
            {
                "line_number": 3,
                "text": "– If a single picture is considered first for output, this picture is cropped, using the cropping rectangle specified"
            },
            {
                "line_number": 4,
                "text": "in the active sequence parameter set for the picture, the cropped picture is output, and the picture is marked as"
            },
            {
                "line_number": 5,
                "text": "\"not needed for output\"."
            },
            {
                "line_number": 6,
                "text": "– Otherwise (a complementary reference field pair is considered first for output), the two fields of the"
            },
            {
                "line_number": 7,
                "text": "complementary reference field pair are both cropped, using the cropping rectangle specified in the active"
            },
            {
                "line_number": 8,
                "text": "sequence parameter set for the pictures, the two fields of the complementary reference field pair are output"
            },
            {
                "line_number": 9,
                "text": "together, and both fields of the complementary reference field pair are marked as \"not needed for output\"."
            },
            {
                "line_number": 10,
                "text": "3. When there is a single depth view component or a complementary depth view component pair having the same"
            },
            {
                "line_number": 11,
                "text": "values of view_id and PicOrderCnt( ) as the single picture or complementary reference field pair considered for"
            },
            {
                "line_number": 12,
                "text": "output, the single depth view component or complementary depth view component pair are output as in step 2."
            },
            {
                "line_number": 13,
                "text": "4. The frame buffer that included the picture or complementary reference field pair that was cropped and output is"
            },
            {
                "line_number": 14,
                "text": "checked, and when any of the following conditions are true, the frame buffer is emptied and the DPB fullness is"
            },
            {
                "line_number": 15,
                "text": "decremented by 1:"
            },
            {
                "line_number": 16,
                "text": "– The frame buffer contains a non-reference non-paired field."
            },
            {
                "line_number": 17,
                "text": "– The frame buffer contains a non-reference frame."
            },
            {
                "line_number": 18,
                "text": "– The frame buffer contains a complementary non-reference field pair with both fields marked as \"not needed"
            },
            {
                "line_number": 19,
                "text": "for output\"."
            },
            {
                "line_number": 20,
                "text": "– The frame buffer contains a non-paired reference field marked as \"unused for reference\"."
            },
            {
                "line_number": 21,
                "text": "– The frame buffer contains a reference frame with both fields marked as \"unused for reference\"."
            },
            {
                "line_number": 22,
                "text": "– The frame buffer contains a complementary reference field pair with both fields marked as \"unused for"
            },
            {
                "line_number": 23,
                "text": "reference\" and \"not needed for output\"."
            },
            {
                "line_number": 24,
                "text": "328 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 351,
        "lines": [
            {
                "line_number": 1,
                "text": "Annex D"
            },
            {
                "line_number": 2,
                "text": "Supplemental enhancement information"
            },
            {
                "line_number": 3,
                "text": "(This annex forms an integral part of this Recommendation | International Standard.)"
            },
            {
                "line_number": 4,
                "text": "This annex specifies syntax and semantics for SEI message payloads."
            },
            {
                "line_number": 5,
                "text": "SEI messages assist in processes related to decoding, display or other purposes. However, SEI messages are not required"
            },
            {
                "line_number": 6,
                "text": "for constructing the luma or chroma samples by the decoding process. Conforming decoders are not required to process"
            },
            {
                "line_number": 7,
                "text": "this information for output order conformance to this Recommendation | International Standard (see Annex C for the"
            },
            {
                "line_number": 8,
                "text": "specification of conformance). Some SEI message information is required to check bitstream conformance and for output"
            },
            {
                "line_number": 9,
                "text": "timing decoder conformance."
            },
            {
                "line_number": 10,
                "text": "In Annex D, specification for presence of SEI messages are also satisfied when those messages (or some subset of them)"
            },
            {
                "line_number": 11,
                "text": "are conveyed to decoders (or to the HRD) by other means not specified by this Recommendation | International Standard."
            },
            {
                "line_number": 12,
                "text": "When present in the bitstream, SEI messages shall obey the syntax and semantics specified in clauses 7.3.2.3 and 7.4.2.3"
            },
            {
                "line_number": 13,
                "text": "and this annex. When the content of an SEI message is conveyed for the application by some means other than presence"
            },
            {
                "line_number": 14,
                "text": "within the bitstream, the representation of the content of the SEI message is not required to use the same syntax specified"
            },
            {
                "line_number": 15,
                "text": "in this annex. For the purpose of counting bits, only the appropriate bits that are actually present in the bitstream are"
            },
            {
                "line_number": 16,
                "text": "counted."
            },
            {
                "line_number": 17,
                "text": "D.1 SEI payload syntax"
            },
            {
                "line_number": 18,
                "text": "D.1.1 General SEI message syntax"
            },
            {
                "line_number": 19,
                "text": "sei_payload( payloadType, payloadSize ) { C Descriptor"
            },
            {
                "line_number": 20,
                "text": "if( payloadType = = 0 )"
            },
            {
                "line_number": 21,
                "text": "buffering_period( payloadSize ) 5"
            },
            {
                "line_number": 22,
                "text": "else if( payloadType = = 1 )"
            },
            {
                "line_number": 23,
                "text": "pic_timing( payloadSize ) 5"
            },
            {
                "line_number": 24,
                "text": "else if( payloadType = = 2 )"
            },
            {
                "line_number": 25,
                "text": "pan_scan_rect( payloadSize ) 5"
            },
            {
                "line_number": 26,
                "text": "else if( payloadType = = 3 )"
            },
            {
                "line_number": 27,
                "text": "filler_payload( payloadSize ) 5"
            },
            {
                "line_number": 28,
                "text": "else if( payloadType = = 4 )"
            },
            {
                "line_number": 29,
                "text": "user_data_registered_itu_t_t35( payloadSize ) 5"
            },
            {
                "line_number": 30,
                "text": "else if( payloadType = = 5 )"
            },
            {
                "line_number": 31,
                "text": "user_data_unregistered( payloadSize ) 5"
            },
            {
                "line_number": 32,
                "text": "else if( payloadType = = 6 )"
            },
            {
                "line_number": 33,
                "text": "recovery_point( payloadSize ) 5"
            },
            {
                "line_number": 34,
                "text": "else if( payloadType = = 7 )"
            },
            {
                "line_number": 35,
                "text": "dec_ref_pic_marking_repetition( payloadSize ) 5"
            },
            {
                "line_number": 36,
                "text": "else if( payloadType = = 8 )"
            },
            {
                "line_number": 37,
                "text": "spare_pic( payloadSize ) 5"
            },
            {
                "line_number": 38,
                "text": "else if( payloadType = = 9 )"
            },
            {
                "line_number": 39,
                "text": "scene_info( payloadSize ) 5"
            },
            {
                "line_number": 40,
                "text": "else if( payloadType = = 10 )"
            },
            {
                "line_number": 41,
                "text": "sub_seq_info( payloadSize ) 5"
            },
            {
                "line_number": 42,
                "text": "else if( payloadType = = 11 )"
            },
            {
                "line_number": 43,
                "text": "sub_seq_layer_characteristics( payloadSize ) 5"
            },
            {
                "line_number": 44,
                "text": "else if( payloadType = = 12 )"
            },
            {
                "line_number": 45,
                "text": "sub_seq_characteristics( payloadSize ) 5"
            },
            {
                "line_number": 46,
                "text": "Rec. ITU-T H.264 (06/2019) 329"
            }
        ]
    },
    {
        "page_number": 352,
        "lines": [
            {
                "line_number": 1,
                "text": "else if( payloadType = = 13 )"
            },
            {
                "line_number": 2,
                "text": "full_frame_freeze( payloadSize ) 5"
            },
            {
                "line_number": 3,
                "text": "else if( payloadType = = 14 )"
            },
            {
                "line_number": 4,
                "text": "full_frame_freeze_release( payloadSize ) 5"
            },
            {
                "line_number": 5,
                "text": "else if( payloadType = = 15 )"
            },
            {
                "line_number": 6,
                "text": "full_frame_snapshot( payloadSize ) 5"
            },
            {
                "line_number": 7,
                "text": "else if( payloadType = = 16 )"
            },
            {
                "line_number": 8,
                "text": "progressive_refinement_segment_start( payloadSize ) 5"
            },
            {
                "line_number": 9,
                "text": "else if( payloadType = = 17 )"
            },
            {
                "line_number": 10,
                "text": "progressive_refinement_segment_end( payloadSize ) 5"
            },
            {
                "line_number": 11,
                "text": "else if( payloadType = = 18 )"
            },
            {
                "line_number": 12,
                "text": "motion_constrained_slice_group_set( payloadSize ) 5"
            },
            {
                "line_number": 13,
                "text": "else if( payloadType = = 19 )"
            },
            {
                "line_number": 14,
                "text": "film_grain_characteristics( payloadSize ) 5"
            },
            {
                "line_number": 15,
                "text": "else if( payloadType = = 20 )"
            },
            {
                "line_number": 16,
                "text": "deblocking_filter_display_preference( payloadSize ) 5"
            },
            {
                "line_number": 17,
                "text": "else if( payloadType = = 21 )"
            },
            {
                "line_number": 18,
                "text": "stereo_video_info( payloadSize ) 5"
            },
            {
                "line_number": 19,
                "text": "else if( payloadType = = 22 )"
            },
            {
                "line_number": 20,
                "text": "post_filter_hint( payloadSize ) 5"
            },
            {
                "line_number": 21,
                "text": "else if( payloadType = = 23 )"
            },
            {
                "line_number": 22,
                "text": "tone_mapping_info( payloadSize ) 5"
            },
            {
                "line_number": 23,
                "text": "else if( payloadType = = 24 )"
            },
            {
                "line_number": 24,
                "text": "scalability_info( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 25,
                "text": "else if( payloadType = = 25 )"
            },
            {
                "line_number": 26,
                "text": "sub_pic_scalable_layer( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 27,
                "text": "else if( payloadType = = 26 )"
            },
            {
                "line_number": 28,
                "text": "non_required_layer_rep( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 29,
                "text": "else if( payloadType = = 27 )"
            },
            {
                "line_number": 30,
                "text": "priority_layer_info( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 31,
                "text": "else if( payloadType = = 28 )"
            },
            {
                "line_number": 32,
                "text": "layers_not_present( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 33,
                "text": "else if( payloadType = = 29 )"
            },
            {
                "line_number": 34,
                "text": "layer_dependency_change( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 35,
                "text": "else if( payloadType = = 30 )"
            },
            {
                "line_number": 36,
                "text": "scalable_nesting( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 37,
                "text": "else if( payloadType = = 31 )"
            },
            {
                "line_number": 38,
                "text": "base_layer_temporal_hrd( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 39,
                "text": "else if( payloadType = = 32 )"
            },
            {
                "line_number": 40,
                "text": "quality_layer_integrity_check( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 41,
                "text": "else if( payloadType = = 33 )"
            },
            {
                "line_number": 42,
                "text": "redundant_pic_property( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 43,
                "text": "else if( payloadType = = 34 )"
            },
            {
                "line_number": 44,
                "text": "tl0_dep_rep_index( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 45,
                "text": "else if( payloadType = = 35 )"
            },
            {
                "line_number": 46,
                "text": "tl_switching_point( payloadSize ) /* specified in Annex G */ 5"
            },
            {
                "line_number": 47,
                "text": "else if( payloadType = = 36 )"
            },
            {
                "line_number": 48,
                "text": "parallel_decoding_info( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 49,
                "text": "330 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 353,
        "lines": [
            {
                "line_number": 1,
                "text": "else if( payloadType = = 37 )"
            },
            {
                "line_number": 2,
                "text": "mvc_scalable_nesting( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 3,
                "text": "else if( payloadType = = 38 )"
            },
            {
                "line_number": 4,
                "text": "view_scalability_info( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 5,
                "text": "else if( payloadType = = 39 )"
            },
            {
                "line_number": 6,
                "text": "multiview_scene_info( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 7,
                "text": "else if( payloadType = = 40 )"
            },
            {
                "line_number": 8,
                "text": "multiview_acquisition_info( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 9,
                "text": "else if( payloadType = = 41 )"
            },
            {
                "line_number": 10,
                "text": "non_required_view_component( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 11,
                "text": "else if( payloadType = = 42 )"
            },
            {
                "line_number": 12,
                "text": "view_dependency_change( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 13,
                "text": "else if( payloadType = = 43 )"
            },
            {
                "line_number": 14,
                "text": "operation_points_not_present( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 15,
                "text": "else if( payloadType = = 44 )"
            },
            {
                "line_number": 16,
                "text": "base_view_temporal_hrd( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 17,
                "text": "else if( payloadType = = 45 )"
            },
            {
                "line_number": 18,
                "text": "frame_packing_arrangement( payloadSize ) 5"
            },
            {
                "line_number": 19,
                "text": "else if( payloadType = = 46 )"
            },
            {
                "line_number": 20,
                "text": "multiview_view_position( payloadSize ) /* specified in Annex H */ 5"
            },
            {
                "line_number": 21,
                "text": "else if( payloadType = = 47 )"
            },
            {
                "line_number": 22,
                "text": "display_orientation( payloadSize ) 5"
            },
            {
                "line_number": 23,
                "text": "else if( payloadType = = 48 )"
            },
            {
                "line_number": 24,
                "text": "mvcd_scalable_nesting( payloadSize ) /* specified in Annex I */ 5"
            },
            {
                "line_number": 25,
                "text": "else if( payloadType = = 49 )"
            },
            {
                "line_number": 26,
                "text": "mvcd_view_scalability_info( payloadSize ) /* specified in Annex I */ 5"
            },
            {
                "line_number": 27,
                "text": "else if( payloadType = = 50 )"
            },
            {
                "line_number": 28,
                "text": "depth_representation_info( payloadSize ) /* specified in Annex I */ 5"
            },
            {
                "line_number": 29,
                "text": "else if( payloadType = = 51 )"
            },
            {
                "line_number": 30,
                "text": "three_dimensional_reference_displays_info( payloadSize ) 5"
            },
            {
                "line_number": 31,
                "text": "/* specified in Annex I */"
            },
            {
                "line_number": 32,
                "text": "else if( payloadType = = 52 )"
            },
            {
                "line_number": 33,
                "text": "depth_timing( payloadSize ) /* specified in Annex I */ 5"
            },
            {
                "line_number": 34,
                "text": "else if( payloadType = = 53 )"
            },
            {
                "line_number": 35,
                "text": "depth_sampling_info( payloadSize ) /* specified in Annex I */ 5"
            },
            {
                "line_number": 36,
                "text": "else if( payloadType = = 54 )"
            },
            {
                "line_number": 37,
                "text": "constrained_depth_parameter_set_identifier( payloadSize ) 5"
            },
            {
                "line_number": 38,
                "text": "/* specified in Annex J */"
            },
            {
                "line_number": 39,
                "text": "else if( payloadType = = 56 )"
            },
            {
                "line_number": 40,
                "text": "green_metadata( payloadSize ) /* specified in ISO/IEC 23001-11 */ 5"
            },
            {
                "line_number": 41,
                "text": "else if( payloadType = = 137 )"
            },
            {
                "line_number": 42,
                "text": "mastering_display_colour_volume( payloadSize ) 5"
            },
            {
                "line_number": 43,
                "text": "else if( payloadType = = 142 )"
            },
            {
                "line_number": 44,
                "text": "colour_remapping_info( payloadSize ) 5"
            },
            {
                "line_number": 45,
                "text": "else if( payloadType = = 144 )"
            },
            {
                "line_number": 46,
                "text": "content_light_level_info( payloadSize ) 5"
            },
            {
                "line_number": 47,
                "text": "else if( payloadType = = 147 )"
            },
            {
                "line_number": 48,
                "text": "alternative_transfer_characteristics( payloadSize ) 5"
            },
            {
                "line_number": 49,
                "text": "else if( payloadType = = 148 )"
            },
            {
                "line_number": 50,
                "text": "Rec. ITU-T H.264 (06/2019) 331"
            }
        ]
    },
    {
        "page_number": 354,
        "lines": [
            {
                "line_number": 1,
                "text": "ambient_viewing_environment( payloadSize ) 5"
            },
            {
                "line_number": 2,
                "text": "else if( payloadType = = 149 )"
            },
            {
                "line_number": 3,
                "text": "content_colour_volume( payloadSize ) 5"
            },
            {
                "line_number": 4,
                "text": "else if( payloadType = = 150 )"
            },
            {
                "line_number": 5,
                "text": "equirectangular_projection( payloadSize ) 5"
            },
            {
                "line_number": 6,
                "text": "else if( payloadType = = 151 )"
            },
            {
                "line_number": 7,
                "text": "cubemap_projection( payloadSize ) 5"
            },
            {
                "line_number": 8,
                "text": "else if( payloadType = = 154 )"
            },
            {
                "line_number": 9,
                "text": "sphere_rotation( payloadSize ) 5"
            },
            {
                "line_number": 10,
                "text": "else if( payloadType = = 155 )"
            },
            {
                "line_number": 11,
                "text": "regionwise_packing( payloadSize ) 5"
            },
            {
                "line_number": 12,
                "text": "else if( payloadType = = 156 )"
            },
            {
                "line_number": 13,
                "text": "omni_viewport( payloadSize ) 5"
            },
            {
                "line_number": 14,
                "text": "else if( payloadType = = 181 )"
            },
            {
                "line_number": 15,
                "text": "alternative_depth_info( payloadSize ) /* specified in Annex I */ 5"
            },
            {
                "line_number": 16,
                "text": "else if( payloadType = = 200 )"
            },
            {
                "line_number": 17,
                "text": "sei_manifest( payloadSize ) 5"
            },
            {
                "line_number": 18,
                "text": "else if( payloadType = = 201 )"
            },
            {
                "line_number": 19,
                "text": "sei_prefix_indication( payloadSize ) 5"
            },
            {
                "line_number": 20,
                "text": "else"
            },
            {
                "line_number": 21,
                "text": "reserved_sei_message( payloadSize ) 5"
            },
            {
                "line_number": 22,
                "text": "if( !byte_aligned( ) ) {"
            },
            {
                "line_number": 23,
                "text": "bit_equal_to_one /* equal to 1 */ 5 f(1)"
            },
            {
                "line_number": 24,
                "text": "while( !byte_aligned( ) )"
            },
            {
                "line_number": 25,
                "text": "bit_equal_to_zero /* equal to 0 */ 5 f(1)"
            },
            {
                "line_number": 26,
                "text": "}"
            },
            {
                "line_number": 27,
                "text": "}"
            },
            {
                "line_number": 28,
                "text": "D.1.2 Buffering period SEI message syntax"
            },
            {
                "line_number": 29,
                "text": "buffering_period( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 30,
                "text": "seq_parameter_set_id 5 ue(v)"
            },
            {
                "line_number": 31,
                "text": "if( NalHrdBpPresentFlag )"
            },
            {
                "line_number": 32,
                "text": "for( SchedSelIdx = 0; SchedSelIdx <= cpb_cnt_minus1; SchedSelIdx++ ) {"
            },
            {
                "line_number": 33,
                "text": "initial_cpb_removal_delay[ SchedSelIdx ] 5 u(v)"
            },
            {
                "line_number": 34,
                "text": "initial_cpb_removal_delay_offset[ SchedSelIdx ] 5 u(v)"
            },
            {
                "line_number": 35,
                "text": "}"
            },
            {
                "line_number": 36,
                "text": "if( VclHrdBpPresentFlag )"
            },
            {
                "line_number": 37,
                "text": "for( SchedSelIdx = 0; SchedSelIdx <= cpb_cnt_minus1; SchedSelIdx++ ) {"
            },
            {
                "line_number": 38,
                "text": "initial_cpb_removal_delay[ SchedSelIdx ] 5 u(v)"
            },
            {
                "line_number": 39,
                "text": "initial_cpb_removal_delay_offset[ SchedSelIdx ] 5 u(v)"
            },
            {
                "line_number": 40,
                "text": "}"
            },
            {
                "line_number": 41,
                "text": "}"
            },
            {
                "line_number": 42,
                "text": "332 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 355,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.3 Picture timing SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "pic_timing( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "if( CpbDpbDelaysPresentFlag ) {"
            },
            {
                "line_number": 4,
                "text": "cpb_removal_delay 5 u(v)"
            },
            {
                "line_number": 5,
                "text": "dpb_output_delay 5 u(v)"
            },
            {
                "line_number": 6,
                "text": "}"
            },
            {
                "line_number": 7,
                "text": "if( pic_struct_present_flag ) {"
            },
            {
                "line_number": 8,
                "text": "pic_struct 5 u(4)"
            },
            {
                "line_number": 9,
                "text": "for( i = 0; i < NumClockTS; i++ ) {"
            },
            {
                "line_number": 10,
                "text": "clock_timestamp_flag[ i ] 5 u(1)"
            },
            {
                "line_number": 11,
                "text": "if( clock_timestamp_flag[ i ] ) {"
            },
            {
                "line_number": 12,
                "text": "ct_type 5 u(2)"
            },
            {
                "line_number": 13,
                "text": "nuit_field_based_flag 5 u(1)"
            },
            {
                "line_number": 14,
                "text": "counting_type 5 u(5)"
            },
            {
                "line_number": 15,
                "text": "full_timestamp_flag 5 u(1)"
            },
            {
                "line_number": 16,
                "text": "discontinuity_flag 5 u(1)"
            },
            {
                "line_number": 17,
                "text": "cnt_dropped_flag 5 u(1)"
            },
            {
                "line_number": 18,
                "text": "n_frames 5 u(8)"
            },
            {
                "line_number": 19,
                "text": "if( full_timestamp_flag ) {"
            },
            {
                "line_number": 20,
                "text": "seconds_value /* 0..59 */ 5 u(6)"
            },
            {
                "line_number": 21,
                "text": "minutes_value /* 0..59 */ 5 u(6)"
            },
            {
                "line_number": 22,
                "text": "hours_value /* 0..23 */ 5 u(5)"
            },
            {
                "line_number": 23,
                "text": "} else {"
            },
            {
                "line_number": 24,
                "text": "seconds_flag 5 u(1)"
            },
            {
                "line_number": 25,
                "text": "if( seconds_flag ) {"
            },
            {
                "line_number": 26,
                "text": "seconds_value /* range 0..59 */ 5 u(6)"
            },
            {
                "line_number": 27,
                "text": "minutes_flag 5 u(1)"
            },
            {
                "line_number": 28,
                "text": "if( minutes_flag ) {"
            },
            {
                "line_number": 29,
                "text": "minutes_value /* 0..59 */ 5 u(6)"
            },
            {
                "line_number": 30,
                "text": "hours_flag 5 u(1)"
            },
            {
                "line_number": 31,
                "text": "if( hours_flag )"
            },
            {
                "line_number": 32,
                "text": "hours_value /* 0..23 */ 5 u(5)"
            },
            {
                "line_number": 33,
                "text": "}"
            },
            {
                "line_number": 34,
                "text": "}"
            },
            {
                "line_number": 35,
                "text": "}"
            },
            {
                "line_number": 36,
                "text": "if( time_offset_length > 0 )"
            },
            {
                "line_number": 37,
                "text": "time_offset 5 i(v)"
            },
            {
                "line_number": 38,
                "text": "}"
            },
            {
                "line_number": 39,
                "text": "}"
            },
            {
                "line_number": 40,
                "text": "}"
            },
            {
                "line_number": 41,
                "text": "}"
            },
            {
                "line_number": 42,
                "text": "Rec. ITU-T H.264 (06/2019) 333"
            }
        ]
    },
    {
        "page_number": 356,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.4 Pan-scan rectangle SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "pan_scan_rect( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "pan_scan_rect_id 5 ue(v)"
            },
            {
                "line_number": 4,
                "text": "pan_scan_rect_cancel_flag 5 u(1)"
            },
            {
                "line_number": 5,
                "text": "if( !pan_scan_rect_cancel_flag ) {"
            },
            {
                "line_number": 6,
                "text": "pan_scan_cnt_minus1 5 ue(v)"
            },
            {
                "line_number": 7,
                "text": "for( i = 0; i <= pan_scan_cnt_minus1; i++ ) {"
            },
            {
                "line_number": 8,
                "text": "pan_scan_rect_left_offset[ i ] 5 se(v)"
            },
            {
                "line_number": 9,
                "text": "pan_scan_rect_right_offset[ i ] 5 se(v)"
            },
            {
                "line_number": 10,
                "text": "pan_scan_rect_top_offset[ i ] 5 se(v)"
            },
            {
                "line_number": 11,
                "text": "pan_scan_rect_bottom_offset[ i ] 5 se(v)"
            },
            {
                "line_number": 12,
                "text": "}"
            },
            {
                "line_number": 13,
                "text": "pan_scan_rect_repetition_period 5 ue(v)"
            },
            {
                "line_number": 14,
                "text": "}"
            },
            {
                "line_number": 15,
                "text": "}"
            },
            {
                "line_number": 16,
                "text": "D.1.5 Filler payload SEI message syntax"
            },
            {
                "line_number": 17,
                "text": "filler_payload( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 18,
                "text": "for( k = 0; k < payloadSize; k++ )"
            },
            {
                "line_number": 19,
                "text": "ff_byte /* equal to 0xFF */ 5 f(8)"
            },
            {
                "line_number": 20,
                "text": "}"
            },
            {
                "line_number": 21,
                "text": "D.1.6 User data registered by Rec. ITU-T T.35 SEI message syntax"
            },
            {
                "line_number": 22,
                "text": "user_data_registered_itu_t_t35( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 23,
                "text": "itu_t_t35_country_code 5 b(8)"
            },
            {
                "line_number": 24,
                "text": "if( itu_t_t35_country_code != 0xFF )"
            },
            {
                "line_number": 25,
                "text": "i = 1"
            },
            {
                "line_number": 26,
                "text": "else {"
            },
            {
                "line_number": 27,
                "text": "itu_t_t35_country_code_extension_byte 5 b(8)"
            },
            {
                "line_number": 28,
                "text": "i = 2"
            },
            {
                "line_number": 29,
                "text": "}"
            },
            {
                "line_number": 30,
                "text": "do {"
            },
            {
                "line_number": 31,
                "text": "itu_t_t35_payload_byte 5 b(8)"
            },
            {
                "line_number": 32,
                "text": "i++"
            },
            {
                "line_number": 33,
                "text": "} while( i < payloadSize )"
            },
            {
                "line_number": 34,
                "text": "}"
            },
            {
                "line_number": 35,
                "text": "334 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 357,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.7 User data unregistered SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "user_data_unregistered( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "uuid_iso_iec_11578 5 u(128)"
            },
            {
                "line_number": 4,
                "text": "for( i = 16; i < payloadSize; i++ )"
            },
            {
                "line_number": 5,
                "text": "user_data_payload_byte 5 b(8)"
            },
            {
                "line_number": 6,
                "text": "}"
            },
            {
                "line_number": 7,
                "text": "D.1.8 Recovery point SEI message syntax"
            },
            {
                "line_number": 8,
                "text": "recovery_point( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 9,
                "text": "recovery_frame_cnt 5 ue(v)"
            },
            {
                "line_number": 10,
                "text": "exact_match_flag 5 u(1)"
            },
            {
                "line_number": 11,
                "text": "broken_link_flag 5 u(1)"
            },
            {
                "line_number": 12,
                "text": "changing_slice_group_idc 5 u(2)"
            },
            {
                "line_number": 13,
                "text": "}"
            },
            {
                "line_number": 14,
                "text": "D.1.9 Decoded reference picture marking repetition SEI message syntax"
            },
            {
                "line_number": 15,
                "text": "dec_ref_pic_marking_repetition( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 16,
                "text": "original_idr_flag 5 u(1)"
            },
            {
                "line_number": 17,
                "text": "original_frame_num 5 ue(v)"
            },
            {
                "line_number": 18,
                "text": "if( !frame_mbs_only_flag ) {"
            },
            {
                "line_number": 19,
                "text": "original_field_pic_flag 5 u(1)"
            },
            {
                "line_number": 20,
                "text": "if( original_field_pic_flag )"
            },
            {
                "line_number": 21,
                "text": "original_bottom_field_flag 5 u(1)"
            },
            {
                "line_number": 22,
                "text": "}"
            },
            {
                "line_number": 23,
                "text": "dec_ref_pic_marking( ) 5"
            },
            {
                "line_number": 24,
                "text": "}"
            },
            {
                "line_number": 25,
                "text": "Rec. ITU-T H.264 (06/2019) 335"
            }
        ]
    },
    {
        "page_number": 358,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.10 Spare picture SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "spare_pic( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "target_frame_num 5 ue(v)"
            },
            {
                "line_number": 4,
                "text": "spare_field_flag 5 u(1)"
            },
            {
                "line_number": 5,
                "text": "if( spare_field_flag )"
            },
            {
                "line_number": 6,
                "text": "target_bottom_field_flag 5 u(1)"
            },
            {
                "line_number": 7,
                "text": "num_spare_pics_minus1 5 ue(v)"
            },
            {
                "line_number": 8,
                "text": "for( i = 0; i < num_spare_pics_minus1 + 1; i++ ) {"
            },
            {
                "line_number": 9,
                "text": "delta_spare_frame_num[ i ] 5 ue(v)"
            },
            {
                "line_number": 10,
                "text": "if( spare_field_flag )"
            },
            {
                "line_number": 11,
                "text": "spare_bottom_field_flag[ i ] 5 u(1)"
            },
            {
                "line_number": 12,
                "text": "spare_area_idc[ i ] 5 ue(v)"
            },
            {
                "line_number": 13,
                "text": "if( spare_area_idc[ i ] = = 1 )"
            },
            {
                "line_number": 14,
                "text": "for( j = 0; j < PicSizeInMapUnits; j++ )"
            },
            {
                "line_number": 15,
                "text": "spare_unit_flag[ i ][ j ] 5 u(1)"
            },
            {
                "line_number": 16,
                "text": "else if( spare_area_idc[ i ] = = 2 ) {"
            },
            {
                "line_number": 17,
                "text": "mapUnitCnt = 0"
            },
            {
                "line_number": 18,
                "text": "for( j=0; mapUnitCnt < PicSizeInMapUnits; j++ ) {"
            },
            {
                "line_number": 19,
                "text": "zero_run_length[ i ][ j ] 5 ue(v)"
            },
            {
                "line_number": 20,
                "text": "mapUnitCnt += zero_run_length[ i ][ j ] + 1"
            },
            {
                "line_number": 21,
                "text": "}"
            },
            {
                "line_number": 22,
                "text": "}"
            },
            {
                "line_number": 23,
                "text": "}"
            },
            {
                "line_number": 24,
                "text": "}"
            },
            {
                "line_number": 25,
                "text": "D.1.11 Scene information SEI message syntax"
            },
            {
                "line_number": 26,
                "text": "scene_info( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 27,
                "text": "scene_info_present_flag 5 u(1)"
            },
            {
                "line_number": 28,
                "text": "if( scene_info_present_flag ) {"
            },
            {
                "line_number": 29,
                "text": "scene_id 5 ue(v)"
            },
            {
                "line_number": 30,
                "text": "scene_transition_type 5 ue(v)"
            },
            {
                "line_number": 31,
                "text": "if( scene_transition_type > 3 )"
            },
            {
                "line_number": 32,
                "text": "second_scene_id 5 ue(v)"
            },
            {
                "line_number": 33,
                "text": "}"
            },
            {
                "line_number": 34,
                "text": "}"
            },
            {
                "line_number": 35,
                "text": "336 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 359,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.12 Sub-sequence information SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "sub_seq_info( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "sub_seq_layer_num 5 ue(v)"
            },
            {
                "line_number": 4,
                "text": "sub_seq_id 5 ue(v)"
            },
            {
                "line_number": 5,
                "text": "first_ref_pic_flag 5 u(1)"
            },
            {
                "line_number": 6,
                "text": "leading_non_ref_pic_flag 5 u(1)"
            },
            {
                "line_number": 7,
                "text": "last_pic_flag 5 u(1)"
            },
            {
                "line_number": 8,
                "text": "sub_seq_frame_num_flag 5 u(1)"
            },
            {
                "line_number": 9,
                "text": "if( sub_seq_frame_num_flag )"
            },
            {
                "line_number": 10,
                "text": "sub_seq_frame_num 5 ue(v)"
            },
            {
                "line_number": 11,
                "text": "}"
            },
            {
                "line_number": 12,
                "text": "D.1.13 Sub-sequence layer characteristics SEI message syntax"
            },
            {
                "line_number": 13,
                "text": "sub_seq_layer_characteristics( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 14,
                "text": "num_sub_seq_layers_minus1 5 ue(v)"
            },
            {
                "line_number": 15,
                "text": "for( layer = 0; layer <= num_sub_seq_layers_minus1; layer++ ) {"
            },
            {
                "line_number": 16,
                "text": "accurate_statistics_flag 5 u(1)"
            },
            {
                "line_number": 17,
                "text": "average_bit_rate 5 u(16)"
            },
            {
                "line_number": 18,
                "text": "average_frame_rate 5 u(16)"
            },
            {
                "line_number": 19,
                "text": "}"
            },
            {
                "line_number": 20,
                "text": "}"
            },
            {
                "line_number": 21,
                "text": "D.1.14 Sub-sequence characteristics SEI message syntax"
            },
            {
                "line_number": 22,
                "text": "sub_seq_characteristics( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 23,
                "text": "sub_seq_layer_num 5 ue(v)"
            },
            {
                "line_number": 24,
                "text": "sub_seq_id 5 ue(v)"
            },
            {
                "line_number": 25,
                "text": "duration_flag 5 u(1)"
            },
            {
                "line_number": 26,
                "text": "if( duration_flag)"
            },
            {
                "line_number": 27,
                "text": "sub_seq_duration 5 u(32)"
            },
            {
                "line_number": 28,
                "text": "average_rate_flag 5 u(1)"
            },
            {
                "line_number": 29,
                "text": "if( average_rate_flag ) {"
            },
            {
                "line_number": 30,
                "text": "accurate_statistics_flag 5 u(1)"
            },
            {
                "line_number": 31,
                "text": "average_bit_rate 5 u(16)"
            },
            {
                "line_number": 32,
                "text": "average_frame_rate 5 u(16)"
            },
            {
                "line_number": 33,
                "text": "}"
            },
            {
                "line_number": 34,
                "text": "num_referenced_subseqs 5 ue(v)"
            },
            {
                "line_number": 35,
                "text": "for( n = 0; n < num_referenced_subseqs; n++ ) {"
            },
            {
                "line_number": 36,
                "text": "ref_sub_seq_layer_num 5 ue(v)"
            },
            {
                "line_number": 37,
                "text": "ref_sub_seq_id 5 ue(v)"
            },
            {
                "line_number": 38,
                "text": "ref_sub_seq_direction 5 u(1)"
            },
            {
                "line_number": 39,
                "text": "}"
            },
            {
                "line_number": 40,
                "text": "}"
            },
            {
                "line_number": 41,
                "text": "Rec. ITU-T H.264 (06/2019) 337"
            }
        ]
    },
    {
        "page_number": 360,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.15 Full-frame freeze SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "full_frame_freeze( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "full_frame_freeze_repetition_period 5 ue(v)"
            },
            {
                "line_number": 4,
                "text": "}"
            },
            {
                "line_number": 5,
                "text": "D.1.16 Full-frame freeze release SEI message syntax"
            },
            {
                "line_number": 6,
                "text": "full_frame_freeze_release( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 7,
                "text": "}"
            },
            {
                "line_number": 8,
                "text": "D.1.17 Full-frame snapshot SEI message syntax"
            },
            {
                "line_number": 9,
                "text": "full_frame_snapshot( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 10,
                "text": "snapshot_id 5 ue(v)"
            },
            {
                "line_number": 11,
                "text": "}"
            },
            {
                "line_number": 12,
                "text": "D.1.18 Progressive refinement segment start SEI message syntax"
            },
            {
                "line_number": 13,
                "text": "progressive_refinement_segment_start( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 14,
                "text": "progressive_refinement_id 5 ue(v)"
            },
            {
                "line_number": 15,
                "text": "num_refinement_steps_minus1 5 ue(v)"
            },
            {
                "line_number": 16,
                "text": "}"
            },
            {
                "line_number": 17,
                "text": "D.1.19 Progressive refinement segment end SEI message syntax"
            },
            {
                "line_number": 18,
                "text": "progressive_refinement_segment_end( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 19,
                "text": "progressive_refinement_id 5 ue(v)"
            },
            {
                "line_number": 20,
                "text": "}"
            },
            {
                "line_number": 21,
                "text": "D.1.20 Motion-constrained slice group set SEI message syntax"
            },
            {
                "line_number": 22,
                "text": "motion_constrained_slice_group_set( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 23,
                "text": "num_slice_groups_in_set_minus1 5 ue(v)"
            },
            {
                "line_number": 24,
                "text": "if( num_slice_groups_minus1 > 0 )"
            },
            {
                "line_number": 25,
                "text": "for( i = 0; i <= num_slice_groups_in_set_minus1; i++ )"
            },
            {
                "line_number": 26,
                "text": "slice_group_id[ i ] 5 u(v)"
            },
            {
                "line_number": 27,
                "text": "exact_sample_value_match_flag 5 u(1)"
            },
            {
                "line_number": 28,
                "text": "pan_scan_rect_flag 5 u(1)"
            },
            {
                "line_number": 29,
                "text": "if( pan_scan_rect_flag )"
            },
            {
                "line_number": 30,
                "text": "pan_scan_rect_id 5 ue(v)"
            },
            {
                "line_number": 31,
                "text": "}"
            },
            {
                "line_number": 32,
                "text": "338 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 361,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.21 Film grain characteristics SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "film_grain_characteristics( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "film_grain_characteristics_cancel_flag 5 u(1)"
            },
            {
                "line_number": 4,
                "text": "if( !film_grain_characteristics_cancel_flag ) {"
            },
            {
                "line_number": 5,
                "text": "film_grain_model_id 5 u(2)"
            },
            {
                "line_number": 6,
                "text": "separate_colour_description_present_flag 5 u(1)"
            },
            {
                "line_number": 7,
                "text": "if( separate_colour_description_present_flag ) {"
            },
            {
                "line_number": 8,
                "text": "film_grain_bit_depth_luma_minus8 5 u(3)"
            },
            {
                "line_number": 9,
                "text": "film_grain_bit_depth_chroma_minus8 5 u(3)"
            },
            {
                "line_number": 10,
                "text": "film_grain_full_range_flag 5 u(1)"
            },
            {
                "line_number": 11,
                "text": "film_grain_colour_primaries 5 u(8)"
            },
            {
                "line_number": 12,
                "text": "film_grain_transfer_characteristics 5 u(8)"
            },
            {
                "line_number": 13,
                "text": "film_grain_matrix_coefficients 5 u(8)"
            },
            {
                "line_number": 14,
                "text": "}"
            },
            {
                "line_number": 15,
                "text": "blending_mode_id 5 u(2)"
            },
            {
                "line_number": 16,
                "text": "log2_scale_factor 5 u(4)"
            },
            {
                "line_number": 17,
                "text": "for( c = 0; c < 3; c++ )"
            },
            {
                "line_number": 18,
                "text": "comp_model_present_flag[ c ] 5 u(1)"
            },
            {
                "line_number": 19,
                "text": "for( c = 0; c < 3; c++ )"
            },
            {
                "line_number": 20,
                "text": "if( comp_model_present_flag[ c ] ) {"
            },
            {
                "line_number": 21,
                "text": "num_intensity_intervals_minus1[ c ] 5 u(8)"
            },
            {
                "line_number": 22,
                "text": "num_model_values_minus1[ c ] 5 u(3)"
            },
            {
                "line_number": 23,
                "text": "for( i = 0; i <= num_intensity_intervals_minus1[ c ]; i++ ) {"
            },
            {
                "line_number": 24,
                "text": "intensity_interval_lower_bound[ c ][ i ] 5 u(8)"
            },
            {
                "line_number": 25,
                "text": "intensity_interval_upper_bound[ c ][ i ] 5 u(8)"
            },
            {
                "line_number": 26,
                "text": "for( j = 0; j <= num_model_values_minus1[ c ]; j++ )"
            },
            {
                "line_number": 27,
                "text": "comp_model_value[ c ][ i ][ j ] 5 se(v)"
            },
            {
                "line_number": 28,
                "text": "}"
            },
            {
                "line_number": 29,
                "text": "}"
            },
            {
                "line_number": 30,
                "text": "film_grain_characteristics_repetition_period 5 ue(v)"
            },
            {
                "line_number": 31,
                "text": "}"
            },
            {
                "line_number": 32,
                "text": "}"
            },
            {
                "line_number": 33,
                "text": "D.1.22 Deblocking filter display preference SEI message syntax"
            },
            {
                "line_number": 34,
                "text": "deblocking_filter_display_preference( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 35,
                "text": "deblocking_display_preference_cancel_flag 5 u(1)"
            },
            {
                "line_number": 36,
                "text": "if( !deblocking_display_preference_cancel_flag ) {"
            },
            {
                "line_number": 37,
                "text": "display_prior_to_deblocking_preferred_flag 5 u(1)"
            },
            {
                "line_number": 38,
                "text": "dec_frame_buffering_constraint_flag 5 u(1)"
            },
            {
                "line_number": 39,
                "text": "deblocking_display_preference_repetition_period 5 ue(v)"
            },
            {
                "line_number": 40,
                "text": "}"
            },
            {
                "line_number": 41,
                "text": "}"
            },
            {
                "line_number": 42,
                "text": "Rec. ITU-T H.264 (06/2019) 339"
            }
        ]
    },
    {
        "page_number": 362,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.23 Stereo video information SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "stereo_video_info( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "field_views_flag 5 u(1)"
            },
            {
                "line_number": 4,
                "text": "if( field_views_flag )"
            },
            {
                "line_number": 5,
                "text": "top_field_is_left_view_flag 5 u(1)"
            },
            {
                "line_number": 6,
                "text": "else {"
            },
            {
                "line_number": 7,
                "text": "current_frame_is_left_view_flag 5 u(1)"
            },
            {
                "line_number": 8,
                "text": "next_frame_is_second_view_flag 5 u(1)"
            },
            {
                "line_number": 9,
                "text": "}"
            },
            {
                "line_number": 10,
                "text": "left_view_self_contained_flag 5 u(1)"
            },
            {
                "line_number": 11,
                "text": "right_view_self_contained_flag 5 u(1)"
            },
            {
                "line_number": 12,
                "text": "}"
            },
            {
                "line_number": 13,
                "text": "D.1.24 Post-filter hint SEI message syntax"
            },
            {
                "line_number": 14,
                "text": "post_filter_hint( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 15,
                "text": "filter_hint_size_y 5 ue(v)"
            },
            {
                "line_number": 16,
                "text": "filter_hint_size_x 5 ue(v)"
            },
            {
                "line_number": 17,
                "text": "filter_hint_type 5 u(2)"
            },
            {
                "line_number": 18,
                "text": "for( colour_component = 0; colour_component < 3; colour_component ++ )"
            },
            {
                "line_number": 19,
                "text": "for( cy = 0; cy < filter_hint_size_y; cy ++ )"
            },
            {
                "line_number": 20,
                "text": "for( cx = 0; cx < filter_hint_size_x; cx ++ )"
            },
            {
                "line_number": 21,
                "text": "filter_hint[ colour_component ][ cy ][ cx ] 5 se(v)"
            },
            {
                "line_number": 22,
                "text": "additional_extension_flag 5 u(1)"
            },
            {
                "line_number": 23,
                "text": "}"
            },
            {
                "line_number": 24,
                "text": "340 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 363,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.25 Tone mapping information SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "tone_mapping_info( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "tone_map_id 5 ue(v)"
            },
            {
                "line_number": 4,
                "text": "tone_map_cancel_flag 5 u(1)"
            },
            {
                "line_number": 5,
                "text": "if( !tone_map_cancel_flag ) {"
            },
            {
                "line_number": 6,
                "text": "tone_map_repetition_period 5 ue(v)"
            },
            {
                "line_number": 7,
                "text": "coded_data_bit_depth 5 u(8)"
            },
            {
                "line_number": 8,
                "text": "target_bit_depth 5 u(8)"
            },
            {
                "line_number": 9,
                "text": "tone_map_model_id 5 ue(v)"
            },
            {
                "line_number": 10,
                "text": "if( tone_map_model_id = = 0 ) {"
            },
            {
                "line_number": 11,
                "text": "min_value 5 u(32)"
            },
            {
                "line_number": 12,
                "text": "max_value 5 u(32)"
            },
            {
                "line_number": 13,
                "text": "}"
            },
            {
                "line_number": 14,
                "text": "if( tone_map_model_id = = 1 ) {"
            },
            {
                "line_number": 15,
                "text": "sigmoid_midpoint 5 u(32)"
            },
            {
                "line_number": 16,
                "text": "sigmoid_width 5 u(32)"
            },
            {
                "line_number": 17,
                "text": "}"
            },
            {
                "line_number": 18,
                "text": "if( tone_map_model_id = = 2 )"
            },
            {
                "line_number": 19,
                "text": "for( i = 0; i < ( 1 << target_bit_depth ); i++ )"
            },
            {
                "line_number": 20,
                "text": "start_of_coded_interval[ i ] 5 u(v)"
            },
            {
                "line_number": 21,
                "text": "if( tone_map_model_id = = 3 ) {"
            },
            {
                "line_number": 22,
                "text": "num_pivots 5 u(16)"
            },
            {
                "line_number": 23,
                "text": "for( i=0; i < num_pivots; i++ ) {"
            },
            {
                "line_number": 24,
                "text": "coded_pivot_value[ i ] 5 u(v)"
            },
            {
                "line_number": 25,
                "text": "target_pivot_value[ i ] 5 u(v)"
            },
            {
                "line_number": 26,
                "text": "}"
            },
            {
                "line_number": 27,
                "text": "}"
            },
            {
                "line_number": 28,
                "text": "if( tone_map_model_id = = 4 ) {"
            },
            {
                "line_number": 29,
                "text": "camera_iso_speed_idc 5 u(8)"
            },
            {
                "line_number": 30,
                "text": "if( camera_iso_speed_idc = = Extended_ISO )"
            },
            {
                "line_number": 31,
                "text": "camera_iso_speed_value 5 u(32)"
            },
            {
                "line_number": 32,
                "text": "exposure_index_idc 5 u(8)"
            },
            {
                "line_number": 33,
                "text": "if( exposure_index_idc = = Extended_ISO )"
            },
            {
                "line_number": 34,
                "text": "exposure_index_value 5 u(32)"
            },
            {
                "line_number": 35,
                "text": "exposure_compensation_value_sign_flag 5 u(1)"
            },
            {
                "line_number": 36,
                "text": "exposure_compensation_value_numerator 5 u(16)"
            },
            {
                "line_number": 37,
                "text": "exposure_compensation_value_denom_idc 5 u(16)"
            },
            {
                "line_number": 38,
                "text": "ref_screen_luminance_white 5 u(32)"
            },
            {
                "line_number": 39,
                "text": "extended_range_white_level 5 u(32)"
            },
            {
                "line_number": 40,
                "text": "nominal_black_level_luma_code_value 5 u(16)"
            },
            {
                "line_number": 41,
                "text": "nominal_white_level_luma_code_value 5 u(16)"
            },
            {
                "line_number": 42,
                "text": "extended_white_level_luma_code_value 5 u(16)"
            },
            {
                "line_number": 43,
                "text": "}"
            },
            {
                "line_number": 44,
                "text": "}"
            },
            {
                "line_number": 45,
                "text": "}"
            },
            {
                "line_number": 46,
                "text": "Rec. ITU-T H.264 (06/2019) 341"
            }
        ]
    },
    {
        "page_number": 364,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.26 Frame packing arrangement SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "frame_packing_arrangement( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "frame_packing_arrangement_id 5 ue(v)"
            },
            {
                "line_number": 4,
                "text": "frame_packing_arrangement_cancel_flag 5 u(1)"
            },
            {
                "line_number": 5,
                "text": "if( !frame_packing_arrangement_cancel_flag ) {"
            },
            {
                "line_number": 6,
                "text": "frame_packing_arrangement_type 5 u(7)"
            },
            {
                "line_number": 7,
                "text": "quincunx_sampling_flag 5 u(1)"
            },
            {
                "line_number": 8,
                "text": "content_interpretation_type 5 u(6)"
            },
            {
                "line_number": 9,
                "text": "spatial_flipping_flag 5 u(1)"
            },
            {
                "line_number": 10,
                "text": "frame0_flipped_flag 5 u(1)"
            },
            {
                "line_number": 11,
                "text": "field_views_flag 5 u(1)"
            },
            {
                "line_number": 12,
                "text": "current_frame_is_frame0_flag 5 u(1)"
            },
            {
                "line_number": 13,
                "text": "frame0_self_contained_flag 5 u(1)"
            },
            {
                "line_number": 14,
                "text": "frame1_self_contained_flag 5 u(1)"
            },
            {
                "line_number": 15,
                "text": "if( !quincunx_sampling_flag &&"
            },
            {
                "line_number": 16,
                "text": "frame_packing_arrangement_type != 5 ) {"
            },
            {
                "line_number": 17,
                "text": "frame0_grid_position_x 5 u(4)"
            },
            {
                "line_number": 18,
                "text": "frame0_grid_position_y 5 u(4)"
            },
            {
                "line_number": 19,
                "text": "frame1_grid_position_x 5 u(4)"
            },
            {
                "line_number": 20,
                "text": "frame1_grid_position_y 5 u(4)"
            },
            {
                "line_number": 21,
                "text": "}"
            },
            {
                "line_number": 22,
                "text": "frame_packing_arrangement_reserved_byte 5 u(8)"
            },
            {
                "line_number": 23,
                "text": "frame_packing_arrangement_repetition_period 5 ue(v)"
            },
            {
                "line_number": 24,
                "text": "}"
            },
            {
                "line_number": 25,
                "text": "frame_packing_arrangement_extension_flag 5 u(1)"
            },
            {
                "line_number": 26,
                "text": "}"
            },
            {
                "line_number": 27,
                "text": "D.1.27 Display orientation SEI message syntax"
            },
            {
                "line_number": 28,
                "text": "display_orientation( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 29,
                "text": "display_orientation_cancel_flag 5 u(1)"
            },
            {
                "line_number": 30,
                "text": "if( !display_orientation_cancel_flag ) {"
            },
            {
                "line_number": 31,
                "text": "hor_flip 5 u(1)"
            },
            {
                "line_number": 32,
                "text": "ver_flip 5 u(1)"
            },
            {
                "line_number": 33,
                "text": "anticlockwise_rotation 5 u(16)"
            },
            {
                "line_number": 34,
                "text": "display_orientation_repetition_period 5 ue(v)"
            },
            {
                "line_number": 35,
                "text": "display_orientation_extension_flag 5 u(1)"
            },
            {
                "line_number": 36,
                "text": "}"
            },
            {
                "line_number": 37,
                "text": "}"
            },
            {
                "line_number": 38,
                "text": "D.1.28 Green metadata SEI message syntax"
            },
            {
                "line_number": 39,
                "text": "The syntax for this SEI message is specified in ISO/IEC 23001-11 (Green metadata), which facilitates reduced power"
            },
            {
                "line_number": 40,
                "text": "consumption in decoders, encoders, displays, and in media selection."
            },
            {
                "line_number": 41,
                "text": "342 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 365,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.29 Mastering display colour volume SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "mastering_display_colour_volume( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "for( c = 0; c < 3; c++ ) {"
            },
            {
                "line_number": 4,
                "text": "display_primaries_x[ c ] 5 u(16)"
            },
            {
                "line_number": 5,
                "text": "display_primaries_y[ c ] 5 u(16)"
            },
            {
                "line_number": 6,
                "text": "}"
            },
            {
                "line_number": 7,
                "text": "white_point_x 5 u(16)"
            },
            {
                "line_number": 8,
                "text": "white_point_y 5 u(16)"
            },
            {
                "line_number": 9,
                "text": "max_display_mastering_luminance 5 u(32)"
            },
            {
                "line_number": 10,
                "text": "min_display_mastering_luminance 5 u(32)"
            },
            {
                "line_number": 11,
                "text": "}"
            },
            {
                "line_number": 12,
                "text": "Rec. ITU-T H.264 (06/2019) 343"
            }
        ]
    },
    {
        "page_number": 366,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.30 Colour remapping information SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "colour_remapping_info( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "colour_remap_id 5 ue(v)"
            },
            {
                "line_number": 4,
                "text": "colour_remap_cancel_flag 5 u(1)"
            },
            {
                "line_number": 5,
                "text": "if( !colour_remap_cancel_flag ) {"
            },
            {
                "line_number": 6,
                "text": "colour_remap_repetition_period 5 ue(v)"
            },
            {
                "line_number": 7,
                "text": "colour_remap_video_signal_info_present_flag 5 u(1)"
            },
            {
                "line_number": 8,
                "text": "if( colour_remap_video_signal_info_present_flag ) {"
            },
            {
                "line_number": 9,
                "text": "colour_remap_full_range_flag 5 u(1)"
            },
            {
                "line_number": 10,
                "text": "colour_remap_primaries 5 u(8)"
            },
            {
                "line_number": 11,
                "text": "colour_remap_transfer_function 5 u(8)"
            },
            {
                "line_number": 12,
                "text": "colour_remap_matrix_coefficients 5 u(8)"
            },
            {
                "line_number": 13,
                "text": "}"
            },
            {
                "line_number": 14,
                "text": "colour_remap_input_bit_depth 5 u(8)"
            },
            {
                "line_number": 15,
                "text": "colour_remap_output_bit_depth 5 u(8)"
            },
            {
                "line_number": 16,
                "text": "for( c = 0; c < 3; c++ ) {"
            },
            {
                "line_number": 17,
                "text": "pre_lut_num_val_minus1[ c ] 5 u(8)"
            },
            {
                "line_number": 18,
                "text": "if( pre_lut_num_val_minus1[ c ] > 0 )"
            },
            {
                "line_number": 19,
                "text": "for( i = 0; i <= pre_lut_num_val_minus1[ c ]; i++ ) {"
            },
            {
                "line_number": 20,
                "text": "pre_lut_coded_value[ c ][ i ] 5 u(v)"
            },
            {
                "line_number": 21,
                "text": "pre_lut_target_value[ c ][ i ] 5 u(v)"
            },
            {
                "line_number": 22,
                "text": "}"
            },
            {
                "line_number": 23,
                "text": "}"
            },
            {
                "line_number": 24,
                "text": "colour_remap_matrix_present_flag 5 u(1)"
            },
            {
                "line_number": 25,
                "text": "if( colour_remap_matrix_present_flag ) {"
            },
            {
                "line_number": 26,
                "text": "log2_matrix_denom 5 u(4)"
            },
            {
                "line_number": 27,
                "text": "for( c = 0; c < 3; c++ )"
            },
            {
                "line_number": 28,
                "text": "for( i = 0; i < 3; i++ )"
            },
            {
                "line_number": 29,
                "text": "colour_remap_coeffs[ c ][ i ] 5 se(v)"
            },
            {
                "line_number": 30,
                "text": "}"
            },
            {
                "line_number": 31,
                "text": "for( c = 0; c < 3; c++ ) {"
            },
            {
                "line_number": 32,
                "text": "post_lut_num_val_minus1[ c ] 5 u(8)"
            },
            {
                "line_number": 33,
                "text": "if( post_lut_num_val_minus1[ c ] > 0 )"
            },
            {
                "line_number": 34,
                "text": "for( i = 0; i <= post_lut_num_val_minus1[ c ]; i++ ) {"
            },
            {
                "line_number": 35,
                "text": "post_lut_coded_value[ c ][ i ] 5 u(v)"
            },
            {
                "line_number": 36,
                "text": "post_lut_target_value[ c ][ i ] 5 u(v)"
            },
            {
                "line_number": 37,
                "text": "}"
            },
            {
                "line_number": 38,
                "text": "}"
            },
            {
                "line_number": 39,
                "text": "}"
            },
            {
                "line_number": 40,
                "text": "}"
            },
            {
                "line_number": 41,
                "text": "344 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 367,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.31 Content light level information SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "content_light_level_info( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "max_content_light_level 5 u(16)"
            },
            {
                "line_number": 4,
                "text": "max_pic_average_light_level 5 u(16)"
            },
            {
                "line_number": 5,
                "text": "}"
            },
            {
                "line_number": 6,
                "text": "D.1.32 Alternative transfer characteristics SEI message syntax"
            },
            {
                "line_number": 7,
                "text": "alternative_transfer_characteristics( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 8,
                "text": "preferred_transfer_characteristics 5 u(8)"
            },
            {
                "line_number": 9,
                "text": "}"
            },
            {
                "line_number": 10,
                "text": "D.1.33 Content colour volume SEI message syntax"
            },
            {
                "line_number": 11,
                "text": "content_colour_volume( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 12,
                "text": "ccv_cancel_flag 5 u(1)"
            },
            {
                "line_number": 13,
                "text": "if( !ccv_cancel_flag ) {"
            },
            {
                "line_number": 14,
                "text": "ccv_persistence_flag 5 u(1)"
            },
            {
                "line_number": 15,
                "text": "ccv_primaries_present_flag 5 u(1)"
            },
            {
                "line_number": 16,
                "text": "ccv_min_luminance_value_present_flag 5 u(1)"
            },
            {
                "line_number": 17,
                "text": "ccv_max_luminance_value_present_flag 5 u(1)"
            },
            {
                "line_number": 18,
                "text": "ccv_avg_luminance_value_present_flag 5 u(1)"
            },
            {
                "line_number": 19,
                "text": "ccv_reserved_zero_2bits 5 u(2)"
            },
            {
                "line_number": 20,
                "text": "if( ccv_primaries_present_flag )"
            },
            {
                "line_number": 21,
                "text": "for( c = 0; c < 3; c++ ) {"
            },
            {
                "line_number": 22,
                "text": "ccv_primaries_x[ c ] 5 i(32)"
            },
            {
                "line_number": 23,
                "text": "ccv_primaries_y[ c ] 5 i(32)"
            },
            {
                "line_number": 24,
                "text": "}"
            },
            {
                "line_number": 25,
                "text": "if( ccv_min_luminance_value_present_flag )"
            },
            {
                "line_number": 26,
                "text": "ccv_min_luminance_value 5 u(32)"
            },
            {
                "line_number": 27,
                "text": "if( ccv_max_luminance_value_present_flag )"
            },
            {
                "line_number": 28,
                "text": "ccv_max_luminance_value 5 u(32)"
            },
            {
                "line_number": 29,
                "text": "if( ccv_avg_luminance_value_present_flag )"
            },
            {
                "line_number": 30,
                "text": "ccv_avg_luminance_value 5 u(32)"
            },
            {
                "line_number": 31,
                "text": "}"
            },
            {
                "line_number": 32,
                "text": "}"
            },
            {
                "line_number": 33,
                "text": "D.1.34 Ambient viewing environment SEI message syntax"
            },
            {
                "line_number": 34,
                "text": "ambient_viewing_environment( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 35,
                "text": "ambient_illuminance 5 u(32)"
            },
            {
                "line_number": 36,
                "text": "ambient_light_x 5 u(16)"
            },
            {
                "line_number": 37,
                "text": "ambient_light_y 5 u(16)"
            },
            {
                "line_number": 38,
                "text": "}"
            },
            {
                "line_number": 39,
                "text": "Rec. ITU-T H.264 (06/2019) 345"
            }
        ]
    },
    {
        "page_number": 368,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.35 Syntax of omnidirectional video specific SEI messages"
            },
            {
                "line_number": 2,
                "text": "D.1.35.1 Equirectangular projection SEI message syntax"
            },
            {
                "line_number": 3,
                "text": "equirectangular_projection( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 4,
                "text": "erp_cancel_flag 5 u(1)"
            },
            {
                "line_number": 5,
                "text": "if( !erp_cancel_flag )"
            },
            {
                "line_number": 6,
                "text": "erp_persistence_flag 5 u(1)"
            },
            {
                "line_number": 7,
                "text": "erp_padding_flag 5 u(1)"
            },
            {
                "line_number": 8,
                "text": "erp_reserved_zero_2bits 5 u(2)"
            },
            {
                "line_number": 9,
                "text": "if( erp_padding_flag = = 1 ) {"
            },
            {
                "line_number": 10,
                "text": "gp_erp_type 5 u(3)"
            },
            {
                "line_number": 11,
                "text": "left_gb_erp_width 5 u(8)"
            },
            {
                "line_number": 12,
                "text": "right_gb_erp_width 5 u(8)"
            },
            {
                "line_number": 13,
                "text": "}"
            },
            {
                "line_number": 14,
                "text": "}"
            },
            {
                "line_number": 15,
                "text": "}"
            },
            {
                "line_number": 16,
                "text": "D.1.35.2 Cubemap projection SEI message syntax"
            },
            {
                "line_number": 17,
                "text": "cubemap_projection( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 18,
                "text": "cmp_cancel_flag 5 u(1)"
            },
            {
                "line_number": 19,
                "text": "if( !cmp_cancel_flag )"
            },
            {
                "line_number": 20,
                "text": "cmp_persistence_flag 5 u(1)"
            },
            {
                "line_number": 21,
                "text": "}"
            },
            {
                "line_number": 22,
                "text": "D.1.35.3 Sphere rotation SEI message syntax"
            },
            {
                "line_number": 23,
                "text": "sphere_rotation( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 24,
                "text": "sphere_rotation_cancel_flag 5 u(1)"
            },
            {
                "line_number": 25,
                "text": "if( !sphere_rotation_cancel_flag ) {"
            },
            {
                "line_number": 26,
                "text": "sphere_rotation_persistence_flag 5 u(1)"
            },
            {
                "line_number": 27,
                "text": "sphere_rotation_reserved_zero_6bits 5 u(6)"
            },
            {
                "line_number": 28,
                "text": "yaw_rotation 5 i(32)"
            },
            {
                "line_number": 29,
                "text": "pitch_rotation 5 i(32)"
            },
            {
                "line_number": 30,
                "text": "roll_rotation 5 i(32)"
            },
            {
                "line_number": 31,
                "text": "}"
            },
            {
                "line_number": 32,
                "text": "}"
            },
            {
                "line_number": 33,
                "text": "346 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 369,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.35.4 Region-wise packing SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "regionwise_packing( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "rwp_cancel_flag 5 u(1)"
            },
            {
                "line_number": 4,
                "text": "if( !rwp_cancel_flag ) {"
            },
            {
                "line_number": 5,
                "text": "rwp_persistence_flag 5 u(1)"
            },
            {
                "line_number": 6,
                "text": "constituent_picture_matching_flag 5 u(1)"
            },
            {
                "line_number": 7,
                "text": "rwp_reserved_zero_5bits 5 u(5)"
            },
            {
                "line_number": 8,
                "text": "num_packed_regions 5 u(8)"
            },
            {
                "line_number": 9,
                "text": "proj_picture_width 5 u(32)"
            },
            {
                "line_number": 10,
                "text": "proj_picture_height 5 u(32)"
            },
            {
                "line_number": 11,
                "text": "packed_picture_width 5 u(16)"
            },
            {
                "line_number": 12,
                "text": "packed_picture_height 5 u(16)"
            },
            {
                "line_number": 13,
                "text": "for( i = 0; i < num_packed_regions; i++ ) {"
            },
            {
                "line_number": 14,
                "text": "rwp_reserved_zero_4bits[ i ] 5 u(4)"
            },
            {
                "line_number": 15,
                "text": "transform_type[ i ] 5 u(3)"
            },
            {
                "line_number": 16,
                "text": "guard_band_flag[ i ] 5 u(1)"
            },
            {
                "line_number": 17,
                "text": "proj_region_width[ i ] 5 u(32)"
            },
            {
                "line_number": 18,
                "text": "proj_region_height[ i ] 5 u(32)"
            },
            {
                "line_number": 19,
                "text": "proj_region_top[ i ] 5 u(32)"
            },
            {
                "line_number": 20,
                "text": "proj_region_left[ i ] 5 u(32)"
            },
            {
                "line_number": 21,
                "text": "packed_region_width[ i ] 5 u(16)"
            },
            {
                "line_number": 22,
                "text": "packed_region_height[ i ] 5 u(16)"
            },
            {
                "line_number": 23,
                "text": "packed_region_top[ i ] 5 u(16)"
            },
            {
                "line_number": 24,
                "text": "packed_region_left[ i ] 5 u(16)"
            },
            {
                "line_number": 25,
                "text": "if( guard_band_flag[ i ] ) {"
            },
            {
                "line_number": 26,
                "text": "left_gb_width[ i ] 5 u(8)"
            },
            {
                "line_number": 27,
                "text": "right_gb_width[ i ] 5 u(8)"
            },
            {
                "line_number": 28,
                "text": "top_gb_height[ i ] 5 u(8)"
            },
            {
                "line_number": 29,
                "text": "bottom_gb_height[ i ] 5 u(8)"
            },
            {
                "line_number": 30,
                "text": "gb_not_used_for_pred_flag[ i ] 5 u(1)"
            },
            {
                "line_number": 31,
                "text": "for( j = 0; j < 4; j++ )"
            },
            {
                "line_number": 32,
                "text": "gb_type[ i ][ j ] 5 u(3)"
            },
            {
                "line_number": 33,
                "text": "rwp_gb_reserved_zero_3bits[ i ] 5 u(3)"
            },
            {
                "line_number": 34,
                "text": "}"
            },
            {
                "line_number": 35,
                "text": "}"
            },
            {
                "line_number": 36,
                "text": "}"
            },
            {
                "line_number": 37,
                "text": "}"
            },
            {
                "line_number": 38,
                "text": "Rec. ITU-T H.264 (06/2019) 347"
            }
        ]
    },
    {
        "page_number": 370,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.35.5 Omnidirectional viewport SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "omni_viewport( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "omni_viewport_id 5 u(10)"
            },
            {
                "line_number": 4,
                "text": "omni_viewport_cancel_flag 5 u(1)"
            },
            {
                "line_number": 5,
                "text": "if( !omni_viewport_cancel_flag ) {"
            },
            {
                "line_number": 6,
                "text": "omni_viewport_persistence_flag 5 u(1)"
            },
            {
                "line_number": 7,
                "text": "omni_viewport_cnt_minus1 5 u(4)"
            },
            {
                "line_number": 8,
                "text": "for( i = 0; i <= omni_viewport_cnt_minus1; i++ ) {"
            },
            {
                "line_number": 9,
                "text": "omni_viewport_azimuth_centre[ i ] 5 i(32)"
            },
            {
                "line_number": 10,
                "text": "omni_viewport_elevation_centre[ i ] 5 i(32)"
            },
            {
                "line_number": 11,
                "text": "omni_viewport_tilt_centre[ i ] 5 i(32)"
            },
            {
                "line_number": 12,
                "text": "omni_viewport_hor_range[ i ] 5 u(32)"
            },
            {
                "line_number": 13,
                "text": "omni_viewport_ver_range[ i ] 5 u(32)"
            },
            {
                "line_number": 14,
                "text": "}"
            },
            {
                "line_number": 15,
                "text": "}"
            },
            {
                "line_number": 16,
                "text": "}"
            },
            {
                "line_number": 17,
                "text": "D.1.36 SEI manifest SEI message syntax"
            },
            {
                "line_number": 18,
                "text": "sei_manifest( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 19,
                "text": "manifest_num_sei_msg_types 5 u(16)"
            },
            {
                "line_number": 20,
                "text": "for( i = 0; i < manifest_num_sei_msg_types; i++ ) {"
            },
            {
                "line_number": 21,
                "text": "manifest_sei_payload_type[ i ] 5 u(16)"
            },
            {
                "line_number": 22,
                "text": "manifest_sei_description[ i ] 5 u(8)"
            },
            {
                "line_number": 23,
                "text": "}"
            },
            {
                "line_number": 24,
                "text": "}"
            },
            {
                "line_number": 25,
                "text": "D.1.37 SEI prefix indication SEI message syntax"
            },
            {
                "line_number": 26,
                "text": "sei_prefix_indication( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 27,
                "text": "prefix_sei_payload_type 5 u(16)"
            },
            {
                "line_number": 28,
                "text": "num_sei_prefix_indications_minus1 5 u(8)"
            },
            {
                "line_number": 29,
                "text": "for( i = 0; i <= num_sei_prefix_indications_minus1; i++ ) {"
            },
            {
                "line_number": 30,
                "text": "num_bits_in_prefix_indication_minus1[ i ] 5 u(16)"
            },
            {
                "line_number": 31,
                "text": "for( j = 0; j <= num_bits_in_prefix_indication_minus1[ i ]; j++ )"
            },
            {
                "line_number": 32,
                "text": "sei_prefix_data_bit[ i ][ j ] 5 u(1)"
            },
            {
                "line_number": 33,
                "text": "while( !byte_aligned( ) )"
            },
            {
                "line_number": 34,
                "text": "byte_alignment_bit_equal_to_one /* equal to 1 */ 5 f(1)"
            },
            {
                "line_number": 35,
                "text": "}"
            },
            {
                "line_number": 36,
                "text": "}"
            },
            {
                "line_number": 37,
                "text": "348 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 371,
        "lines": [
            {
                "line_number": 1,
                "text": "D.1.38 Reserved SEI message syntax"
            },
            {
                "line_number": 2,
                "text": "reserved_sei_message( payloadSize ) { C Descriptor"
            },
            {
                "line_number": 3,
                "text": "for( i = 0; i < payloadSize; i++ )"
            },
            {
                "line_number": 4,
                "text": "reserved_sei_message_payload_byte 5 b(8)"
            },
            {
                "line_number": 5,
                "text": "}"
            },
            {
                "line_number": 6,
                "text": "D.2 SEI payload semantics"
            },
            {
                "line_number": 7,
                "text": "D.2.1 General SEI payload semantics"
            },
            {
                "line_number": 8,
                "text": "bit_equal_to_one shall be equal to 1."
            },
            {
                "line_number": 9,
                "text": "bit_equal_to_zero shall be equal to 0."
            },
            {
                "line_number": 10,
                "text": "The semantics and persistence scope for each SEI message are specified in the semantics specification for each particular"
            },
            {
                "line_number": 11,
                "text": "SEI message."
            },
            {
                "line_number": 12,
                "text": "The values of some SEI message syntax elements, including pan_scan_rect_id, scene_id, second_scene_id, snapshot_id,"
            },
            {
                "line_number": 13,
                "text": "progressive_refinement_id, tone_map_id, frame_packing_arrangement_id, and colour_remap_id, are split into two sets of"
            },
            {
                "line_number": 14,
                "text": "value ranges, where the first set is specified as \"may be used as determined by the application\", and the second set is"
            },
            {
                "line_number": 15,
                "text": "specified as \"reserved for future use by ITU-T | ISO/IEC\". Applications should be cautious of potential “collisions” of the"
            },
            {
                "line_number": 16,
                "text": "interpretation for values of these syntax elements belonging to the first set of value ranges. Since different applications"
            },
            {
                "line_number": 17,
                "text": "might use these IDs having values in the first set of value ranges for different purposes, particular care should be exercised"
            },
            {
                "line_number": 18,
                "text": "in the design of encoders that generate SEI messages with these IDs having values in the first set of value ranges, and in"
            },
            {
                "line_number": 19,
                "text": "the design of decoders that interpret SEI messages with these IDs. This Specification does not define any management for"
            },
            {
                "line_number": 20,
                "text": "these values. These IDs having values in the first set of value ranges might only be suitable for use in contexts in which"
            },
            {
                "line_number": 21,
                "text": "\"collisions\" of usage (i.e., different definitions of the syntax and semantics of an SEI message with one of these IDs having"
            },
            {
                "line_number": 22,
                "text": "the same value in the first set of value ranges) are unimportant, or not possible, or are managed – e.g., defined or managed"
            },
            {
                "line_number": 23,
                "text": "in the controlling application or transport specification, or by controlling the environment in which bitstreams are"
            },
            {
                "line_number": 24,
                "text": "distributed."
            },
            {
                "line_number": 25,
                "text": "D.2.2 Buffering period SEI message semantics"
            },
            {
                "line_number": 26,
                "text": "The presence of the buffering period SEI message in the bitstream is specified as follows:"
            },
            {
                "line_number": 27,
                "text": "– If NalHrdBpPresentFlag is equal to 1 or VclHrdBpPresentFlag is equal to 1, one buffering period SEI message can"
            },
            {
                "line_number": 28,
                "text": "be present in any access unit of the bitstream, and one buffering period SEI message shall be present in every IDR"
            },
            {
                "line_number": 29,
                "text": "access unit and every access unit associated with a recovery point SEI message."
            },
            {
                "line_number": 30,
                "text": "– Otherwise (NalHrdBpPresentFlag is equal to 0 and VclHrdBpPresentFlag is equal to 0), no buffering period SEI"
            },
            {
                "line_number": 31,
                "text": "messages shall be present in any access unit of the bitstream."
            },
            {
                "line_number": 32,
                "text": "NOTE 1 – For some applications, the frequent presence of a buffering period SEI message may be desirable."
            },
            {
                "line_number": 33,
                "text": "A buffering period is specified as the set of access units between two instances of the buffering period SEI message in"
            },
            {
                "line_number": 34,
                "text": "decoding order."
            },
            {
                "line_number": 35,
                "text": "seq_parameter_set_id specifies the sequence parameter set for the current coded video sequence. The value of"
            },
            {
                "line_number": 36,
                "text": "seq_parameter_set_id shall be equal to the value of seq_parameter_set_id in the picture parameter set referenced by the"
            },
            {
                "line_number": 37,
                "text": "primary coded picture associated with the buffering period SEI message. The value of seq_parameter_set_id shall be in"
            },
            {
                "line_number": 38,
                "text": "the range of 0 to 31, inclusive."
            },
            {
                "line_number": 39,
                "text": "NOTE 2 – When the sequence parameter set identified by seq_parameter_set_id is not already active, the buffering SEI message"
            },
            {
                "line_number": 40,
                "text": "will activate the identified sequence parameter set for the current coded video sequence as specified in clause 7.4.1.2.1."
            },
            {
                "line_number": 41,
                "text": "initial_cpb_removal_delay[ SchedSelIdx ] specifies the delay for the SchedSelIdx-th CPB between the time of arrival in"
            },
            {
                "line_number": 42,
                "text": "the CPB of the first bit of the coded data associated with the access unit associated with the buffering period SEI message"
            },
            {
                "line_number": 43,
                "text": "and the time of removal from the CPB of the coded data associated with the same access unit, for the first buffering period"
            },
            {
                "line_number": 44,
                "text": "after HRD initialization. The syntax element has a length in bits given by initial_cpb_removal_delay_length_minus1 + 1."
            },
            {
                "line_number": 45,
                "text": "It is in units of a 90 kHz clock. initial_cpb_removal_delay[ SchedSelIdx ] shall not be equal to 0 and shall not exceed"
            },
            {
                "line_number": 46,
                "text": "90000 * ( CpbSize[ SchedSelIdx ] ÷ BitRate[ SchedSelIdx ] ), the time-equivalent of the CPB size in 90 kHz clock units."
            },
            {
                "line_number": 47,
                "text": "initial_cpb_removal_delay_offset[ SchedSelIdx ] is used for the SchedSelIdx-th CPB in combination with the"
            },
            {
                "line_number": 48,
                "text": "cpb_removal_delay to specify the initial delivery time of coded access units to the CPB."
            },
            {
                "line_number": 49,
                "text": "initial_cpb_removal_delay_offset[ SchedSelIdx ] is in units of a 90 kHz clock. The"
            },
            {
                "line_number": 50,
                "text": "initial_cpb_removal_delay_offset[ SchedSelIdx ] syntax element is a fixed length code having a length in bits given by"
            },
            {
                "line_number": 51,
                "text": "Rec. ITU-T H.264 (06/2019) 349"
            }
        ]
    },
    {
        "page_number": 372,
        "lines": [
            {
                "line_number": 1,
                "text": "initial_cpb_removal_delay_length_minus1 + 1. This syntax element is not used by decoders and is needed only for the"
            },
            {
                "line_number": 2,
                "text": "delivery scheduler (HSS) specified in Annex C."
            },
            {
                "line_number": 3,
                "text": "Over the entire coded video sequence, the sum of initial_cpb_removal_delay[ SchedSelIdx ] and"
            },
            {
                "line_number": 4,
                "text": "initial_cpb_removal_delay_offset[ SchedSelIdx ] shall be constant for each value of SchedSelIdx."
            },
            {
                "line_number": 5,
                "text": "D.2.3 Picture timing SEI message semantics"
            },
            {
                "line_number": 6,
                "text": "NOTE 1 – The syntax of the picture timing SEI message is dependent on the content of the sequence parameter set that is active for"
            },
            {
                "line_number": 7,
                "text": "the primary coded picture associated with the picture timing SEI message. However, unless the picture timing SEI message of an"
            },
            {
                "line_number": 8,
                "text": "IDR access unit is preceded by a buffering period SEI message within the same access unit, the activation of the associated sequence"
            },
            {
                "line_number": 9,
                "text": "parameter set (and, for IDR pictures that are not the first picture in the bitstream, the determination that the primary coded picture is"
            },
            {
                "line_number": 10,
                "text": "an IDR picture) does not occur until the decoding of the first coded slice NAL unit of the primary coded picture. Since the coded"
            },
            {
                "line_number": 11,
                "text": "slice NAL unit of the primary coded picture follows the picture timing SEI message in NAL unit order, there may be cases in which"
            },
            {
                "line_number": 12,
                "text": "it is necessary for a decoder to store the RBSP containing the picture timing SEI message until determining the parameters of the"
            },
            {
                "line_number": 13,
                "text": "sequence parameter that will be active for the primary coded picture, and then perform the parsing of the picture timing SEI message."
            },
            {
                "line_number": 14,
                "text": "The presence of the picture timing SEI message in the bitstream is specified as follows:"
            },
            {
                "line_number": 15,
                "text": "– If CpbDpbDelaysPresentFlag is equal to 1 or pic_struct_present_flag is equal to 1, one picture timing SEI message"
            },
            {
                "line_number": 16,
                "text": "shall be present in every access unit of the coded video sequence."
            },
            {
                "line_number": 17,
                "text": "– Otherwise (CpbDpbDelaysPresentFlag is equal to 0 and pic_struct_present_flag is equal to 0), no picture timing SEI"
            },
            {
                "line_number": 18,
                "text": "messages shall be present in any access unit of the coded video sequence."
            },
            {
                "line_number": 19,
                "text": "cpb_removal_delay specifies how many clock ticks (see clause E.2.1) to wait after removal from the CPB of the access"
            },
            {
                "line_number": 20,
                "text": "unit associated with the most recent buffering period SEI message in a preceding access unit before removing from the"
            },
            {
                "line_number": 21,
                "text": "buffer the access unit data associated with the picture timing SEI message. This value is also used to calculate an earliest"
            },
            {
                "line_number": 22,
                "text": "possible time of arrival of access unit data into the CPB for the HSS, as specified in Annex C. The syntax element is a"
            },
            {
                "line_number": 23,
                "text": "fixed length code having a length in bits given by cpb_removal_delay_length_minus1 + 1. The cpb_removal_delay is the"
            },
            {
                "line_number": 24,
                "text": "remainder of a modulo 2(cpb_removal_delay_length_minus1 + 1) counter."
            },
            {
                "line_number": 25,
                "text": "NOTE 2 – The value of cpb_removal_delay_length_minus1 that determines the length (in bits) of the syntax element"
            },
            {
                "line_number": 26,
                "text": "cpb_removal_delay is the value of cpb_removal_delay_length_minus1 coded in the sequence parameter set that is active for the"
            },
            {
                "line_number": 27,
                "text": "primary coded picture associated with the picture timing SEI message, although cpb_removal_delay specifies a number of clock"
            },
            {
                "line_number": 28,
                "text": "ticks relative to the removal time of the preceding access unit containing a buffering period SEI message, which may be an access"
            },
            {
                "line_number": 29,
                "text": "unit of a different coded video sequence."
            },
            {
                "line_number": 30,
                "text": "dpb_output_delay is used to compute the DPB output time of the picture. It specifies how many clock ticks to wait after"
            },
            {
                "line_number": 31,
                "text": "removal of an access unit from the CPB before the decoded picture can be output from the DPB (see clause C.2)."
            },
            {
                "line_number": 32,
                "text": "NOTE 3 – A picture is not removed from the DPB at its output time when it is still marked as \"used for short-term reference\" or"
            },
            {
                "line_number": 33,
                "text": "\"used for long-term reference\"."
            },
            {
                "line_number": 34,
                "text": "NOTE 4 – Only one dpb_output_delay is specified for a decoded picture."
            },
            {
                "line_number": 35,
                "text": "The length of the syntax element dpb_output_delay is given in bits by dpb_output_delay_length_minus1 + 1. When"
            },
            {
                "line_number": 36,
                "text": "max_dec_frame_buffering is equal to 0, dpb_output_delay shall be equal to 0."
            },
            {
                "line_number": 37,
                "text": "The output time derived from the dpb_output_delay of any picture that is output from an output timing conforming decoder"
            },
            {
                "line_number": 38,
                "text": "as specified in clause C.2 shall precede the output time derived from the dpb_output_delay of all pictures in any subsequent"
            },
            {
                "line_number": 39,
                "text": "coded video sequence in decoding order."
            },
            {
                "line_number": 40,
                "text": "The output time derived from the dpb_output_delay of the second field, in decoding order, of a complementary"
            },
            {
                "line_number": 41,
                "text": "non-reference field pair shall exceed the output time derived from the dpb_output_delay of the first field of the same"
            },
            {
                "line_number": 42,
                "text": "complementary non-reference field pair."
            },
            {
                "line_number": 43,
                "text": "The picture output order established by the values of this syntax element shall be the same order as established by the"
            },
            {
                "line_number": 44,
                "text": "values of PicOrderCnt( ) as specified in clauses C.4.1 to C.4.5, except that when the two fields of a complementary"
            },
            {
                "line_number": 45,
                "text": "reference field pair have the same value of PicOrderCnt( ), the two fields have different output times."
            },
            {
                "line_number": 46,
                "text": "For pictures that are not output by the \"bumping\" process of clause C.4.5 because they precede, in decoding order, an IDR"
            },
            {
                "line_number": 47,
                "text": "picture with no_output_of_prior_pics_flag equal to 1 or inferred to be equal to 1, the output times derived from"
            },
            {
                "line_number": 48,
                "text": "dpb_output_delay shall be increasing with increasing value of PicOrderCnt( ) relative to all pictures within the same coded"
            },
            {
                "line_number": 49,
                "text": "video sequence subsequent to any picture having a memory_management_control_operation equal to 5."
            },
            {
                "line_number": 50,
                "text": "pic_struct indicates whether a picture should be displayed as a frame or one or more fields, according to Table D-1. Frame"
            },
            {
                "line_number": 51,
                "text": "doubling (pic_struct equal to 7) indicates that the frame should be displayed two times consecutively, and frame tripling"
            },
            {
                "line_number": 52,
                "text": "(pic_struct equal to 8) indicates that the frame should be displayed three times consecutively."
            },
            {
                "line_number": 53,
                "text": "NOTE 5 – Frame doubling can facilitate the display, for example, of 25p video on a 50p display and 29.97p video on a 59.94p"
            },
            {
                "line_number": 54,
                "text": "display. Using frame doubling and frame tripling in combination on every other frame can facilitate the display of 23.98p video on"
            },
            {
                "line_number": 55,
                "text": "a 59.94p display."
            },
            {
                "line_number": 56,
                "text": "350 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 373,
        "lines": [
            {
                "line_number": 1,
                "text": "When pic_struct is present (pic_struct_present_flag is equal to 1), the constraints specified in the third column of Table D-1"
            },
            {
                "line_number": 2,
                "text": "shall be obeyed."
            },
            {
                "line_number": 3,
                "text": "NOTE 6 – When pic_struct_present_flag is equal to 0, then in many cases default values may be inferred. In the absence of other"
            },
            {
                "line_number": 4,
                "text": "indications of the intended display type of a picture, the decoder should infer the value of pic_struct as follows:"
            },
            {
                "line_number": 5,
                "text": "– If field_pic_flag is equal to 1, pic_struct should be inferred to be equal to (1 + bottom_field_flag)."
            },
            {
                "line_number": 6,
                "text": "– Otherwise, if TopFieldOrderCnt is equal to BottomFieldOrderCnt, pic_struct should be inferred to be equal to 0."
            },
            {
                "line_number": 7,
                "text": "– Otherwise, if TopFieldOrderCnt is less than BottomFieldOrderCnt, pic_struct should be inferred to be equal to 3."
            },
            {
                "line_number": 8,
                "text": "– Otherwise (field_pic_flag is equal to 0 and TopFieldOrderCnt is greater than BottomFieldOrderCnt), pic_struct should be"
            },
            {
                "line_number": 9,
                "text": "inferred to be equal to 4."
            },
            {
                "line_number": 10,
                "text": "pic_struct is only a hint as to how the decoded video should be displayed on an assumed display type (e.g., interlaced or progressive)"
            },
            {
                "line_number": 11,
                "text": "at an assumed display rate. When another display type or display rate is used by the decoder, then pic_struct does not indicate the"
            },
            {
                "line_number": 12,
                "text": "display method, but may aid in processing the decoded video for the alternative display. When it is desired for pic_struct to have an"
            },
            {
                "line_number": 13,
                "text": "effective value in the range of 5 to 8, inclusive, pic_struct_present_flag should be equal to 1, as the above inference rule will not"
            },
            {
                "line_number": 14,
                "text": "produce these values."
            },
            {
                "line_number": 15,
                "text": "Table D-1 – Interpretation of pic_struct"
            },
            {
                "line_number": 16,
                "text": "Value Indicated display of picture Restrictions NumClockTS"
            },
            {
                "line_number": 17,
                "text": "0 (progressive) frame field_pic_flag shall be 0, 1"
            },
            {
                "line_number": 18,
                "text": "TopFieldOrderCnt shall be equal to"
            },
            {
                "line_number": 19,
                "text": "BottomFieldOrderCnt"
            },
            {
                "line_number": 20,
                "text": "1 top field field_pic_flag shall be 1, 1"
            },
            {
                "line_number": 21,
                "text": "bottom_field_flag shall be 0"
            },
            {
                "line_number": 22,
                "text": "2 bottom field field_pic_flag shall be 1, 1"
            },
            {
                "line_number": 23,
                "text": "bottom_field_flag shall be 1"
            },
            {
                "line_number": 24,
                "text": "3 top field, bottom field, in that order field_pic_flag shall be 0, 2"
            },
            {
                "line_number": 25,
                "text": "TopFieldOrderCnt shall be less than or"
            },
            {
                "line_number": 26,
                "text": "equal to BottomFieldOrderCnt"
            },
            {
                "line_number": 27,
                "text": "4 bottom field, top field, in that order field_pic_flag shall be 0, 2"
            },
            {
                "line_number": 28,
                "text": "BottomFieldOrderCnt shall be less than"
            },
            {
                "line_number": 29,
                "text": "or equal to TopFieldOrderCnt"
            },
            {
                "line_number": 30,
                "text": "5 top field, bottom field, top field repeated, field_pic_flag shall be 0, 3"
            },
            {
                "line_number": 31,
                "text": "in that order TopFieldOrderCnt shall be less than or"
            },
            {
                "line_number": 32,
                "text": "equal to BottomFieldOrderCnt"
            },
            {
                "line_number": 33,
                "text": "6 bottom field, top field, bottom field field_pic_flag shall be 0, 3"
            },
            {
                "line_number": 34,
                "text": "repeated, in that order BottomFieldOrderCnt shall be less than"
            },
            {
                "line_number": 35,
                "text": "or equal to TopFieldOrderCnt"
            },
            {
                "line_number": 36,
                "text": "7 frame doubling field_pic_flag shall be 0, 2"
            },
            {
                "line_number": 37,
                "text": "fixed_frame_rate_flag shall be 1,"
            },
            {
                "line_number": 38,
                "text": "TopFieldOrderCnt shall be equal to"
            },
            {
                "line_number": 39,
                "text": "BottomFieldOrderCnt"
            },
            {
                "line_number": 40,
                "text": "8 frame tripling field_pic_flag shall be 0, 3"
            },
            {
                "line_number": 41,
                "text": "fixed_frame_rate_flag shall be 1,"
            },
            {
                "line_number": 42,
                "text": "TopFieldOrderCnt shall be equal to"
            },
            {
                "line_number": 43,
                "text": "BottomFieldOrderCnt"
            },
            {
                "line_number": 44,
                "text": "9..15 reserved"
            },
            {
                "line_number": 45,
                "text": "When fixed_frame_rate_flag is equal to 1, it is a requirement of bitstream conformance that the constraints specified as"
            },
            {
                "line_number": 46,
                "text": "follows shall be obeyed throughout the operation of the following process, which is operated in output order."
            },
            {
                "line_number": 47,
                "text": "1. Prior to output of the first picture of the bitstream (in output order) and prior to the output of the first picture (in"
            },
            {
                "line_number": 48,
                "text": "output order) of each subsequent coded video sequence for which the content of the active sequence parameter set"
            },
            {
                "line_number": 49,
                "text": "differs from that of the previously-active sequence parameter set, the variable lastFieldBottom is set equal to \"not"
            },
            {
                "line_number": 50,
                "text": "determined\"."
            },
            {
                "line_number": 51,
                "text": "Rec. ITU-T H.264 (06/2019) 351"
            }
        ]
    },
    {
        "page_number": 374,
        "lines": [
            {
                "line_number": 1,
                "text": "2. After the output of each picture, the value of lastFieldBottom is checked and set as follows, using the values of"
            },
            {
                "line_number": 2,
                "text": "field_pic_flag, bottom_field_flag, pic_struct, TopFieldOrderCnt and BottomFieldOrderCnt (when applicable) for"
            },
            {
                "line_number": 3,
                "text": "the picture that was output."
            },
            {
                "line_number": 4,
                "text": "– If field_pic_flag is equal to 1, it is a requirement of bitstream conformance that the value of lastFieldBottom"
            },
            {
                "line_number": 5,
                "text": "shall not be equal to bottom_field_flag. The value of lastFieldBottom is then set equal to bottom_field_flag."
            },
            {
                "line_number": 6,
                "text": "– Otherwise (field_pic_flag is equal to 0), the following applies:"
            },
            {
                "line_number": 7,
                "text": "– If pic_struct is present and is equal to 3 or 5, it is a requirement of bitstream conformance that the value"
            },
            {
                "line_number": 8,
                "text": "of lastFieldBottom shall not be equal to 0. The value of lastFieldBottom is then set equal to"
            },
            {
                "line_number": 9,
                "text": "1 − ( ( pic_struct − 1 ) >> 2 )."
            },
            {
                "line_number": 10,
                "text": "– Otherwise, if pic_struct is present and is equal to 4 or 6, it is a requirement of bitstream conformance"
            },
            {
                "line_number": 11,
                "text": "that the value of lastFieldBottom shall not be equal to 1. The value of lastFieldBottom is then set equal"
            },
            {
                "line_number": 12,
                "text": "to ( ( pic_struct − 1 ) >> 2 )."
            },
            {
                "line_number": 13,
                "text": "– Otherwise, if TopFieldOrderCnt is less than BottomFieldOrderCnt, it is a requirement of bitstream"
            },
            {
                "line_number": 14,
                "text": "conformance that the value of lastFieldBottom shall not be equal to 0. The value of lastFieldBottom is"
            },
            {
                "line_number": 15,
                "text": "then set equal to 1."
            },
            {
                "line_number": 16,
                "text": "– Otherwise, if TopFieldOrderCnt is greater than BottomFieldOrderCnt, it is a requirement of bitstream"
            },
            {
                "line_number": 17,
                "text": "conformance that the value of lastFieldBottom shall not be equal to 1. The value of lastFieldBottom is"
            },
            {
                "line_number": 18,
                "text": "then set equal to 0."
            },
            {
                "line_number": 19,
                "text": "– Otherwise (TopFieldOrderCnt is equal to BottomFieldOrderCnt and pic_struct is not present or is not"
            },
            {
                "line_number": 20,
                "text": "in the range of 3 to 6, inclusive), lastFieldBottom may have any value, and its value is not changed."
            },
            {
                "line_number": 21,
                "text": "NumClockTS is determined by pic_struct as specified in Table D-1. There are up to NumClockTS sets of clock timestamp"
            },
            {
                "line_number": 22,
                "text": "information for a picture, as specified by clock_timestamp_flag[ i ] for each set. The sets of clock timestamp information"
            },
            {
                "line_number": 23,
                "text": "apply to the field(s) or the frame(s) associated with the picture by pic_struct."
            },
            {
                "line_number": 24,
                "text": "The contents of the clock timestamp syntax elements indicate a time of origin, capture, or alternative ideal display. This"
            },
            {
                "line_number": 25,
                "text": "indicated time is computed as"
            },
            {
                "line_number": 26,
                "text": "clockTimestamp = ( ( hH * 60 + mM ) * 60 + sS ) * time_scale +"
            },
            {
                "line_number": 27,
                "text": "nFrames * ( num_units_in_tick * ( 1 + nuit_field_based_flag ) ) + tOffset, (D-1)"
            },
            {
                "line_number": 28,
                "text": "in units of clock ticks of a clock with clock frequency equal to time_scale Hz, relative to some unspecified point in time"
            },
            {
                "line_number": 29,
                "text": "for which clockTimestamp is equal to 0. Output order and DPB output timing are not affected by the value of"
            },
            {
                "line_number": 30,
                "text": "clockTimestamp. When two or more frames with pic_struct equal to 0 are consecutive in output order and have equal"
            },
            {
                "line_number": 31,
                "text": "values of clockTimestamp, the indication is that the frames represent the same content and that the last such frame in output"
            },
            {
                "line_number": 32,
                "text": "order is the preferred representation."
            },
            {
                "line_number": 33,
                "text": "NOTE 7 – clockTimestamp time indications may aid display on devices with refresh rates other than those well-matched to DPB"
            },
            {
                "line_number": 34,
                "text": "output times."
            },
            {
                "line_number": 35,
                "text": "clock_timestamp_flag[ i ] equal to 1 indicates that a number of clock timestamp syntax elements are present and follow"
            },
            {
                "line_number": 36,
                "text": "immediately. clock_timestamp_flag[ i ] equal to 0 indicates that the associated clock timestamp syntax elements are not"
            },
            {
                "line_number": 37,
                "text": "present. When NumClockTS is greater than 1 and clock_timestamp_flag[ i ] is equal to 1 for more than one value of i, the"
            },
            {
                "line_number": 38,
                "text": "value of clockTimestamp shall be non-decreasing with increasing value of i."
            },
            {
                "line_number": 39,
                "text": "ct_type indicates the scan type (interlaced or progressive) of the source material as specified in Table D-2."
            },
            {
                "line_number": 40,
                "text": "Two fields of a coded frame may have different values of ct_type."
            },
            {
                "line_number": 41,
                "text": "When clockTimestamp is equal for two fields of opposite parity that are consecutive in output order, both with ct_type"
            },
            {
                "line_number": 42,
                "text": "equal to 0 (progressive) or ct_type equal to 2 (unknown), the two fields are indicated to have come from the same original"
            },
            {
                "line_number": 43,
                "text": "progressive frame. Two consecutive fields in output order shall have different values of clockTimestamp when the value"
            },
            {
                "line_number": 44,
                "text": "of ct_type for either field is 1 (interlaced)."
            },
            {
                "line_number": 45,
                "text": "352 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 375,
        "lines": [
            {
                "line_number": 1,
                "text": "Table D-2 – Mapping of ct_type to source picture scan"
            },
            {
                "line_number": 2,
                "text": "Original"
            },
            {
                "line_number": 3,
                "text": "Value"
            },
            {
                "line_number": 4,
                "text": "picture scan"
            },
            {
                "line_number": 5,
                "text": "0 progressive"
            },
            {
                "line_number": 6,
                "text": "1 interlaced"
            },
            {
                "line_number": 7,
                "text": "2 unknown"
            },
            {
                "line_number": 8,
                "text": "3 reserved"
            },
            {
                "line_number": 9,
                "text": "nuit_field_based_flag is used in calculating clockTimestamp, as specified in Equation D-1."
            },
            {
                "line_number": 10,
                "text": "counting_type specifies the method of dropping values of the n_frames as specified in Table D-3."
            },
            {
                "line_number": 11,
                "text": "Table D-3 – Definition of counting_type values"
            },
            {
                "line_number": 12,
                "text": "Value Interpretation"
            },
            {
                "line_number": 13,
                "text": "0 no dropping of n_frames count values and no use of"
            },
            {
                "line_number": 14,
                "text": "time_offset"
            },
            {
                "line_number": 15,
                "text": "1 no dropping of n_frames count values"
            },
            {
                "line_number": 16,
                "text": "2 dropping of individual zero values of n_frames count"
            },
            {
                "line_number": 17,
                "text": "3 dropping of individual MaxFPS − 1 values of n_frames"
            },
            {
                "line_number": 18,
                "text": "count"
            },
            {
                "line_number": 19,
                "text": "4 dropping of the two lowest (value 0 and 1) n_frames"
            },
            {
                "line_number": 20,
                "text": "counts when seconds_value is equal to 0 and"
            },
            {
                "line_number": 21,
                "text": "minutes_value is not an integer multiple of 10"
            },
            {
                "line_number": 22,
                "text": "5 dropping of unspecified individual n_frames count values"
            },
            {
                "line_number": 23,
                "text": "6 dropping of unspecified numbers of unspecified n_frames"
            },
            {
                "line_number": 24,
                "text": "count values"
            },
            {
                "line_number": 25,
                "text": "7..31 reserved"
            },
            {
                "line_number": 26,
                "text": "full_timestamp_flag equal to 1 specifies that the n_frames syntax element is followed by seconds_value, minutes_value,"
            },
            {
                "line_number": 27,
                "text": "and hours_value. full_timestamp_flag equal to 0 specifies that the n_frames syntax element is followed by seconds_flag."
            },
            {
                "line_number": 28,
                "text": "discontinuity_flag equal to 0 indicates that the difference between the current value of clockTimestamp and the value of"
            },
            {
                "line_number": 29,
                "text": "clockTimestamp computed from the previous clock timestamp in output order can be interpreted as the time difference"
            },
            {
                "line_number": 30,
                "text": "between the times of origin or capture of the associated frames or fields. discontinuity_flag equal to 1 indicates that the"
            },
            {
                "line_number": 31,
                "text": "difference between the current value of clockTimestamp and the value of clockTimestamp computed from the previous"
            },
            {
                "line_number": 32,
                "text": "clock timestamp in output order should not be interpreted as the time difference between the times of origin or capture of"
            },
            {
                "line_number": 33,
                "text": "the associated frames or fields. When discontinuity_flag is equal to 0, the value of clockTimestamp shall be greater than"
            },
            {
                "line_number": 34,
                "text": "or equal to all values of clockTimestamp present for the preceding picture in DPB output order."
            },
            {
                "line_number": 35,
                "text": "cnt_dropped_flag specifies the skipping of one or more values of n_frames using the counting method specified by"
            },
            {
                "line_number": 36,
                "text": "counting_type."
            },
            {
                "line_number": 37,
                "text": "n_frames specifies the value of nFrames used to compute clockTimestamp. n_frames shall be less than"
            },
            {
                "line_number": 38,
                "text": "MaxFPS = Ceil( time_scale ÷ ( 2 * num_units_in_tick ) ) (D-2)"
            },
            {
                "line_number": 39,
                "text": "NOTE 8 – n_frames is a frame-based counter. For field-specific timing indications, time_offset should be used to indicate a distinct"
            },
            {
                "line_number": 40,
                "text": "clockTimestamp for each field."
            },
            {
                "line_number": 41,
                "text": "When counting_type is equal to 2 and cnt_dropped_flag is equal to 1, n_frames shall be equal to 1 and the value of"
            },
            {
                "line_number": 42,
                "text": "n_frames for the previous picture in output order shall not be equal to 0 unless discontinuity_flag is equal to 1."
            },
            {
                "line_number": 43,
                "text": "NOTE 9 – When counting_type is equal to 2, the need for increasingly large magnitudes of tOffset in Equation D-1 when using"
            },
            {
                "line_number": 44,
                "text": "fixed non-integer frame rates (e.g., 12.5 frames per second with time_scale equal to 50 and num_units_in_tick equal to 2 and"
            },
            {
                "line_number": 45,
                "text": "Rec. ITU-T H.264 (06/2019) 353"
            }
        ]
    },
    {
        "page_number": 376,
        "lines": [
            {
                "line_number": 1,
                "text": "nuit_field_based_flag equal to 0) can be avoided by occasionally skipping over the value n_frames equal to 0 when counting (e.g.,"
            },
            {
                "line_number": 2,
                "text": "counting n_frames from 0 to 12, then incrementing seconds_value and counting n_frames from 1 to 12, then incrementing"
            },
            {
                "line_number": 3,
                "text": "seconds_value and counting n_frames from 0 to 12, etc.)."
            },
            {
                "line_number": 4,
                "text": "When counting_type is equal to 3 and cnt_dropped_flag is equal to 1, n_frames shall be equal to 0 and the value of"
            },
            {
                "line_number": 5,
                "text": "n_frames for the previous picture in output order shall not be equal to MaxFPS − 1 unless discontinuity_flag is equal to 1."
            },
            {
                "line_number": 6,
                "text": "NOTE 10 – When counting_type is equal to 3, the need for increasingly large magnitudes of tOffset in Equation D-1 when using"
            },
            {
                "line_number": 7,
                "text": "fixed non-integer frame rates (e.g., 12.5 frames per second with time_scale equal to 50 and num_units_in_tick equal to 2 and"
            },
            {
                "line_number": 8,
                "text": "nuit_field_based_flag equal to 0) can be avoided by occasionally skipping over the value n_frames equal to MaxFPS − 1 when"
            },
            {
                "line_number": 9,
                "text": "counting (e.g., counting n_frames from 0 to 12, then incrementing seconds_value and counting n_frames from 0 to 11, then"
            },
            {
                "line_number": 10,
                "text": "incrementing seconds_value and counting n_frames from 0 to 12, etc.)."
            },
            {
                "line_number": 11,
                "text": "When counting_type is equal to 4 and cnt_dropped_flag is equal to 1, n_frames shall be equal to 2 and the specified value"
            },
            {
                "line_number": 12,
                "text": "of sS shall be zero and the specified value of mM shall not be an integer multiple of ten and n_frames for the previous"
            },
            {
                "line_number": 13,
                "text": "picture in output order shall not be equal to 0 or 1 unless discontinuity_flag is equal to 1."
            },
            {
                "line_number": 14,
                "text": "NOTE 11 – When counting_type is equal to 4, the need for increasingly large magnitudes of tOffset in Equation D-1 when using"
            },
            {
                "line_number": 15,
                "text": "fixed non-integer frame rates (e.g., 30000÷1001 frames per second with time_scale equal to 60000 and num_units_in_tick equal"
            },
            {
                "line_number": 16,
                "text": "to 1 001 and nuit_field_based_flag equal to 1) can be reduced by occasionally skipping over the values of n_frames equal to 0 and 1"
            },
            {
                "line_number": 17,
                "text": "when counting (e.g., counting n_frames from 0 to 29, then incrementing seconds_value and counting n_frames from 0 to 29, etc.,"
            },
            {
                "line_number": 18,
                "text": "until the seconds_value is zero and minutes_value is not an integer multiple of ten, then counting n_frames from 2 to 29, then"
            },
            {
                "line_number": 19,
                "text": "incrementing seconds_value and counting n_frames from 0 to 29, etc.). This counting method is well known in industry and is often"
            },
            {
                "line_number": 20,
                "text": "referred to as \"NTSC drop-frame\" counting."
            },
            {
                "line_number": 21,
                "text": "When counting_type is equal to 5 or 6 and cnt_dropped_flag is equal to 1, n_frames shall not be equal to 1 plus the value"
            },
            {
                "line_number": 22,
                "text": "of n_frames for the previous picture in output order modulo MaxFPS unless discontinuity_flag is equal to 1."
            },
            {
                "line_number": 23,
                "text": "NOTE 12 – When counting_type is equal to 5 or 6, the need for increasingly large magnitudes of tOffset in Equation D-1 when"
            },
            {
                "line_number": 24,
                "text": "using fixed non-integer frame rates can be avoided by occasionally skipping over some values of n_frames when counting. The"
            },
            {
                "line_number": 25,
                "text": "specific values of n_frames that are skipped are not specified when counting_type is equal to 5 or 6."
            },
            {
                "line_number": 26,
                "text": "seconds_flag equal to 1 specifies that seconds_value and minutes_flag are present when full_timestamp_flag is equal to 0."
            },
            {
                "line_number": 27,
                "text": "seconds_flag equal to 0 specifies that seconds_value and minutes_flag are not present."
            },
            {
                "line_number": 28,
                "text": "seconds_value specifies the value of sS used to compute clockTimestamp. The value of seconds_value shall be in the"
            },
            {
                "line_number": 29,
                "text": "range of 0 to 59, inclusive. When seconds_value is not present, the previous seconds_value in decoding order shall be used"
            },
            {
                "line_number": 30,
                "text": "as sS to compute clockTimestamp."
            },
            {
                "line_number": 31,
                "text": "minutes_flag equal to 1 specifies that minutes_value and hours_flag are present when full_timestamp_flag is equal to 0"
            },
            {
                "line_number": 32,
                "text": "and seconds_flag is equal to 1. minutes_flag equal to 0 specifies that minutes_value and hours_flag are not present."
            },
            {
                "line_number": 33,
                "text": "minutes_value specifies the value of mM used to compute clockTimestamp. The value of minutes_value shall be in the"
            },
            {
                "line_number": 34,
                "text": "range of 0 to 59, inclusive. When minutes_value is not present, the previous minutes_value in decoding order shall be used"
            },
            {
                "line_number": 35,
                "text": "as mM to compute clockTimestamp."
            },
            {
                "line_number": 36,
                "text": "hours_flag equal to 1 specifies that hours_value is present when full_timestamp_flag is equal to 0 and seconds_flag is"
            },
            {
                "line_number": 37,
                "text": "equal to 1 and minutes_flag is equal to 1."
            },
            {
                "line_number": 38,
                "text": "hours_value specifies the value of hH used to compute clockTimestamp. The value of hours_value shall be in the range"
            },
            {
                "line_number": 39,
                "text": "of 0 to 23, inclusive. When hours_value is not present, the previous hours_value in decoding order shall be used as hH to"
            },
            {
                "line_number": 40,
                "text": "compute clockTimestamp."
            },
            {
                "line_number": 41,
                "text": "time_offset specifies the value of tOffset used to compute clockTimestamp. The number of bits used to represent"
            },
            {
                "line_number": 42,
                "text": "time_offset shall be equal to time_offset_length. When time_offset is not present, the value 0 shall be used as tOffset to"
            },
            {
                "line_number": 43,
                "text": "compute clockTimestamp."
            },
            {
                "line_number": 44,
                "text": "D.2.4 Pan-scan rectangle SEI message semantics"
            },
            {
                "line_number": 45,
                "text": "The pan-scan rectangle SEI message syntax elements specify the coordinates of a rectangle relative to the cropping"
            },
            {
                "line_number": 46,
                "text": "rectangle of the sequence parameter set. Each coordinate of this rectangle is specified in units of one-sixteenth sample"
            },
            {
                "line_number": 47,
                "text": "spacing relative to the luma sampling grid."
            },
            {
                "line_number": 48,
                "text": "pan_scan_rect_id contains an identifying number that may be used to identify the purpose of the pan-scan rectangle (for"
            },
            {
                "line_number": 49,
                "text": "example, to identify the rectangle as the area to be shown on a particular display device or as the area that contains a"
            },
            {
                "line_number": 50,
                "text": "particular actor in the scene). The value of pan_scan_rect_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 51,
                "text": "Values of pan_scan_rect_id from 0 to 255, inclusive, and from 512 to 231 − 1, inclusive, may be used as determined by the"
            },
            {
                "line_number": 52,
                "text": "application. Values of pan_scan_rect_id from 256 to 511, inclusive, and from 231 to 232 − 2, inclusive, are reserved for"
            },
            {
                "line_number": 53,
                "text": "future use by ITU-T | ISO/IEC. Decoders encountering a value of pan_scan_rect_id in the range of 256 to 511, inclusive,"
            },
            {
                "line_number": 54,
                "text": "or in the range of 231 to 232 − 2, inclusive, shall ignore it."
            },
            {
                "line_number": 55,
                "text": "354 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 377,
        "lines": [
            {
                "line_number": 1,
                "text": "pan_scan_rect_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous pan-scan"
            },
            {
                "line_number": 2,
                "text": "rectangle SEI message in output order. pan_scan_rect_cancel_flag equal to 0 indicates that pan-scan rectangle information"
            },
            {
                "line_number": 3,
                "text": "follows."
            },
            {
                "line_number": 4,
                "text": "pan_scan_cnt_minus1 specifies the number of pan-scan rectangles that are present in the SEI message."
            },
            {
                "line_number": 5,
                "text": "pan_scan_cnt_minus1 shall be in the range of 0 to 2, inclusive. pan_scan_cnt_minus1 equal to 0 indicates that a single"
            },
            {
                "line_number": 6,
                "text": "pan-scan rectangle is present that applies to all fields of the decoded picture. pan_scan_cnt_minus1 shall be equal to 0"
            },
            {
                "line_number": 7,
                "text": "when the current picture is a field. pan_scan_cnt_minus1 equal to 1 indicates that two pan-scan rectangles are present, the"
            },
            {
                "line_number": 8,
                "text": "first of which applies to the first field of the picture in output order and the second of which applies to the second field of"
            },
            {
                "line_number": 9,
                "text": "the picture in output order. pan_scan_cnt_minus1 equal to 2 indicates that three pan-scan rectangles are present, the first"
            },
            {
                "line_number": 10,
                "text": "of which applies to the first field of the picture in output order, the second of which applies to the second field of the picture"
            },
            {
                "line_number": 11,
                "text": "in output order, and the third of which applies to a repetition of the first field as a third field in output order."
            },
            {
                "line_number": 12,
                "text": "pan_scan_rect_left_offset[ i ], pan_scan_rect_right_offset[ i ], pan_scan_rect_top_offset[ i ], and"
            },
            {
                "line_number": 13,
                "text": "pan_scan_rect_bottom_offset[ i ], specify, as signed integer quantities in units of one-sixteenth sample spacing relative"
            },
            {
                "line_number": 14,
                "text": "to the luma sampling grid, the location of the pan-scan rectangle. The values of each of these four syntax elements shall"
            },
            {
                "line_number": 15,
                "text": "be in the range of −231 + 1 to 231 − 1, inclusive."
            },
            {
                "line_number": 16,
                "text": "The pan-scan rectangle is specified, in units of one-sixteenth sample spacing relative to a luma frame sampling grid, as the"
            },
            {
                "line_number": 17,
                "text": "region with frame horizontal coordinates from 16*CropUnitX * frame_crop_left_offset + pan_scan_rect_left_offset[ i ] to"
            },
            {
                "line_number": 18,
                "text": "16 * ( 16 * PicWidthInMbs − CropUnitX * frame_crop_right_offset ) + pan_scan_rect_right_offset[ i ] − 1 and with"
            },
            {
                "line_number": 19,
                "text": "vertical coordinates from 16 *CropUnitY * frame_crop_top_offset + pan_scan_rect_top_offset[ i ] to"
            },
            {
                "line_number": 20,
                "text": "16 * ( 16 * PicHeightInMbs − CropUnitY * frame_crop_bottom_offset ) + pan_scan_rect_bottom_offset[ i ] − 1,"
            },
            {
                "line_number": 21,
                "text": "inclusive. The value of 16 * CropUnitX * frame_crop_left_offset + pan_scan_rect_left_offset[ i ] shall be less than or"
            },
            {
                "line_number": 22,
                "text": "equal to 16 * ( 16 * PicWidthInMbs − CropUnitX * frame_crop_right_offset ) + pan_scan_rect_right_offset[ i ] − 1; and"
            },
            {
                "line_number": 23,
                "text": "the value of 16 * CropUnitY * frame_crop_top_offset + pan_scan_rect_top_offset[ i ] shall be less than or equal to"
            },
            {
                "line_number": 24,
                "text": "16 * ( 16 * PicHeightInMbs − CropUnitY * frame_crop_bottom_offset ) + pan_scan_rect_bottom_offset[ i ] − 1."
            },
            {
                "line_number": 25,
                "text": "When the pan-scan rectangular area includes samples outside of the cropping rectangle, the region outside of the cropping"
            },
            {
                "line_number": 26,
                "text": "rectangle may be filled with synthesized content (such as black video content or neutral grey video content) for display."
            },
            {
                "line_number": 27,
                "text": "pan_scan_rect_repetition_period specifies the persistence of the pan-scan rectangle SEI message and may specify a"
            },
            {
                "line_number": 28,
                "text": "picture order count interval within which another pan-scan rectangle SEI message with the same value of pan_scan_rect_id"
            },
            {
                "line_number": 29,
                "text": "or the end of the coded video sequence shall be present in the bitstream. The value of pan_scan_rect_repetition_period"
            },
            {
                "line_number": 30,
                "text": "shall be in the range of 0 to 16 384, inclusive. When pan_scan_cnt_minus1 is greater than 0,"
            },
            {
                "line_number": 31,
                "text": "pan_scan_rect_repetition_period shall not be greater than 1."
            },
            {
                "line_number": 32,
                "text": "pan_scan_rect_repetition_period equal to 0 specifies that the pan-scan rectangle information applies to the current decoded"
            },
            {
                "line_number": 33,
                "text": "picture only."
            },
            {
                "line_number": 34,
                "text": "pan_scan_rect_repetition_period equal to 1 specifies that the pan-scan rectangle information persists in output order until"
            },
            {
                "line_number": 35,
                "text": "any of the following conditions are true:"
            },
            {
                "line_number": 36,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 37,
                "text": "– A picture in an access unit containing a pan-scan rectangle SEI message with the same value of pan_scan_rect_id is"
            },
            {
                "line_number": 38,
                "text": "output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 39,
                "text": "pan_scan_rect_repetition_period equal to 0 or equal to 1 indicates that another pan-scan rectangle SEI message with the"
            },
            {
                "line_number": 40,
                "text": "same value of pan_scan_rect_id may or may not be present."
            },
            {
                "line_number": 41,
                "text": "pan_scan_rect_repetition_period greater than 1 specifies that the pan-scan rectangle information persists until any of the"
            },
            {
                "line_number": 42,
                "text": "following conditions are true:"
            },
            {
                "line_number": 43,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 44,
                "text": "– A picture in an access unit containing a pan-scan rectangle SEI message with the same value of pan_scan_rect_id is"
            },
            {
                "line_number": 45,
                "text": "output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) +"
            },
            {
                "line_number": 46,
                "text": "pan_scan_rect_repetition_period."
            },
            {
                "line_number": 47,
                "text": "pan_scan_rect_repetition_period greater than 1 indicates that another pan-scan rectangle SEI message with the same value"
            },
            {
                "line_number": 48,
                "text": "of pan_scan_rect_id shall be present for a picture in an access unit that is output having PicOrderCnt( ) greater than"
            },
            {
                "line_number": 49,
                "text": "PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) + pan_scan_rect_repetition_period; unless the"
            },
            {
                "line_number": 50,
                "text": "bitstream ends or a new coded video sequence begins without output of such a picture."
            },
            {
                "line_number": 51,
                "text": "D.2.5 Filler payload SEI message semantics"
            },
            {
                "line_number": 52,
                "text": "This message contains a series of payloadSize bytes of value 0xFF, which can be discarded."
            },
            {
                "line_number": 53,
                "text": "ff_byte shall be a byte having the value 0xFF."
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 355"
            }
        ]
    },
    {
        "page_number": 378,
        "lines": [
            {
                "line_number": 1,
                "text": "D.2.6 User data registered by Rec. ITU-T T.35 SEI message semantics"
            },
            {
                "line_number": 2,
                "text": "This message contains user data registered as specified by Rec. ITU-T T.35, the contents of which are not specified by this"
            },
            {
                "line_number": 3,
                "text": "Recommendation | International Standard."
            },
            {
                "line_number": 4,
                "text": "itu_t_t35_country_code shall be a byte having a value specified as a country code by Rec. ITU-T T.35 Annex A."
            },
            {
                "line_number": 5,
                "text": "itu_t_t35_country_code_extension_byte shall be a byte having a value specified as a country code by Rec. ITU-T T.35"
            },
            {
                "line_number": 6,
                "text": "Annex B."
            },
            {
                "line_number": 7,
                "text": "itu_t_t35_payload_byte shall be a byte containing data registered as specified by Rec. ITU-T T.35."
            },
            {
                "line_number": 8,
                "text": "The ITU-T T.35 terminal provider code and terminal provider oriented code shall be contained in the first one or more"
            },
            {
                "line_number": 9,
                "text": "bytes of the itu_t_t35_payload_byte, in the format specified by the Administration that issued the terminal provider code."
            },
            {
                "line_number": 10,
                "text": "Any remaining itu_t_t35_payload_byte data shall be data having syntax and semantics as specified by the entity identified"
            },
            {
                "line_number": 11,
                "text": "by the ITU-T T.35 country code and terminal provider code."
            },
            {
                "line_number": 12,
                "text": "D.2.7 User data unregistered SEI message semantics"
            },
            {
                "line_number": 13,
                "text": "This message contains unregistered user data identified by a UUID, the contents of which are not specified by this"
            },
            {
                "line_number": 14,
                "text": "Recommendation | International Standard."
            },
            {
                "line_number": 15,
                "text": "uuid_iso_iec_11578 shall have a value specified as a UUID according to the procedures of ISO/IEC 11578:1996 Annex A."
            },
            {
                "line_number": 16,
                "text": "user_data_payload_byte shall be a byte containing data having syntax and semantics as specified by the UUID generator."
            },
            {
                "line_number": 17,
                "text": "D.2.8 Recovery point SEI message semantics"
            },
            {
                "line_number": 18,
                "text": "The recovery point SEI message assists a decoder in determining when the decoding process will produce acceptable"
            },
            {
                "line_number": 19,
                "text": "pictures for display after the decoder initiates random access or after the encoder indicates a broken link in the coded video"
            },
            {
                "line_number": 20,
                "text": "sequence. When the decoding process is started with the access unit in decoding order associated with the recovery point"
            },
            {
                "line_number": 21,
                "text": "SEI message, all decoded pictures at or subsequent to the recovery point in output order specified in this SEI message are"
            },
            {
                "line_number": 22,
                "text": "indicated to be correct or approximately correct in content. Decoded pictures produced by random access at or before the"
            },
            {
                "line_number": 23,
                "text": "picture associated with the recovery point SEI message need not be correct in content until the indicated recovery point,"
            },
            {
                "line_number": 24,
                "text": "and the operation of the decoding process starting at the picture associated with the recovery point SEI message may"
            },
            {
                "line_number": 25,
                "text": "contain references to pictures not available in the decoded picture buffer."
            },
            {
                "line_number": 26,
                "text": "In addition, by use of the broken_link_flag, the recovery point SEI message can indicate to the decoder the location of"
            },
            {
                "line_number": 27,
                "text": "some pictures in the bitstream that can result in serious visual artefacts when displayed, even when the decoding process"
            },
            {
                "line_number": 28,
                "text": "was begun at the location of a previous IDR access unit in decoding order."
            },
            {
                "line_number": 29,
                "text": "NOTE 1 – The broken_link_flag can be used by encoders to indicate the location of a point after which the decoding process for the"
            },
            {
                "line_number": 30,
                "text": "decoding of some pictures may cause references to pictures that, though available for use in the decoding process, are not the pictures"
            },
            {
                "line_number": 31,
                "text": "that were used for reference when the bitstream was originally encoded (e.g., due to a splicing operation performed during the"
            },
            {
                "line_number": 32,
                "text": "generation of the bitstream)."
            },
            {
                "line_number": 33,
                "text": "The recovery point is specified as a count in units of frame_num increments subsequent to the frame_num of the current"
            },
            {
                "line_number": 34,
                "text": "access unit at the position of the SEI message."
            },
            {
                "line_number": 35,
                "text": "NOTE 2 – When HRD information is present in the bitstream, a buffering period SEI message should be associated with the access"
            },
            {
                "line_number": 36,
                "text": "unit associated with the recovery point SEI message in order to establish initialization of the HRD buffer model after a random"
            },
            {
                "line_number": 37,
                "text": "access."
            },
            {
                "line_number": 38,
                "text": "Any picture parameter set RBSP that is referred to by a picture associated with a recovery point SEI message or by any"
            },
            {
                "line_number": 39,
                "text": "picture following such a picture in decoding order shall be available to the decoding process prior to its activation,"
            },
            {
                "line_number": 40,
                "text": "regardless of whether or not the decoding process is started at the beginning of the bitstream or with the access unit, in"
            },
            {
                "line_number": 41,
                "text": "decoding order, that is associated with the recovery point SEI message."
            },
            {
                "line_number": 42,
                "text": "Any sequence parameter set RBSP that is referred to by a picture associated with a recovery point SEI message or by any"
            },
            {
                "line_number": 43,
                "text": "picture following such a picture in decoding order shall be available to the decoding process prior to its activation,"
            },
            {
                "line_number": 44,
                "text": "regardless of whether or not the decoding process is started at the beginning of the bitstream or with the access unit, in"
            },
            {
                "line_number": 45,
                "text": "decoding order, that is associated with the recovery point SEI message."
            },
            {
                "line_number": 46,
                "text": "recovery_frame_cnt specifies the recovery point of output pictures in output order. All decoded pictures in output order"
            },
            {
                "line_number": 47,
                "text": "are indicated to be correct or approximately correct in content starting at the output order position of the reference picture"
            },
            {
                "line_number": 48,
                "text": "having the frame_num equal to the frame_num of the VCL NAL units for the current access unit incremented by"
            },
            {
                "line_number": 49,
                "text": "recovery_frame_cnt in modulo MaxFrameNum arithmetic. recovery_frame_cnt shall be in the range of 0 to"
            },
            {
                "line_number": 50,
                "text": "MaxFrameNum − 1, inclusive."
            },
            {
                "line_number": 51,
                "text": "exact_match_flag indicates whether decoded pictures at and subsequent to the specified recovery point in output order"
            },
            {
                "line_number": 52,
                "text": "derived by starting the decoding process at the access unit associated with the recovery point SEI message shall be an exact"
            },
            {
                "line_number": 53,
                "text": "match to the pictures that would be produced by starting the decoding process at the location of a previous IDR access unit"
            },
            {
                "line_number": 54,
                "text": "356 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 379,
        "lines": [
            {
                "line_number": 1,
                "text": "in the NAL unit stream. The value 0 indicates that the match need not be exact and the value 1 indicates that the match"
            },
            {
                "line_number": 2,
                "text": "shall be exact."
            },
            {
                "line_number": 3,
                "text": "When decoding starts from the location of the recovery point SEI message, all references to not available reference pictures"
            },
            {
                "line_number": 4,
                "text": "shall be inferred as references to pictures containing only macroblocks coded using Intra macroblock prediction modes"
            },
            {
                "line_number": 5,
                "text": "and having sample values given by Y samples equal to ( 1 << ( BitDepth − 1 ) ), Cb samples equal to"
            },
            {
                "line_number": 6,
                "text": "Y"
            },
            {
                "line_number": 7,
                "text": "( 1 << ( BitDepth − 1 ) ), and Cr samples equal to ( 1 << ( BitDepth − 1 ) ) (mid-level grey) for purposes of determining"
            },
            {
                "line_number": 8,
                "text": "C C"
            },
            {
                "line_number": 9,
                "text": "the conformance of the value of exact_match_flag."
            },
            {
                "line_number": 10,
                "text": "NOTE 3 – When performing random access, decoders should infer all references to not available reference pictures as references to"
            },
            {
                "line_number": 11,
                "text": "pictures containing only intra macroblocks and having sample values given by Y equal to ( 1 << ( BitDepthY − 1 ) ), Cb equal to"
            },
            {
                "line_number": 12,
                "text": "( 1 << ( BitDepthC − 1 ) ), and Cr equal to ( 1 << ( BitDepthC − 1 ) ) (mid-level grey), regardless of the value of exact_match_flag."
            },
            {
                "line_number": 13,
                "text": "When exact_match_flag is equal to 0, the quality of the approximation at the recovery point is chosen by the encoding"
            },
            {
                "line_number": 14,
                "text": "process and is not specified by this Recommendation | International Standard."
            },
            {
                "line_number": 15,
                "text": "NOTE 4 – Under some circumstances, the decoding process of pictures depends on the difference DiffPicOrderCnt( picA, picB )"
            },
            {
                "line_number": 16,
                "text": "between the PicOrderCnt( ) values for two pictures picA and picB. However, no particular values of TopFieldOrderCnt and"
            },
            {
                "line_number": 17,
                "text": "BottomFieldOrderCnt (as applicable) are specified to be assigned to the reference pictures that are not available due to the initiation"
            },
            {
                "line_number": 18,
                "text": "of random access at the location of a picture associated with a recovery point SEI message. Also, no particular value has been"
            },
            {
                "line_number": 19,
                "text": "specified for initialization (for random access purposes) of the related variables prevPicOrderCntMsb, prevPicOrderCntLsb,"
            },
            {
                "line_number": 20,
                "text": "prevFraneNumOffset, and prevFrameNum. Thus, any values for these variables may be assigned that could hypothetically have"
            },
            {
                "line_number": 21,
                "text": "resulted from operation of the decoding process starting with a hypothetical preceding IDR picture in decoding order, although such"
            },
            {
                "line_number": 22,
                "text": "values may not be the same as the values that would have been obtained if the decoding process had started with the actual preceding"
            },
            {
                "line_number": 23,
                "text": "IDR picture in the bitstream. When performing random access at a picture associated with a recovery point SEI message, it is"
            },
            {
                "line_number": 24,
                "text": "suggested that decoders should derive the picture order count variables TopFieldOrderCnt and BottomFieldOrderCnt according to"
            },
            {
                "line_number": 25,
                "text": "the following method:"
            },
            {
                "line_number": 26,
                "text": "– A bit range greater than 32 bits should be allocated for the variables TopFieldOrderCnt and BottomFieldOrderCnt for each"
            },
            {
                "line_number": 27,
                "text": "current picture to be decoded, as well as for the intermediate variables used for deriving these variables as specified in"
            },
            {
                "line_number": 28,
                "text": "clause 8.2.1. (Due to the lack of assurance of correspondence of the values used for initialization of the related variables when"
            },
            {
                "line_number": 29,
                "text": "random access is performed to the values that would be obtained if the decoding process had begun with the preceding IDR"
            },
            {
                "line_number": 30,
                "text": "picture in decoding order, the calculations involving these variables in the decoding process of subsequent pictures may result"
            },
            {
                "line_number": 31,
                "text": "in violation of the 32 bit range.)"
            },
            {
                "line_number": 32,
                "text": "– Any value within in the range of −231 to 231 − 1, inclusive, may be assigned to the values of the variables TopFieldOrderCnt"
            },
            {
                "line_number": 33,
                "text": "and BottomFieldOrderCnt of the reference pictures that are not available due to the random access operation. For example, the"
            },
            {
                "line_number": 34,
                "text": "value 0 may be assigned to these variables."
            },
            {
                "line_number": 35,
                "text": "– For the derivation of the picture order count variables for the picture at which random access is performed,"
            },
            {
                "line_number": 36,
                "text": "prevPicOrderCntMsb may be set equal to any integer multiple of MaxPicOrderCntLsb in the range of −231 to 231 − 1, inclusive,"
            },
            {
                "line_number": 37,
                "text": "prevPicOrderCntLsb may be set equal to any value in the range of 0 to MaxPicOrderCntLsb − 1, inclusive,"
            },
            {
                "line_number": 38,
                "text": "prevFrameNumOffset may be set equal to any integer multiple of MaxFrameNum in the range of 0 to 231 − 1, inclusive, and"
            },
            {
                "line_number": 39,
                "text": "prevFrameNum may be set equal to any value in the range of 0 to MaxFrameNum − 1, inclusive. For example, the value 0 may"
            },
            {
                "line_number": 40,
                "text": "be assigned to all of the variables prevPicOrderCntMsb, prevPicOrderCntLsb, prevFrameNumOffset, and prevFrameNum."
            },
            {
                "line_number": 41,
                "text": "When exact_match_flag is equal to 1, it is a requirement of bitstream conformance that the values of the samples in the"
            },
            {
                "line_number": 42,
                "text": "decoded pictures at or subsequent to the recovery point in output order shall be independent of the values that a decoder"
            },
            {
                "line_number": 43,
                "text": "assigns to the variables prevPicOrderCntMsb, prevPicOrderCntLsb, prevFrameNumOffset, and prevFrameNum used in"
            },
            {
                "line_number": 44,
                "text": "clause 8.2.1 for deriving the picture order count variables for the initialization of the decoding process at the picture"
            },
            {
                "line_number": 45,
                "text": "associated with the recovery point SEI message, and of the values that are assigned to the TopFieldOrderCnt and"
            },
            {
                "line_number": 46,
                "text": "BottomFieldOrderCnt variables of the reference pictures that are not available due to the random access operation."
            },
            {
                "line_number": 47,
                "text": "broken_link_flag indicates the presence or absence of a broken link in the NAL unit stream at the location of the recovery"
            },
            {
                "line_number": 48,
                "text": "point SEI message and is assigned further semantics as follows:"
            },
            {
                "line_number": 49,
                "text": "– If broken_link_flag is equal to 1, pictures produced by starting the decoding process at the location of a previous IDR"
            },
            {
                "line_number": 50,
                "text": "access unit may contain undesirable visual artefacts to the extent that decoded pictures at and subsequent to the access"
            },
            {
                "line_number": 51,
                "text": "unit associated with the recovery point SEI message in decoding order should not be displayed until the specified"
            },
            {
                "line_number": 52,
                "text": "recovery point in output order."
            },
            {
                "line_number": 53,
                "text": "– Otherwise (broken_link_flag is equal to 0), no indication is given regarding any potential presence of visual artefacts."
            },
            {
                "line_number": 54,
                "text": "Regardless of the value of the broken_link_flag, pictures subsequent to the specified recovery point in output order are"
            },
            {
                "line_number": 55,
                "text": "specified to be correct or approximately correct in content."
            },
            {
                "line_number": 56,
                "text": "NOTE 5 – When a sub-sequence information SEI message is present in conjunction with a recovery point SEI message in which"
            },
            {
                "line_number": 57,
                "text": "broken_link_flag is equal to 1 and when sub_seq_layer_num is equal to 0, sub_seq_id should be different from the latest sub_seq_id"
            },
            {
                "line_number": 58,
                "text": "for sub_seq_layer_num equal to 0 that was decoded prior to the location of the recovery point SEI message. When broken_link_flag"
            },
            {
                "line_number": 59,
                "text": "is equal to 0, the sub_seq_id in sub-sequence layer 0 should remain unchanged."
            },
            {
                "line_number": 60,
                "text": "changing_slice_group_idc equal to 0 indicates that decoded pictures are correct or approximately correct in content at"
            },
            {
                "line_number": 61,
                "text": "and subsequent to the recovery point in output order when all macroblocks of the primary coded pictures are decoded"
            },
            {
                "line_number": 62,
                "text": "within the changing slice group period, i.e., the period between the access unit associated with the recovery point SEI"
            },
            {
                "line_number": 63,
                "text": "message (inclusive) and the specified recovery point (inclusive) in decoding order. changing_slice_group_idc shall be"
            },
            {
                "line_number": 64,
                "text": "Rec. ITU-T H.264 (06/2019) 357"
            }
        ]
    },
    {
        "page_number": 380,
        "lines": [
            {
                "line_number": 1,
                "text": "equal to 0 when num_slice_groups_minus1 is equal to 0 in any primary coded picture within the changing slice group"
            },
            {
                "line_number": 2,
                "text": "period."
            },
            {
                "line_number": 3,
                "text": "When changing_slice_group_idc is equal to 1 or 2, num_slice_groups_minus1 shall be equal to 1 and the"
            },
            {
                "line_number": 4,
                "text": "macroblock-to-slice-group map type 3, 4, or 5 shall be applied in each primary coded picture in the changing slice group"
            },
            {
                "line_number": 5,
                "text": "period."
            },
            {
                "line_number": 6,
                "text": "changing_slice_group_idc equal to 1 indicates that within the changing slice group period no sample values outside the"
            },
            {
                "line_number": 7,
                "text": "decoded macroblocks covered by slice group 0 are used for inter prediction of any macroblock within slice group 0. In"
            },
            {
                "line_number": 8,
                "text": "addition, changing_slice_group_idc equal to 1 indicates that when all macroblocks in slice group 0 within the changing"
            },
            {
                "line_number": 9,
                "text": "slice group period are decoded, decoded pictures will be correct or approximately correct in content at and subsequent to"
            },
            {
                "line_number": 10,
                "text": "the specified recovery point in output order regardless of whether any macroblock in slice group 1 within the changing"
            },
            {
                "line_number": 11,
                "text": "slice group period is decoded."
            },
            {
                "line_number": 12,
                "text": "changing_slice_group_idc equal to 2 indicates that within the changing slice group period no sample values outside the"
            },
            {
                "line_number": 13,
                "text": "decoded macroblocks covered by slice group 1 are used for inter prediction of any macroblock within slice group 1. In"
            },
            {
                "line_number": 14,
                "text": "addition, changing_slice_group_idc equal to 2 indicates that when all macroblocks in slice group 1 within the changing"
            },
            {
                "line_number": 15,
                "text": "slice group period are decoded, decoded pictures will be correct or approximately correct in content at and subsequent to"
            },
            {
                "line_number": 16,
                "text": "the specified recovery point in output order regardless of whether any macroblock in slice group 0 within the changing"
            },
            {
                "line_number": 17,
                "text": "slice group period is decoded."
            },
            {
                "line_number": 18,
                "text": "changing_slice_group_idc shall be in the range of 0 to 2, inclusive."
            },
            {
                "line_number": 19,
                "text": "D.2.9 Decoded reference picture marking repetition SEI message semantics"
            },
            {
                "line_number": 20,
                "text": "The decoded reference picture marking repetition SEI message is used to repeat the decoded reference picture marking"
            },
            {
                "line_number": 21,
                "text": "syntax structure that was located in the slice headers of an earlier picture in the same coded video sequence in decoding"
            },
            {
                "line_number": 22,
                "text": "order."
            },
            {
                "line_number": 23,
                "text": "original_idr_flag shall be equal to 1 when the decoded reference picture marking syntax structure occurred originally in"
            },
            {
                "line_number": 24,
                "text": "an IDR picture. original_idr_flag shall be equal to 0 when the repeated decoded reference picture marking syntax structure"
            },
            {
                "line_number": 25,
                "text": "did not occur in an IDR picture originally."
            },
            {
                "line_number": 26,
                "text": "original_frame_num shall be equal to the frame_num of the picture where the repeated decoded reference picture marking"
            },
            {
                "line_number": 27,
                "text": "syntax structure originally occurred. The picture indicated by original_frame_num is the previous coded picture having the"
            },
            {
                "line_number": 28,
                "text": "specified value of frame_num. The value of original_frame_num used to refer to a picture having a"
            },
            {
                "line_number": 29,
                "text": "memory_management_control_operation equal to 5 shall be 0."
            },
            {
                "line_number": 30,
                "text": "original_field_pic_flag shall be equal to the field_pic_flag of the picture where the repeated decoded reference picture"
            },
            {
                "line_number": 31,
                "text": "marking syntax structure originally occurred."
            },
            {
                "line_number": 32,
                "text": "original_bottom_field_flag shall be equal to the bottom_field_flag of the picture where the repeated decoded reference"
            },
            {
                "line_number": 33,
                "text": "picture marking syntax structure originally occurred."
            },
            {
                "line_number": 34,
                "text": "dec_ref_pic_marking( ) shall contain a copy of the decoded reference picture marking syntax structure of the picture that"
            },
            {
                "line_number": 35,
                "text": "has a value of frame_num equal to original_frame_num. The IdrPicFlag used in the specification of the repeated"
            },
            {
                "line_number": 36,
                "text": "dec_ref_pic_marking( ) syntax structure shall be the IdrPicFlag of the slice header(s) of the picture that has a value of"
            },
            {
                "line_number": 37,
                "text": "frame_num equal to original_frame_num (i.e., IdrPicFlag as used in clause 7.3.3.3 shall be considered equal to"
            },
            {
                "line_number": 38,
                "text": "original_idr_flag)."
            },
            {
                "line_number": 39,
                "text": "D.2.10 Spare picture SEI message semantics"
            },
            {
                "line_number": 40,
                "text": "This SEI message indicates that certain slice group map units, called spare slice group map units, in one or more decoded"
            },
            {
                "line_number": 41,
                "text": "reference pictures resemble the co-located slice group map units in a specified decoded picture called the target picture. A"
            },
            {
                "line_number": 42,
                "text": "spare slice group map unit may be used to replace a co-located, incorrectly decoded slice group map unit, in the target"
            },
            {
                "line_number": 43,
                "text": "picture. A decoded picture containing spare slice group map units is called a spare picture."
            },
            {
                "line_number": 44,
                "text": "A spare picture SEI message shall not be present in an IDR access unit. The value of the PicSizeInMapUnits variable for"
            },
            {
                "line_number": 45,
                "text": "the target picture (as specified later in this clause) shall be equal to the value of the PicSizeInMapUnits variable for the"
            },
            {
                "line_number": 46,
                "text": "sequence parameter set that is active when processing the spare picture SEI message."
            },
            {
                "line_number": 47,
                "text": "For all spare pictures identified in a spare picture SEI message, the value of frame_mbs_only_flag shall be equal to the"
            },
            {
                "line_number": 48,
                "text": "value of frame_mbs_only_flag of the target picture in the same SEI message. The spare pictures in the SEI message are"
            },
            {
                "line_number": 49,
                "text": "constrained as follows:"
            },
            {
                "line_number": 50,
                "text": "– If the target picture is a decoded field, all spare pictures identified in the same SEI message shall be decoded fields."
            },
            {
                "line_number": 51,
                "text": "– Otherwise (the target picture is a decoded frame), all spare pictures identified in the same SEI message shall be"
            },
            {
                "line_number": 52,
                "text": "decoded frames."
            },
            {
                "line_number": 53,
                "text": "358 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 381,
        "lines": [
            {
                "line_number": 1,
                "text": "For all spare pictures identified in a spare picture SEI message, the values of pic_width_in_mbs_minus1 and"
            },
            {
                "line_number": 2,
                "text": "pic_height_in_map_units_minus1 shall be equal to the values of pic_width_in_mbs_minus1 and"
            },
            {
                "line_number": 3,
                "text": "pic_height_in_map_units_minus1, respectively, of the target picture in the same SEI message. The picture associated (as"
            },
            {
                "line_number": 4,
                "text": "specified in clause 7.4.1.2.3) with this SEI message shall appear after the target picture, in decoding order."
            },
            {
                "line_number": 5,
                "text": "target_frame_num indicates the frame_num of the target picture."
            },
            {
                "line_number": 6,
                "text": "spare_field_flag equal to 0 indicates that the target picture and the spare pictures are decoded frames. spare_field_flag"
            },
            {
                "line_number": 7,
                "text": "equal to 1 indicates that the target picture and the spare pictures are decoded fields."
            },
            {
                "line_number": 8,
                "text": "target_bottom_field_flag equal to 0 indicates that the target picture is a top field. target_bottom_field_flag equal to 1"
            },
            {
                "line_number": 9,
                "text": "indicates that the target picture is a bottom field."
            },
            {
                "line_number": 10,
                "text": "A target picture is a decoded reference picture for which the corresponding primary coded picture precedes the current"
            },
            {
                "line_number": 11,
                "text": "picture, in decoding order, and in which the values of frame_num, field_pic_flag (when present) and bottom_field_flag"
            },
            {
                "line_number": 12,
                "text": "(when present) are equal to target_frame_num, spare_field_flag and target_bottom_field_flag, respectively."
            },
            {
                "line_number": 13,
                "text": "num_spare_pics_minus1 indicates the number of spare pictures for the specified target picture. The number of spare"
            },
            {
                "line_number": 14,
                "text": "pictures is equal to num_spare_pics_minus1 + 1. The value of num_spare_pics_minus1 shall be in the range of 0 to 15,"
            },
            {
                "line_number": 15,
                "text": "inclusive."
            },
            {
                "line_number": 16,
                "text": "delta_spare_frame_num[ i ] is used to identify the spare picture that contains the i-th set of spare slice group map units,"
            },
            {
                "line_number": 17,
                "text": "hereafter called the i-th spare picture, as specified below. The value of delta_spare_frame_num[ i ] shall be in the range of"
            },
            {
                "line_number": 18,
                "text": "0 to MaxFrameNum − 2 + spare_field_flag, inclusive."
            },
            {
                "line_number": 19,
                "text": "The frame_num of the i-th spare picture, spareFrameNum[ i ], is derived as follows for all values of i from 0 to"
            },
            {
                "line_number": 20,
                "text": "num_spare_pics_minus1, inclusive:"
            },
            {
                "line_number": 21,
                "text": "candidateSpareFrameNum = target_frame_num − 1 + spare_field_flag"
            },
            {
                "line_number": 22,
                "text": "for ( i = 0; i <= num_spare_pics_minus1; i++ ) {"
            },
            {
                "line_number": 23,
                "text": "if( candidateSpareFrameNum < 0 )"
            },
            {
                "line_number": 24,
                "text": "candidateSpareFrameNum = MaxFrameNum − 1"
            },
            {
                "line_number": 25,
                "text": "spareFrameNum[ i ] = candidateSpareFrameNum − delta_spare_frame_num[ i ] (D-3)"
            },
            {
                "line_number": 26,
                "text": "if( spareFrameNum[ i ] < 0 )"
            },
            {
                "line_number": 27,
                "text": "spareFrameNum[ i ] = MaxFrameNum + spareFrameNum[ i ]"
            },
            {
                "line_number": 28,
                "text": "candidateSpareFrameNum = spareFrameNum[ i ] − 1 + spare_field_flag"
            },
            {
                "line_number": 29,
                "text": "}"
            },
            {
                "line_number": 30,
                "text": "spare_bottom_field_flag[ i ] equal to 0 indicates that the i-th spare picture is a top field. spare_bottom_field_flag[ i ]"
            },
            {
                "line_number": 31,
                "text": "equal to 1 indicates that the i-th spare picture is a bottom field."
            },
            {
                "line_number": 32,
                "text": "The 0-th spare picture is a decoded reference picture for which the corresponding primary coded picture precedes the target"
            },
            {
                "line_number": 33,
                "text": "picture, in decoding order, and in which the values of frame_num, field_pic_flag (when present) and bottom_field_flag"
            },
            {
                "line_number": 34,
                "text": "(when present) are equal to spareFrameNum[ 0 ], spare_field_flag and spare_bottom_field_flag[ 0 ], respectively. The i-th"
            },
            {
                "line_number": 35,
                "text": "spare picture is a decoded reference picture for which the corresponding primary coded picture precedes the ( i − 1 )-th"
            },
            {
                "line_number": 36,
                "text": "spare picture, in decoding order, and in which the values of frame_num, field_pic_flag (when present) and"
            },
            {
                "line_number": 37,
                "text": "bottom_field_flag (when present) are equal to spareFrameNum[ i ], spare_field_flag and spare_bottom_field_flag[ i ],"
            },
            {
                "line_number": 38,
                "text": "respectively."
            },
            {
                "line_number": 39,
                "text": "spare_area_idc[ i ] indicates the method used to identify the spare slice group map units in the i-th spare picture."
            },
            {
                "line_number": 40,
                "text": "spare_area_idc[ i ] shall be in the range of 0 to 2, inclusive. spare_area_idc[ i ] equal to 0 indicates that all slice group map"
            },
            {
                "line_number": 41,
                "text": "units in the i-th spare picture are spare units. spare_area_idc[ i ] equal to 1 indicates that the value of the syntax element"
            },
            {
                "line_number": 42,
                "text": "spare_unit_flag[ i ][ j ] is used to identify the spare slice group map units. spare_area_idc[ i ] equal to 2 indicates that the"
            },
            {
                "line_number": 43,
                "text": "zero_run_length[ i ][ j ] syntax element is used to derive the values of spareUnitFlagInBoxOutOrder[ i ][ j ], as described"
            },
            {
                "line_number": 44,
                "text": "below."
            },
            {
                "line_number": 45,
                "text": "spare_unit_flag[ i ][ j ] equal to 0 indicates that the j-th slice group map unit in raster scan order in the i-th spare picture"
            },
            {
                "line_number": 46,
                "text": "is a spare unit. spare_unit_flag[ i ][ j ] equal to 1 indicates that the j-th slice group map unit in raster scan order in the i-th"
            },
            {
                "line_number": 47,
                "text": "spare picture is not a spare unit."
            },
            {
                "line_number": 48,
                "text": "zero_run_length[ i ][ j ] is used to derive the values of spareUnitFlagInBoxOutOrder[ i ][ j ] when spare_area_idc[ i ] is"
            },
            {
                "line_number": 49,
                "text": "equal to 2. In this case, the spare slice group map units identified in spareUnitFlagInBoxOutOrder[ i ][ j ] appear in counter-"
            },
            {
                "line_number": 50,
                "text": "clockwise box-out order, as specified in clause 8.2.2.4, for each spare picture. spareUnitFlagInBoxOutOrder[ i ][ j ] equal"
            },
            {
                "line_number": 51,
                "text": "to 0 indicates that the j-th slice group map unit in counter-clockwise box-out order in the i-th spare picture is a spare unit."
            },
            {
                "line_number": 52,
                "text": "spareUnitFlagInBoxOutOrder[ i ][ j ] equal to 1 indicates that the j-th slice group map unit in counter-clockwise box-out"
            },
            {
                "line_number": 53,
                "text": "order in the i-th spare picture is not a spare unit."
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 359"
            }
        ]
    },
    {
        "page_number": 382,
        "lines": [
            {
                "line_number": 1,
                "text": "When spare_area_idc[ 0 ] is equal to 2, spareUnitFlagInBoxOutOrder[ 0 ][ j ] is derived as specified by the following"
            },
            {
                "line_number": 2,
                "text": "pseudo-code:"
            },
            {
                "line_number": 3,
                "text": "for( j = 0, loop = 0; j < PicSizeInMapUnits; loop++ ) {"
            },
            {
                "line_number": 4,
                "text": "for( k = 0; k < zero_run_length[ 0 ][ loop ]; k++ )"
            },
            {
                "line_number": 5,
                "text": "spareUnitFlagInBoxOutOrder[ 0 ][ j++ ] = 0 (D-4)"
            },
            {
                "line_number": 6,
                "text": "spareUnitFlagInBoxOutOrder[ 0 ][ j++ ] = 1"
            },
            {
                "line_number": 7,
                "text": "}"
            },
            {
                "line_number": 8,
                "text": "When spare_area_idc[ i ] is equal to 2 and the value of i is greater than 0, spareUnitFlagInBoxOutOrder[ i ][ j ] is derived"
            },
            {
                "line_number": 9,
                "text": "as specified by the following pseudo-code:"
            },
            {
                "line_number": 10,
                "text": "for( j = 0, loop = 0; j < PicSizeInMapUnits; loop++ ) {"
            },
            {
                "line_number": 11,
                "text": "for( k = 0; k < zero_run_length[ i ][ loop ]; k++ )"
            },
            {
                "line_number": 12,
                "text": "spareUnitFlagInBoxOutOrder[ i ][ j ] = spareUnitFlagInBoxOutOrder[ i − 1 ][ j++ ] (D-5)"
            },
            {
                "line_number": 13,
                "text": "spareUnitFlagInBoxOutOrder[ i ][ j ] = !spareUnitFlagInBoxOutOrder[ i − 1 ][ j++ ]"
            },
            {
                "line_number": 14,
                "text": "}"
            },
            {
                "line_number": 15,
                "text": "D.2.11 Scene information SEI message semantics"
            },
            {
                "line_number": 16,
                "text": "A scene and a scene transition are herein defined as a set of consecutive pictures in output order."
            },
            {
                "line_number": 17,
                "text": "NOTE 1 – Decoded pictures within one scene generally have similar content. The scene information SEI message is used to label"
            },
            {
                "line_number": 18,
                "text": "pictures with scene identifiers and to indicate scene changes. The message specifies how the source pictures for the labelled pictures"
            },
            {
                "line_number": 19,
                "text": "were created. The decoder may use the information to select an appropriate algorithm to conceal transmission errors. For example,"
            },
            {
                "line_number": 20,
                "text": "a specific algorithm may be used to conceal transmission errors that occurred in pictures belonging to a gradual scene transition."
            },
            {
                "line_number": 21,
                "text": "Furthermore, the scene information SEI message may be used in a manner determined by the application, such as for indexing the"
            },
            {
                "line_number": 22,
                "text": "scenes of a coded sequence."
            },
            {
                "line_number": 23,
                "text": "A scene information SEI message labels all pictures, in decoding order, from the primary coded picture to which the SEI"
            },
            {
                "line_number": 24,
                "text": "message is associated (inclusive), as specified in clause 7.4.1.2.3, to the primary coded picture to which the next scene"
            },
            {
                "line_number": 25,
                "text": "information SEI message (if present) in decoding order is associated (exclusive) or (otherwise) to the last access unit in"
            },
            {
                "line_number": 26,
                "text": "the bitstream (inclusive). These pictures are herein referred to as the target pictures."
            },
            {
                "line_number": 27,
                "text": "scene_info_present_flag equal to 0 indicates that the scene or scene transition to which the target pictures belong is"
            },
            {
                "line_number": 28,
                "text": "unspecified. scene_info_present_flag equal to 1 indicates that the target pictures belong to the same scene or scene"
            },
            {
                "line_number": 29,
                "text": "transition."
            },
            {
                "line_number": 30,
                "text": "scene_id identifies the scene to which the target pictures belong. When the value of scene_transition_type of the target"
            },
            {
                "line_number": 31,
                "text": "pictures is less than 4, and the previous picture in output order is marked with a value of scene_transition_type less than 4,"
            },
            {
                "line_number": 32,
                "text": "and the value of scene_id is the same as the value of scene_id of the previous picture in output order, this indicates that the"
            },
            {
                "line_number": 33,
                "text": "source scene for the target pictures and the source scene for the previous picture (in output order) are considered by the"
            },
            {
                "line_number": 34,
                "text": "encoder to have been the same scene. When the value of scene_transition_type of the target pictures is greater than 3, and"
            },
            {
                "line_number": 35,
                "text": "the previous picture in output order is marked with a value of scene_transition_type less than 4, and the value of scene_id"
            },
            {
                "line_number": 36,
                "text": "is the same as the value of scene_id of the previous picture in output order, this indicates that one of the source scenes for"
            },
            {
                "line_number": 37,
                "text": "the target pictures and the source scene for the previous picture (in output order) are considered by the encoder to have"
            },
            {
                "line_number": 38,
                "text": "been the same scene. When the value of scene_id is not equal to the value of scene_id of the previous picture in output"
            },
            {
                "line_number": 39,
                "text": "order, this indicates that the target pictures and the previous picture (in output order) are considered by the encoder to have"
            },
            {
                "line_number": 40,
                "text": "been from different source scenes."
            },
            {
                "line_number": 41,
                "text": "The value of scene_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 42,
                "text": "Values of scene_id in the range of 0 to 255, inclusive, and in the range of 512 to 231 − 1, inclusive, may be used as"
            },
            {
                "line_number": 43,
                "text": "determined by the application. Values of scene_id in the range of 256 to 511, inclusive, and in the range of 231 to 232 − 2,"
            },
            {
                "line_number": 44,
                "text": "inclusive, are reserved for future use by ITU-T | ISO/IEC. Decoders encountering a value of scene_id in the range of 256"
            },
            {
                "line_number": 45,
                "text": "to 511, inclusive, or in the range of 231 to 232 − 2, inclusive, shall ignore (remove from the bitstream and discard) it."
            },
            {
                "line_number": 46,
                "text": "scene_transition_type specifies in which type of a scene transition (if any) the target pictures are involved. The valid"
            },
            {
                "line_number": 47,
                "text": "values of scene_transition_type are specified in Table D-4."
            },
            {
                "line_number": 48,
                "text": "360 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 383,
        "lines": [
            {
                "line_number": 1,
                "text": "Table D-4 – scene_transition_type values"
            },
            {
                "line_number": 2,
                "text": "Value Description"
            },
            {
                "line_number": 3,
                "text": "0 No transition"
            },
            {
                "line_number": 4,
                "text": "1 Fade to black"
            },
            {
                "line_number": 5,
                "text": "2 Fade from black"
            },
            {
                "line_number": 6,
                "text": "3 Unspecified transition from or to constant colour"
            },
            {
                "line_number": 7,
                "text": "4 Dissolve"
            },
            {
                "line_number": 8,
                "text": "5 Wipe"
            },
            {
                "line_number": 9,
                "text": "6 Unspecified mixture of two scenes"
            },
            {
                "line_number": 10,
                "text": "When scene_transition_type is greater than 3, the target pictures include contents both from the scene labelled by its"
            },
            {
                "line_number": 11,
                "text": "scene_id and the next scene, in output order, which is labelled by second_scene_id (see below). The term \"the current"
            },
            {
                "line_number": 12,
                "text": "scene\" is used to indicate the scene labelled by scene_id. The term \"the next scene\" is used to indicate the scene labelled"
            },
            {
                "line_number": 13,
                "text": "by second_scene_id. It is not required for any following picture, in output order, to be labelled with scene_id equal to"
            },
            {
                "line_number": 14,
                "text": "second_scene_id of the current SEI message."
            },
            {
                "line_number": 15,
                "text": "Scene transition types are specified as follows."
            },
            {
                "line_number": 16,
                "text": "\"No transition\" specifies that the target pictures are not involved in a gradual scene transition."
            },
            {
                "line_number": 17,
                "text": "NOTE 2 – When two consecutive pictures in output order have scene_transition_type equal to 0 and different values of scene_id, a"
            },
            {
                "line_number": 18,
                "text": "scene cut occurred between the two pictures."
            },
            {
                "line_number": 19,
                "text": "\"Fade to black\" indicates that the target pictures are part of a sequence of pictures, in output order, involved in a fade to"
            },
            {
                "line_number": 20,
                "text": "black scene transition, i.e., the luma samples of the scene gradually approach zero and the chroma samples of the scene"
            },
            {
                "line_number": 21,
                "text": "gradually approach 128."
            },
            {
                "line_number": 22,
                "text": "NOTE 3 – When two pictures are labelled to belong to the same scene transition and their scene_transition_type is \"Fade to black\","
            },
            {
                "line_number": 23,
                "text": "the later one, in output order, is darker than the previous one."
            },
            {
                "line_number": 24,
                "text": "\"Fade from black\" indicates that the target pictures are part of a sequence of pictures, in output order, involved in a fade"
            },
            {
                "line_number": 25,
                "text": "from black scene transition, i.e., the luma samples of the scene gradually diverge from zero and the chroma samples of the"
            },
            {
                "line_number": 26,
                "text": "scene may gradually diverge from 128."
            },
            {
                "line_number": 27,
                "text": "NOTE 4 – When two pictures are labelled to belong to the same scene transition and their scene_transition_type is \"Fade from"
            },
            {
                "line_number": 28,
                "text": "black\", the later one in output order is lighter than the previous one."
            },
            {
                "line_number": 29,
                "text": "\"Dissolve\" indicates that the sample values of each target picture (before encoding) were generated by calculating a sum"
            },
            {
                "line_number": 30,
                "text": "of co-located weighted sample values of a picture from the current scene and a picture from the next scene. The weight of"
            },
            {
                "line_number": 31,
                "text": "the current scene gradually decreases from full level to zero level, whereas the weight of the next scene gradually increases"
            },
            {
                "line_number": 32,
                "text": "from zero level to full level. When two pictures are labelled to belong to the same scene transition and their"
            },
            {
                "line_number": 33,
                "text": "scene_transition_type is \"Dissolve\", the weight of the current scene for the later one, in output order, is less than the weight"
            },
            {
                "line_number": 34,
                "text": "of the current scene for the previous one, and the weight of the next scene for the later one, in output order, is greater than"
            },
            {
                "line_number": 35,
                "text": "the weight of the next scene for the previous one."
            },
            {
                "line_number": 36,
                "text": "\"Wipe\" indicates that some of the sample values of each target picture (before encoding) were generated by copying"
            },
            {
                "line_number": 37,
                "text": "co-located sample values of a picture in the current scene and the remaining sample values of each target picture (before"
            },
            {
                "line_number": 38,
                "text": "encoding) were generated by copying co-located sample values of a picture in the next scene. When two pictures are"
            },
            {
                "line_number": 39,
                "text": "labelled to belong to the same scene transition and their scene_transition_type is \"Wipe\", the number of samples copied"
            },
            {
                "line_number": 40,
                "text": "from the next scene to the later picture in output order is greater than the number of samples copied from the next scene to"
            },
            {
                "line_number": 41,
                "text": "the previous picture."
            },
            {
                "line_number": 42,
                "text": "second_scene_id identifies the next scene in the gradual scene transition in which the target pictures are involved. The"
            },
            {
                "line_number": 43,
                "text": "value of second_scene_id shall not be equal to the value of scene_id. The value of second_scene_id shall not be equal to"
            },
            {
                "line_number": 44,
                "text": "the value of scene_id in the previous picture in output order. When the next picture in output order is marked with a value"
            },
            {
                "line_number": 45,
                "text": "of scene_transition_type less than 4, and the value of second_scene_id is the same as the value of scene_id of the next"
            },
            {
                "line_number": 46,
                "text": "picture in output order, this indicates that the encoder considers one of the source scenes for the target pictures and the"
            },
            {
                "line_number": 47,
                "text": "source scene for the next picture (in output order) to have been the same scene. When the value of second_scene_id is not"
            },
            {
                "line_number": 48,
                "text": "equal to the value of scene_id or second_scene_id (if present) of the next picture in output order, this indicates that the"
            },
            {
                "line_number": 49,
                "text": "encoder considers the target pictures and the next picture (in output order) to have been from different source scenes."
            },
            {
                "line_number": 50,
                "text": "When the value of scene_id of a picture is equal to the value of scene_id of the following picture in output order and the"
            },
            {
                "line_number": 51,
                "text": "value of scene_transition_type in both of these pictures is less than 4, this indicates that the encoder considers the two"
            },
            {
                "line_number": 52,
                "text": "pictures to have been from the same source scene. When the values of scene_id, scene_transition_type and"
            },
            {
                "line_number": 53,
                "text": "second_scene_id (if present) of a picture are equal to the values of scene_id, scene_transition_type and second_scene_id"
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 361"
            }
        ]
    },
    {
        "page_number": 384,
        "lines": [
            {
                "line_number": 1,
                "text": "(respectively) of the following picture in output order and the value of scene_transition_type is greater than 0, this indicates"
            },
            {
                "line_number": 2,
                "text": "that the encoder considers the two pictures to have been from the same source gradual scene transition."
            },
            {
                "line_number": 3,
                "text": "The value of second_scene_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 4,
                "text": "Values of second_scene_id in the range of 0 to 255, inclusive, and in the range of 512 to 231 − 1, inclusive, may be used as"
            },
            {
                "line_number": 5,
                "text": "determined by the application. Values of second_scene_id in the range of 256 to 511, inclusive, and in the range of 231"
            },
            {
                "line_number": 6,
                "text": "to 232 − 2, inclusive, are reserved for future use by ITU-T | ISO/IEC. Decoders encountering a value of second_scene_id"
            },
            {
                "line_number": 7,
                "text": "in the range of 256 to 511, inclusive, or in the range of 231 to 232 − 2, inclusive, shall ignore (remove from the bitstream"
            },
            {
                "line_number": 8,
                "text": "and discard) it."
            },
            {
                "line_number": 9,
                "text": "D.2.12 Sub-sequence information SEI message semantics"
            },
            {
                "line_number": 10,
                "text": "The sub-sequence information SEI message is used to indicate the position of a picture in data dependency hierarchy that"
            },
            {
                "line_number": 11,
                "text": "consists of sub-sequence layers and sub-sequences."
            },
            {
                "line_number": 12,
                "text": "A sub-sequence layer contains a subset of the coded pictures in a sequence. Sub-sequence layers are numbered with"
            },
            {
                "line_number": 13,
                "text": "non-negative integers. A layer having a larger layer number is a higher layer than a layer having a smaller layer number."
            },
            {
                "line_number": 14,
                "text": "The layers are ordered hierarchically based on their dependency on each other so that any picture in a layer shall not be"
            },
            {
                "line_number": 15,
                "text": "predicted from any picture on any higher layer."
            },
            {
                "line_number": 16,
                "text": "NOTE 1 – In other words, any picture in layer 0 must not be predicted from any picture in layer 1 or above, pictures in layer 1 may"
            },
            {
                "line_number": 17,
                "text": "be predicted from layer 0, pictures in layer 2 may be predicted from layers 0 and 1, etc."
            },
            {
                "line_number": 18,
                "text": "NOTE 2 – The subjective quality is expected to increase along with the number of decoded layers."
            },
            {
                "line_number": 19,
                "text": "A sub-sequence is a set of coded pictures within a sub-sequence layer. A picture shall reside in one sub-sequence layer and"
            },
            {
                "line_number": 20,
                "text": "in one sub-sequence only. Any picture in a sub-sequence shall not be predicted from any picture in another sub-sequence"
            },
            {
                "line_number": 21,
                "text": "in the same or in a higher sub-sequence layer. A sub-sequence in layer 0 can be decoded independently of any picture that"
            },
            {
                "line_number": 22,
                "text": "does not belong to the sub-sequence."
            },
            {
                "line_number": 23,
                "text": "The sub-sequence information SEI message concerns the current access unit. The primary coded picture in the access unit"
            },
            {
                "line_number": 24,
                "text": "is herein referred to as the current picture."
            },
            {
                "line_number": 25,
                "text": "The sub-sequence information SEI message shall not be present unless gaps_in_frame_num_value_allowed_flag in the"
            },
            {
                "line_number": 26,
                "text": "sequence parameter set referenced by the picture associated with the sub-sequence SEI message is equal to 1."
            },
            {
                "line_number": 27,
                "text": "sub_seq_layer_num specifies the sub-sequence layer number of the current picture. When sub_seq_layer_num is greater"
            },
            {
                "line_number": 28,
                "text": "than 0, memory management control operations shall not be used in any slice header of the current picture. When the"
            },
            {
                "line_number": 29,
                "text": "current picture resides in a sub-sequence for which the first picture in decoding order is an IDR picture, the value of"
            },
            {
                "line_number": 30,
                "text": "sub_seq_layer_num shall be equal to 0. For a non-paired reference field, the value of sub_seq_layer_num shall be equal"
            },
            {
                "line_number": 31,
                "text": "to 0. sub_seq_layer_num shall be in the range of 0 to 255, inclusive."
            },
            {
                "line_number": 32,
                "text": "sub_seq_id identifies the sub-sequence within a layer. When the current picture resides in a sub-sequence for which the"
            },
            {
                "line_number": 33,
                "text": "first picture in decoding order is an IDR picture, the value of sub_seq_id shall be the same as the value of idr_pic_id of the"
            },
            {
                "line_number": 34,
                "text": "IDR picture. sub_seq_id shall be in the range of 0 to 65535, inclusive."
            },
            {
                "line_number": 35,
                "text": "first_ref_pic_flag equal to 1 specifies that the current picture is the first reference picture of the sub-sequence in decoding"
            },
            {
                "line_number": 36,
                "text": "order. When the current picture is not the first picture of the sub-sequence in decoding order, the first_ref_pic_flag shall"
            },
            {
                "line_number": 37,
                "text": "be equal to 0."
            },
            {
                "line_number": 38,
                "text": "leading_non_ref_pic_flag equal to 1 specifies that the current picture is a non-reference picture preceding any reference"
            },
            {
                "line_number": 39,
                "text": "picture in decoding order within the sub-sequence or that the sub-sequence contains no reference pictures. When the current"
            },
            {
                "line_number": 40,
                "text": "picture is a reference picture or the current picture is a non-reference picture succeeding at least one reference picture in"
            },
            {
                "line_number": 41,
                "text": "decoding order within the sub-sequence, the leading_non_ref_pic_flag shall be equal to 0."
            },
            {
                "line_number": 42,
                "text": "last_pic_flag equal to 1 indicates that the current picture is the last picture of the sub-sequence (in decoding order),"
            },
            {
                "line_number": 43,
                "text": "including all reference and non-reference pictures of the sub-sequence. When the current picture is not the last picture of"
            },
            {
                "line_number": 44,
                "text": "the sub-sequence (in decoding order), last_pic_flag shall be equal to 0."
            },
            {
                "line_number": 45,
                "text": "The current picture is assigned to a sub-sequence as follows:"
            },
            {
                "line_number": 46,
                "text": "– If one or more of the following conditions are true, the current picture is the first picture of a sub-sequence in decoding"
            },
            {
                "line_number": 47,
                "text": "order:"
            },
            {
                "line_number": 48,
                "text": "– no earlier picture in decoding order is labelled with the same values of sub_seq_id and sub_seq_layer_num as"
            },
            {
                "line_number": 49,
                "text": "the current picture,"
            },
            {
                "line_number": 50,
                "text": "– the value of leading_non_ref_pic_flag is equal to 1 and the value of leading_non_ref_pic_flag is equal to 0 in"
            },
            {
                "line_number": 51,
                "text": "the previous picture in decoding order having the same values of sub_seq_id and sub_seq_layer_num as the"
            },
            {
                "line_number": 52,
                "text": "current picture,"
            },
            {
                "line_number": 53,
                "text": "362 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 385,
        "lines": [
            {
                "line_number": 1,
                "text": "– the value of first_ref_pic_flag is equal to 1 and the value of leading_non_ref_pic_flag is equal to 0 in the previous"
            },
            {
                "line_number": 2,
                "text": "picture in decoding order having the same values of sub_seq_id and sub_seq_layer_num as the current picture,"
            },
            {
                "line_number": 3,
                "text": "– the value of last_pic_flag is equal to 1 in the previous picture in decoding order having the same values of"
            },
            {
                "line_number": 4,
                "text": "sub_seq_id and sub_seq_layer_num as the current picture."
            },
            {
                "line_number": 5,
                "text": "– Otherwise, the current picture belongs to the same sub-sequence as the previous picture in decoding order having the"
            },
            {
                "line_number": 6,
                "text": "same values of sub_seq_id and sub_seq_layer_num as the current picture."
            },
            {
                "line_number": 7,
                "text": "sub_seq_frame_num_flag equal to 0 specifies that sub_seq_frame_num is not present. sub_seq_frame_num_flag equal"
            },
            {
                "line_number": 8,
                "text": "to 1 specifies that sub_seq_frame_num is present."
            },
            {
                "line_number": 9,
                "text": "sub_seq_frame_num shall be equal to 0 for the first reference picture of the sub-sequence and for any non-reference"
            },
            {
                "line_number": 10,
                "text": "picture preceding the first reference picture of the sub-sequence in decoding order. sub_seq_frame_num is further"
            },
            {
                "line_number": 11,
                "text": "constrained as follows:"
            },
            {
                "line_number": 12,
                "text": "– If the current picture is not the second field of a complementary field pair, sub_seq_frame_num shall be incremented"
            },
            {
                "line_number": 13,
                "text": "by 1, in modulo MaxFrameNum operation, relative to the previous reference picture, in decoding order, that belongs"
            },
            {
                "line_number": 14,
                "text": "to the sub-sequence."
            },
            {
                "line_number": 15,
                "text": "– Otherwise (the current picture is the second field of a complementary field pair), the value of sub_seq_frame_num"
            },
            {
                "line_number": 16,
                "text": "shall be the same as the value of sub_seq_frame_num for the first field of the complementary field pair."
            },
            {
                "line_number": 17,
                "text": "sub_seq_frame_num shall be in the range of 0 to MaxFrameNum − 1, inclusive."
            },
            {
                "line_number": 18,
                "text": "When the current picture is an IDR picture, it shall start a new sub-sequence in sub-sequence layer 0. Thus, the"
            },
            {
                "line_number": 19,
                "text": "sub_seq_layer_num shall be 0, the sub_seq_id shall be different from the previous sub-sequence in sub-sequence layer 0,"
            },
            {
                "line_number": 20,
                "text": "first_ref_pic_flag shall be 1, and leading_non_ref_pic_flag shall be equal to 0."
            },
            {
                "line_number": 21,
                "text": "When the sub-sequence information SEI message is present for both coded fields of a complementary field pair, the values"
            },
            {
                "line_number": 22,
                "text": "of sub_seq_layer_num, sub_seq_id, leading_non_ref_pic_flag and sub_seq_frame_num, when present, shall be the same"
            },
            {
                "line_number": 23,
                "text": "for both of these pictures."
            },
            {
                "line_number": 24,
                "text": "When the sub-sequence information SEI message is present only for one coded field of a complementary field pair, the"
            },
            {
                "line_number": 25,
                "text": "values of sub_seq_layer_num, sub_seq_id, leading_non_ref_pic_flag and sub_seq_frame_num, when present, are also"
            },
            {
                "line_number": 26,
                "text": "applicable to the other coded field of the complementary field pair."
            },
            {
                "line_number": 27,
                "text": "D.2.13 Sub-sequence layer characteristics SEI message semantics"
            },
            {
                "line_number": 28,
                "text": "The sub-sequence layer characteristics SEI message specifies the characteristics of sub-sequence layers."
            },
            {
                "line_number": 29,
                "text": "num_sub_seq_layers_minus1 plus 1 specifies the number of sub-sequence layers in the sequence."
            },
            {
                "line_number": 30,
                "text": "num_sub_seq_layers_minus1 shall be in the range of 0 to 255, inclusive."
            },
            {
                "line_number": 31,
                "text": "A pair of average_bit_rate and average_frame_rate characterizes each sub-sequence layer. The first pair of"
            },
            {
                "line_number": 32,
                "text": "average_bit_rate and average_frame_rate specifies the characteristics of sub-sequence layer 0. When present, the second"
            },
            {
                "line_number": 33,
                "text": "pair specifies the characteristics of sub-sequence layers 0 and 1 jointly. Each pair in decoding order specifies the"
            },
            {
                "line_number": 34,
                "text": "characteristics for a range of sub-sequence layers from layer number 0 to the layer number specified by the layer loop"
            },
            {
                "line_number": 35,
                "text": "counter. The values are in effect from the point they are decoded until an update of the values is decoded."
            },
            {
                "line_number": 36,
                "text": "accurate_statistics_flag equal to 1 indicates that the values of average_bit_rate and average_frame_rate are rounded from"
            },
            {
                "line_number": 37,
                "text": "statistically correct values. accurate_statistics_flag equal to 0 indicates that the average_bit_rate and the"
            },
            {
                "line_number": 38,
                "text": "average_frame_rate are estimates and may deviate somewhat from the correct values."
            },
            {
                "line_number": 39,
                "text": "When accurate_statistics_flag is equal to 0, the quality of the approximation used in the computation of the values of"
            },
            {
                "line_number": 40,
                "text": "average_bit_rate and the average_frame_rate is chosen by the encoding process and is not specified by this"
            },
            {
                "line_number": 41,
                "text": "Recommendation | International Standard."
            },
            {
                "line_number": 42,
                "text": "average_bit_rate indicates the average bit rate in units of 1000 bits per second. All NAL units in the range of sub-sequence"
            },
            {
                "line_number": 43,
                "text": "layers specified above are taken into account in the calculation. The average bit rate is derived according to the access unit"
            },
            {
                "line_number": 44,
                "text": "removal time specified in Annex C of the Recommendation | International Standard. In the following, bTotal is the number"
            },
            {
                "line_number": 45,
                "text": "of bits in all NAL units succeeding a sub-sequence layer characteristics SEI message (including the bits of the NAL units"
            },
            {
                "line_number": 46,
                "text": "of the current access unit) and preceding the next access unit (in decoding order) including a sub-sequence layer"
            },
            {
                "line_number": 47,
                "text": "characteristics SEI message (if present) or the end of the stream (otherwise). t is the removal time (in seconds) of the"
            },
            {
                "line_number": 48,
                "text": "1"
            },
            {
                "line_number": 49,
                "text": "current access unit, and t is the removal time (in seconds) of the latest access unit (in decoding order) before the next sub-"
            },
            {
                "line_number": 50,
                "text": "2"
            },
            {
                "line_number": 51,
                "text": "sequence layer characteristics SEI message (if present) or the end of the stream (otherwise)."
            },
            {
                "line_number": 52,
                "text": "When accurate_statistics_flag is equal to 1, the following conditions shall be fulfilled as follows:"
            },
            {
                "line_number": 53,
                "text": "– If t is not equal to t , the following condition shall be true:"
            },
            {
                "line_number": 54,
                "text": "1 2"
            },
            {
                "line_number": 55,
                "text": "average_bit_rate = = Round( bTotal ÷ ( ( t − t ) * 1000 ) ) ) (D-6)"
            },
            {
                "line_number": 56,
                "text": "2 1"
            },
            {
                "line_number": 57,
                "text": "Rec. ITU-T H.264 (06/2019) 363"
            }
        ]
    },
    {
        "page_number": 386,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise (t is equal to t ), the following condition shall be true:"
            },
            {
                "line_number": 2,
                "text": "1 2"
            },
            {
                "line_number": 3,
                "text": "average_bit_rate = = 0 (D-7)"
            },
            {
                "line_number": 4,
                "text": "average_frame_rate indicates the average frame rate in units of frames/(256 seconds). All NAL units in the range of sub-"
            },
            {
                "line_number": 5,
                "text": "sequence layers specified above are taken into account in the calculation. In the following, fTotal is the number of frames,"
            },
            {
                "line_number": 6,
                "text": "complementary field pairs and non-paired fields between the current picture (inclusive) and the next sub-sequence layer"
            },
            {
                "line_number": 7,
                "text": "characteristics SEI message (if present) or the end of the stream (otherwise). t is the removal time (in seconds) of the"
            },
            {
                "line_number": 8,
                "text": "1"
            },
            {
                "line_number": 9,
                "text": "current access unit, and t is the removal time (in seconds) of the latest access unit (in decoding order) before the next sub-"
            },
            {
                "line_number": 10,
                "text": "2"
            },
            {
                "line_number": 11,
                "text": "sequence layer characteristics SEI message (if present) or the end of the stream (otherwise)."
            },
            {
                "line_number": 12,
                "text": "When accurate_statistics_flag is equal to 1, the following conditions shall be fulfilled as follows:"
            },
            {
                "line_number": 13,
                "text": "– If t is not equal to t , the following condition shall be true:"
            },
            {
                "line_number": 14,
                "text": "1 2"
            },
            {
                "line_number": 15,
                "text": "average_frame_rate = = Round( fTotal * 256 ÷ ( t − t ) ) (D-8)"
            },
            {
                "line_number": 16,
                "text": "2 1"
            },
            {
                "line_number": 17,
                "text": "– Otherwise (t is equal to t ), the following condition shall be true:"
            },
            {
                "line_number": 18,
                "text": "1 2"
            },
            {
                "line_number": 19,
                "text": "average_frame_rate = = 0 (D-9)"
            },
            {
                "line_number": 20,
                "text": "D.2.14 Sub-sequence characteristics SEI message semantics"
            },
            {
                "line_number": 21,
                "text": "The sub-sequence characteristics SEI message indicates the characteristics of a sub-sequence. It also indicates inter"
            },
            {
                "line_number": 22,
                "text": "prediction dependencies between sub-sequences. This message shall be contained in the first access unit in decoding order"
            },
            {
                "line_number": 23,
                "text": "of the sub-sequence to which the sub-sequence characteristics SEI message applies. This sub-sequence is herein called the"
            },
            {
                "line_number": 24,
                "text": "target sub-sequence."
            },
            {
                "line_number": 25,
                "text": "sub_seq_layer_num identifies the sub-sequence layer number of the target sub-sequence. sub_seq_layer_num shall be in"
            },
            {
                "line_number": 26,
                "text": "the range of 0 to 255, inclusive."
            },
            {
                "line_number": 27,
                "text": "sub_seq_id identifies the target sub-sequence. sub_seq_id shall be in the range of 0 to 65535, inclusive."
            },
            {
                "line_number": 28,
                "text": "duration_flag equal to 0 indicates that the duration of the target sub-sequence is not specified."
            },
            {
                "line_number": 29,
                "text": "sub_seq_duration specifies the duration of the target sub-sequence in clock ticks of a 90-kHz clock."
            },
            {
                "line_number": 30,
                "text": "average_rate_flag equal to 0 indicates that the average bit rate and the average frame rate of the target sub-sequence are"
            },
            {
                "line_number": 31,
                "text": "unspecified."
            },
            {
                "line_number": 32,
                "text": "accurate_statistics_flag indicates how reliable the values of average_bit_rate and average_frame_rate are."
            },
            {
                "line_number": 33,
                "text": "accurate_statistics_flag equal to 1, indicates that the average_bit_rate and the average_frame_rate are rounded from"
            },
            {
                "line_number": 34,
                "text": "statistically correct values. accurate_statistics_flag equal to 0 indicates that the average_bit_rate and the"
            },
            {
                "line_number": 35,
                "text": "average_frame_rate are estimates and may deviate from the statistically correct values."
            },
            {
                "line_number": 36,
                "text": "average_bit_rate indicates the average bit rate in (1000 bits)/second of the target sub-sequence. All NAL units of the"
            },
            {
                "line_number": 37,
                "text": "target sub-sequence are taken into account in the calculation. The average bit rate is derived according to the access unit"
            },
            {
                "line_number": 38,
                "text": "removal time specified in clause C.1.2. In the following, nB is the number of bits in all NAL units in the sub-sequence. t"
            },
            {
                "line_number": 39,
                "text": "1"
            },
            {
                "line_number": 40,
                "text": "is the removal time (in seconds) of the first access unit of the sub-sequence (in decoding order), and t is the removal time"
            },
            {
                "line_number": 41,
                "text": "2"
            },
            {
                "line_number": 42,
                "text": "(in seconds) of the last access unit of the sub-sequence (in decoding order)."
            },
            {
                "line_number": 43,
                "text": "When accurate_statistics_flag is equal to 1, the following conditions shall be fulfilled as follows:"
            },
            {
                "line_number": 44,
                "text": "– If t is not equal to t , the following condition shall be true:"
            },
            {
                "line_number": 45,
                "text": "1 2"
            },
            {
                "line_number": 46,
                "text": "average_bit_rate = = Round( nB ÷ ( ( t − t ) * 1000 ) ) (D-10)"
            },
            {
                "line_number": 47,
                "text": "2 1"
            },
            {
                "line_number": 48,
                "text": "– Otherwise (t is equal to t ), the following condition shall be true:"
            },
            {
                "line_number": 49,
                "text": "1 2"
            },
            {
                "line_number": 50,
                "text": "average_bit_rate = = 0 (D-11)"
            },
            {
                "line_number": 51,
                "text": "average_frame_rate indicates the average frame rate in units of frames/(256 seconds) of the target sub-sequence. All"
            },
            {
                "line_number": 52,
                "text": "NAL units of the target sub-sequence are taken into account in the calculation. The average frame rate is derived according"
            },
            {
                "line_number": 53,
                "text": "to the access unit removal time specified in clause C.1.2. In the following, fC is the number of frames, complementary"
            },
            {
                "line_number": 54,
                "text": "field pairs and non-paired fields in the sub-sequence. t is the removal time (in seconds) of the first access unit of the sub-"
            },
            {
                "line_number": 55,
                "text": "1"
            },
            {
                "line_number": 56,
                "text": "sequence (in decoding order), and t is the removal time (in seconds) of the last access unit of the sub-sequence (in decoding"
            },
            {
                "line_number": 57,
                "text": "2"
            },
            {
                "line_number": 58,
                "text": "order)."
            },
            {
                "line_number": 59,
                "text": "When accurate_statistics_flag is equal to 1, the following conditions shall be fulfilled as follows:"
            },
            {
                "line_number": 60,
                "text": "364 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 387,
        "lines": [
            {
                "line_number": 1,
                "text": "– If t is not equal to t , the following condition shall be true:"
            },
            {
                "line_number": 2,
                "text": "1 2"
            },
            {
                "line_number": 3,
                "text": "average_frame_rate = = Round( fC * 256 ÷ ( t − t ) ) (D-12)"
            },
            {
                "line_number": 4,
                "text": "2 1"
            },
            {
                "line_number": 5,
                "text": "– Otherwise (t is equal to t ), the following condition shall be true:"
            },
            {
                "line_number": 6,
                "text": "1 2"
            },
            {
                "line_number": 7,
                "text": "average_frame_rate = = 0 (D-13)"
            },
            {
                "line_number": 8,
                "text": "num_referenced_subseqs specifies the number of sub-sequences that contain pictures that are used as reference pictures"
            },
            {
                "line_number": 9,
                "text": "for inter prediction in the pictures of the target sub-sequence. num_referenced_subseqs shall be in the range of 0 to 255,"
            },
            {
                "line_number": 10,
                "text": "inclusive."
            },
            {
                "line_number": 11,
                "text": "ref_sub_seq_layer_num, ref_sub_seq_id, and ref_sub_seq_direction identify the sub-sequence that contains pictures"
            },
            {
                "line_number": 12,
                "text": "that are used as reference pictures for inter prediction in the pictures of the target sub-sequence. Depending on"
            },
            {
                "line_number": 13,
                "text": "ref_sub_seq_direction, the following applies:"
            },
            {
                "line_number": 14,
                "text": "– If ref_sub_seq_direction is equal to 0, a set of candidate sub-sequences consists of the sub-sequences which have a"
            },
            {
                "line_number": 15,
                "text": "value of sub_seq_id equal to ref_sub_seq_id, which reside in the sub-sequence layer having sub_seq_layer_num equal"
            },
            {
                "line_number": 16,
                "text": "to ref_sub_seq_layer_num, and for which the first picture in decoding order precedes the first picture of the target"
            },
            {
                "line_number": 17,
                "text": "sub-sequence in decoding order."
            },
            {
                "line_number": 18,
                "text": "– Otherwise (ref_sub_seq_direction is equal to 1), a set of candidate sub-sequences consists of the sub-sequences which"
            },
            {
                "line_number": 19,
                "text": "have a value of sub_seq_id equal to ref_sub_seq_id, which reside in the sub-sequence layer having"
            },
            {
                "line_number": 20,
                "text": "sub_seq_layer_num equal to ref_sub_seq_layer_num, and for which the first picture in decoding order succeeds the"
            },
            {
                "line_number": 21,
                "text": "first picture of the target sub-sequence in decoding order."
            },
            {
                "line_number": 22,
                "text": "The sub-sequence used as a reference for the target sub-sequence is the sub-sequence among the set of candidate"
            },
            {
                "line_number": 23,
                "text": "sub-sequences for which the first picture is the closest to the first picture of the target sub-sequence in decoding order."
            },
            {
                "line_number": 24,
                "text": "D.2.15 Full-frame freeze SEI message semantics"
            },
            {
                "line_number": 25,
                "text": "The full-frame freeze SEI message indicates that the current picture and any subsequent pictures in output order that meet"
            },
            {
                "line_number": 26,
                "text": "specified conditions should not affect the content of the display. No more than one full-frame freeze SEI message shall be"
            },
            {
                "line_number": 27,
                "text": "present in any access unit."
            },
            {
                "line_number": 28,
                "text": "full_frame_freeze_repetition_period specifies the persistence of the full-frame freeze SEI message and may specify a"
            },
            {
                "line_number": 29,
                "text": "picture order count interval within which another full-frame freeze SEI message or a full-frame freeze release SEI message"
            },
            {
                "line_number": 30,
                "text": "or the end of the coded video sequence shall be present in the bitstream. The value of full_frame_freeze_repetition_period"
            },
            {
                "line_number": 31,
                "text": "shall be in the range of 0 to 16 384, inclusive."
            },
            {
                "line_number": 32,
                "text": "full_frame_freeze_repetition_period equal to 0 specifies that the full-frame freeze SEI message applies to the current"
            },
            {
                "line_number": 33,
                "text": "decoded picture only."
            },
            {
                "line_number": 34,
                "text": "full_frame_freeze_repetition_period equal to 1 specifies that the full-frame freeze SEI message persists in output order"
            },
            {
                "line_number": 35,
                "text": "until any of the following conditions are true:"
            },
            {
                "line_number": 36,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 37,
                "text": "– A picture in an access unit containing a full-frame freeze SEI message or a full-frame freeze release SEI message is"
            },
            {
                "line_number": 38,
                "text": "output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 39,
                "text": "full_frame_freeze_repetition_period greater than 1 specifies that the full-frame freeze SEI message persists until any of"
            },
            {
                "line_number": 40,
                "text": "the following conditions are true:."
            },
            {
                "line_number": 41,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 42,
                "text": "– A picture in an access unit containing a full-frame freeze SEI message or a full-frame freeze release SEI message is"
            },
            {
                "line_number": 43,
                "text": "output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) +"
            },
            {
                "line_number": 44,
                "text": "full_frame_freeze_repetition_period."
            },
            {
                "line_number": 45,
                "text": "full_frame_freeze_repetition_period greater than 1 indicates that another full-frame freeze SEI message or a full-frame"
            },
            {
                "line_number": 46,
                "text": "freeze release SEI message shall be present for a picture in an access unit that is output having PicOrderCnt( ) greater than"
            },
            {
                "line_number": 47,
                "text": "PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) + full_frame_freeze_repetition_period; unless the"
            },
            {
                "line_number": 48,
                "text": "bitstream ends or a new coded video sequence begins without output of such a picture."
            },
            {
                "line_number": 49,
                "text": "D.2.16 Full-frame freeze release SEI message semantics"
            },
            {
                "line_number": 50,
                "text": "The full-frame freeze release SEI message cancels the effect of any full-frame freeze SEI message sent with pictures that"
            },
            {
                "line_number": 51,
                "text": "precede the current picture in output order. The full-frame freeze release SEI message indicates that the current picture and"
            },
            {
                "line_number": 52,
                "text": "subsequent pictures in output order should affect the contents of the display."
            },
            {
                "line_number": 53,
                "text": "Rec. ITU-T H.264 (06/2019) 365"
            }
        ]
    },
    {
        "page_number": 388,
        "lines": [
            {
                "line_number": 1,
                "text": "No more than one full-frame freeze release SEI message shall be present in any access unit. A full-frame freeze release"
            },
            {
                "line_number": 2,
                "text": "SEI message shall not be present in an access unit containing a full-frame freeze SEI message. When a full-frame freeze"
            },
            {
                "line_number": 3,
                "text": "SEI message is present in an access unit containing a field of a complementary field pair in which the values of"
            },
            {
                "line_number": 4,
                "text": "PicOrderCnt( CurrPic ) for the two fields of the complementary field pair are equal to each other, a full-frame freeze release"
            },
            {
                "line_number": 5,
                "text": "SEI message shall not be present in either of the two access units."
            },
            {
                "line_number": 6,
                "text": "D.2.17 Full-frame snapshot SEI message semantics"
            },
            {
                "line_number": 7,
                "text": "The full-frame snapshot SEI message indicates that the current frame is labelled for use as determined by the application"
            },
            {
                "line_number": 8,
                "text": "as a still-image snapshot of the video content."
            },
            {
                "line_number": 9,
                "text": "snapshot_id specifies a snapshot identification number. snapshot_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 10,
                "text": "Values of snapshot_id in the range of 0 to 255, inclusive, and in the range of 512 to 231 − 1, inclusive, may be used as"
            },
            {
                "line_number": 11,
                "text": "determined by the application. Values of snapshot_id in the range of 256 to 511, inclusive, and in the range of 231 to 232 − 2,"
            },
            {
                "line_number": 12,
                "text": "inclusive, are reserved for future use by ITU-T | ISO/IEC. Decoders encountering a value of snapshot_id in the range of"
            },
            {
                "line_number": 13,
                "text": "256 to 511, inclusive, or in the range of 231 to 232 − 2, inclusive, shall ignore (remove from the bitstream and discard) it."
            },
            {
                "line_number": 14,
                "text": "D.2.18 Progressive refinement segment start SEI message semantics"
            },
            {
                "line_number": 15,
                "text": "The progressive refinement segment start SEI message specifies the beginning of a set of consecutive coded pictures that"
            },
            {
                "line_number": 16,
                "text": "is labelled as the current picture followed by a sequence of one or more pictures of refinement of the quality of the current"
            },
            {
                "line_number": 17,
                "text": "picture, rather than as a representation of a continually moving scene."
            },
            {
                "line_number": 18,
                "text": "The tagged set of consecutive coded pictures shall continue until one of the following conditions is true. When a condition"
            },
            {
                "line_number": 19,
                "text": "below becomes true, the next slice to be decoded does not belong to the tagged set of consecutive coded pictures:"
            },
            {
                "line_number": 20,
                "text": "– The next slice to be decoded belongs to an IDR picture."
            },
            {
                "line_number": 21,
                "text": "– num_refinement_steps_minus1 is greater than 0 and the frame_num of the next slice to be decoded is (currFrameNum"
            },
            {
                "line_number": 22,
                "text": "+ num_refinement_steps_minus1 + 1) % MaxFrameNum, where currFrameNum is the value of frame_num of the"
            },
            {
                "line_number": 23,
                "text": "picture in the access unit containing the SEI message."
            },
            {
                "line_number": 24,
                "text": "– num_refinement_steps_minus1 is 0 and a progressive refinement segment end SEI message with the same"
            },
            {
                "line_number": 25,
                "text": "progressive_refinement_id as the one in this SEI message is decoded."
            },
            {
                "line_number": 26,
                "text": "The decoding order of pictures within the tagged set of consecutive pictures should be the same as their output order."
            },
            {
                "line_number": 27,
                "text": "progressive_refinement_id specifies an identification number for the progressive refinement operation."
            },
            {
                "line_number": 28,
                "text": "progressive_refinement_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 29,
                "text": "Values of progressive_refinement_id in the range of 0 to 255, inclusive, and in the range of 512 to 231 − 1, inclusive, may"
            },
            {
                "line_number": 30,
                "text": "be used as determined by the application. Values of progressive_refinement_id in the range of 256 to 511, inclusive, and"
            },
            {
                "line_number": 31,
                "text": "in the range of 231 to 232 − 2, inclusive, are reserved for future use by ITU-T | ISO/IEC. Decoders encountering a value of"
            },
            {
                "line_number": 32,
                "text": "progressive_refinement_id in the range of 256 to 511, inclusive, or in the range of 231 to 232 − 2, inclusive, shall ignore"
            },
            {
                "line_number": 33,
                "text": "(remove from the bitstream and discard) it."
            },
            {
                "line_number": 34,
                "text": "num_refinement_steps_minus1 specifies the number of reference frames in the tagged set of consecutive coded pictures"
            },
            {
                "line_number": 35,
                "text": "as follows:"
            },
            {
                "line_number": 36,
                "text": "– If num_refinement_steps_minus1 is equal to 0, the number of reference frames in the tagged set of consecutive coded"
            },
            {
                "line_number": 37,
                "text": "pictures is unknown."
            },
            {
                "line_number": 38,
                "text": "– Otherwise, the number of reference frames in the tagged set of consecutive coded pictures is equal to"
            },
            {
                "line_number": 39,
                "text": "num_refinement_steps_minus1 + 1."
            },
            {
                "line_number": 40,
                "text": "num_refinement_steps_minus1 shall be in the range of 0 to MaxFrameNum − 1, inclusive."
            },
            {
                "line_number": 41,
                "text": "D.2.19 Progressive refinement segment end SEI message semantics"
            },
            {
                "line_number": 42,
                "text": "The progressive refinement segment end SEI message specifies the end of a set of consecutive coded pictures that has been"
            },
            {
                "line_number": 43,
                "text": "labelled by use of a progressive refinement segment start SEI message as an initial picture followed by a sequence of one"
            },
            {
                "line_number": 44,
                "text": "or more pictures of the refinement of the quality of the initial picture, and ending with the current picture."
            },
            {
                "line_number": 45,
                "text": "progressive_refinement_id specifies an identification number for the progressive refinement operation."
            },
            {
                "line_number": 46,
                "text": "progressive_refinement_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 47,
                "text": "The progressive refinement segment end SEI message specifies the end of any progressive refinement segment previously"
            },
            {
                "line_number": 48,
                "text": "started using a progressive refinement segment start SEI message with the same value of progressive_refinement_id."
            },
            {
                "line_number": 49,
                "text": "Values of progressive_refinement_id in the range of 0 to 255, inclusive, and in the range of 512 to 231 − 1, inclusive, may"
            },
            {
                "line_number": 50,
                "text": "be used as determined by the application. Values of progressive_refinement_id in the range of 256 to 511, inclusive, and"
            },
            {
                "line_number": 51,
                "text": "in the range of 231 to 232 − 2, inclusive, are reserved for future use by ITU-T | ISO/IEC. Decoders encountering a value of"
            },
            {
                "line_number": 52,
                "text": "366 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 389,
        "lines": [
            {
                "line_number": 1,
                "text": "progressive_refinement_id in the range of 256 to 511, inclusive, or in the range of 231 to 232 − 2, inclusive, shall ignore"
            },
            {
                "line_number": 2,
                "text": "(remove from the bitstream and discard) it."
            },
            {
                "line_number": 3,
                "text": "D.2.20 Motion-constrained slice group set SEI message semantics"
            },
            {
                "line_number": 4,
                "text": "NOTE 1 – The syntax of the motion-constrained slice group set SEI message is dependent on the content of the picture parameter"
            },
            {
                "line_number": 5,
                "text": "set that is active for the primary coded picture associated with the motion-constrained slice group set SEI message. However, the"
            },
            {
                "line_number": 6,
                "text": "activation of the associated picture parameter set does not occur until the decoding of the first coded slice NAL unit of the primary"
            },
            {
                "line_number": 7,
                "text": "coded picture. Since the coded slice NAL units of the primary coded picture follow the motion-constrained slice group set SEI"
            },
            {
                "line_number": 8,
                "text": "message in NAL unit order, it may be necessary for a decoder to store the RBSP containing the motion-constrained slice group set"
            },
            {
                "line_number": 9,
                "text": "SEI message until determining the parameters of the picture parameter set that will be active for the primary coded picture, and then"
            },
            {
                "line_number": 10,
                "text": "perform the parsing of the motion-constrained slice group set SEI message."
            },
            {
                "line_number": 11,
                "text": "This SEI message indicates that inter prediction over slice group boundaries is constrained as specified below. When"
            },
            {
                "line_number": 12,
                "text": "present, the message shall only appear where it is associated, as specified in clause 7.4.1.2.3, with an IDR access unit."
            },
            {
                "line_number": 13,
                "text": "The target picture set for this SEI message contains all consecutive primary coded pictures in decoding order starting with"
            },
            {
                "line_number": 14,
                "text": "the associated primary coded IDR picture (inclusive) and ending with the following primary coded IDR picture (exclusive)"
            },
            {
                "line_number": 15,
                "text": "or with the very last primary coded picture in the bitstream (inclusive) in decoding order when there is no following primary"
            },
            {
                "line_number": 16,
                "text": "coded IDR picture. The slice group set is a collection of one or more slice groups, identified by the slice_group_id[ i ]"
            },
            {
                "line_number": 17,
                "text": "syntax element. When separate_colour_plane_flag is equal to 1, the term \"primary coded pictures\" represents the parts of"
            },
            {
                "line_number": 18,
                "text": "the corresponding primary coded pictures that correspond to the NAL units having the same colour_plane_id."
            },
            {
                "line_number": 19,
                "text": "This SEI message indicates that, for each picture in the target picture set, the inter prediction process is constrained as"
            },
            {
                "line_number": 20,
                "text": "follows: No sample value outside the slice group set, and no sample value at a fractional sample position that is derived"
            },
            {
                "line_number": 21,
                "text": "using one or more sample values outside the slice group set is used for inter prediction of any sample within the slice group"
            },
            {
                "line_number": 22,
                "text": "set."
            },
            {
                "line_number": 23,
                "text": "num_slice_groups_in_set_minus1 + 1 specifies the number of slice groups in the slice group set. The allowed range of"
            },
            {
                "line_number": 24,
                "text": "num_slice_groups_in_set_minus1 is 0 to num_slice_groups_minus1, inclusive. The allowed range of"
            },
            {
                "line_number": 25,
                "text": "num_slice_groups_minus1 is specified in Annex A and clauses G.10 and H.10."
            },
            {
                "line_number": 26,
                "text": "slice_group_id[ i ] with i = 0.. num_slice_groups_in_set_minus1 identifies the slice group(s) contained within the slice"
            },
            {
                "line_number": 27,
                "text": "group set. The allowed range for slice_group_id[ i ] is from 0 to num_slice_groups_minus1, inclusive. The length of the"
            },
            {
                "line_number": 28,
                "text": "slice_group_id[ i ] syntax element is Ceil( Log2( num_slice_groups_minus1 + 1 ) ) bits."
            },
            {
                "line_number": 29,
                "text": "When num_slice_groups_minus1 is equal to 0 (i.e., num_slice_groups_in_set_minus1 is equal to 0 and slice_group_id[ 0 ]"
            },
            {
                "line_number": 30,
                "text": "is not present), the value of slice_group_id[ 0 ] shall be inferred to be equal to 0."
            },
            {
                "line_number": 31,
                "text": "exact_sample_value_match_flag equal to 0 indicates that, within the target picture set, when the macroblocks that do not"
            },
            {
                "line_number": 32,
                "text": "belong to the slice group set are not decoded, the value of each sample in the slice group set need not be exactly the same"
            },
            {
                "line_number": 33,
                "text": "as the value of the same sample when all the macroblocks are decoded. exact_sample_value_match_flag equal to 1"
            },
            {
                "line_number": 34,
                "text": "indicates that, within the target picture set, when the macroblocks that do not belong to the slice group set are not decoded,"
            },
            {
                "line_number": 35,
                "text": "the value of each sample in the slice group set shall be exactly the same as the value of the same sample when all the"
            },
            {
                "line_number": 36,
                "text": "macroblocks in the target picture set are decoded."
            },
            {
                "line_number": 37,
                "text": "NOTE 2 – When disable_deblocking_filter_idc is equal to 1 or 2 in all slices in the target picture set,"
            },
            {
                "line_number": 38,
                "text": "exact_sample_value_match_flag should be 1."
            },
            {
                "line_number": 39,
                "text": "pan_scan_rect_flag equal to 0 specifies that pan_scan_rect_id is not present. pan_scan_rect_flag equal to 1 specifies that"
            },
            {
                "line_number": 40,
                "text": "pan_scan_rect_id is present."
            },
            {
                "line_number": 41,
                "text": "pan_scan_rect_id indicates that the specified slice group set covers at least the pan-scan rectangle identified by"
            },
            {
                "line_number": 42,
                "text": "pan_scan_rect_id within the target picture set."
            },
            {
                "line_number": 43,
                "text": "NOTE 3 – Multiple motion_constrained_slice_group_set SEI messages may be associated with the same IDR picture. Consequently,"
            },
            {
                "line_number": 44,
                "text": "more than one slice group set may be active within a target picture set."
            },
            {
                "line_number": 45,
                "text": "NOTE 4 – The size, shape, and location of the slice groups in the slice group set may change within the target picture set."
            },
            {
                "line_number": 46,
                "text": "D.2.21 Film grain characteristics SEI message semantics"
            },
            {
                "line_number": 47,
                "text": "This SEI message provides the decoder with a parameterised model for film grain synthesis. For example, an encoder may"
            },
            {
                "line_number": 48,
                "text": "use the film grain characteristics SEI message to characterize film grain that was present in the original source video"
            },
            {
                "line_number": 49,
                "text": "material and was removed by pre-processing filtering techniques. Synthesis of simulated film grain on the decoded images"
            },
            {
                "line_number": 50,
                "text": "for the display process is optional and does not affect the decoding process specified in this Recommendation | International"
            },
            {
                "line_number": 51,
                "text": "Standard. If synthesis of simulated film grain on the decoded images for the display process is performed, there is no"
            },
            {
                "line_number": 52,
                "text": "requirement that the method by which the synthesis is performed be the same as the parameterised model for the film grain"
            },
            {
                "line_number": 53,
                "text": "as provided in the film grain characteristics SEI message."
            },
            {
                "line_number": 54,
                "text": "NOTE 1 – The display process is not specified in this Recommendation | International Standard."
            },
            {
                "line_number": 55,
                "text": "Rec. ITU-T H.264 (06/2019) 367"
            }
        ]
    },
    {
        "page_number": 390,
        "lines": [
            {
                "line_number": 1,
                "text": "NOTE 2 – The Society of Motion Picture and Television Engineers document RDD 5-2006 \"Film Grain Technology – Specifications"
            },
            {
                "line_number": 2,
                "text": "for H.264/MPEG-4 AVC Bitstreams\" specifies a film grain simulator based on the information provided in the film grain"
            },
            {
                "line_number": 3,
                "text": "characteristics SEI message."
            },
            {
                "line_number": 4,
                "text": "film_grain_characteristics_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous"
            },
            {
                "line_number": 5,
                "text": "film grain characteristics SEI message in output order. film_grain_characteristics_cancel_flag equal to 0 indicates that film"
            },
            {
                "line_number": 6,
                "text": "grain modelling information follows."
            },
            {
                "line_number": 7,
                "text": "film_grain_model_id identifies the film grain simulation model as specified in Table D-5. The value of"
            },
            {
                "line_number": 8,
                "text": "film_grain_model_id shall be in the range of 0 to 1, inclusive. The values of 2 and 3 for film_grain_model_id are reserved"
            },
            {
                "line_number": 9,
                "text": "for future use by ITU-T | ISO/IEC. Decoders shall ignore film grain characteristic SEI messages with film_grain_model_id"
            },
            {
                "line_number": 10,
                "text": "equal to 2 or 3."
            },
            {
                "line_number": 11,
                "text": "Table D-5 – film_grain_model_id values"
            },
            {
                "line_number": 12,
                "text": "Value Description"
            },
            {
                "line_number": 13,
                "text": "0 frequency filtering"
            },
            {
                "line_number": 14,
                "text": "1 auto-regression"
            },
            {
                "line_number": 15,
                "text": "2 reserved"
            },
            {
                "line_number": 16,
                "text": "3 reserved"
            },
            {
                "line_number": 17,
                "text": "separate_colour_description_present_flag equal to 1 indicates that a distinct colour space description for the film grain"
            },
            {
                "line_number": 18,
                "text": "characteristics specified in the SEI message is present in the film grain characteristics SEI message syntax."
            },
            {
                "line_number": 19,
                "text": "separate_colour_description_present_flag equal to 0 indicates that the colour description for the film grain characteristics"
            },
            {
                "line_number": 20,
                "text": "specified in the SEI message is the same as for the coded video sequence as specified in clause E.2.1."
            },
            {
                "line_number": 21,
                "text": "NOTE 3 – When separate_colour_description_present_flag is equal to 1, the colour space specified for the film grain characteristics"
            },
            {
                "line_number": 22,
                "text": "specified in the SEI message may differ from the colour space specified for the coded video as specified in clause E.2.1."
            },
            {
                "line_number": 23,
                "text": "film_grain_bit_depth_luma_minus8 plus 8 specifies the bit depth used for the luma component of the film grain"
            },
            {
                "line_number": 24,
                "text": "characteristics specified in the SEI message. When film_grain_bit_depth_luma_minus8 is not present in the film grain"
            },
            {
                "line_number": 25,
                "text": "characteristics SEI message, the value of film_grain_bit_depth_luma_minus8 shall be inferred to be equal"
            },
            {
                "line_number": 26,
                "text": "to bit_depth_luma_minus8."
            },
            {
                "line_number": 27,
                "text": "The value of filmGrainBitDepth[ 0 ] is derived as"
            },
            {
                "line_number": 28,
                "text": "filmGrainBitDepth[ 0 ] = film_grain_bit_depth_luma_minus8 + 8 (D-14)"
            },
            {
                "line_number": 29,
                "text": "film_grain_bit_depth_chroma_minus8 plus 8 specifies the bit depth used for the Cb and Cr components of the film grain"
            },
            {
                "line_number": 30,
                "text": "characteristics specified in the SEI message. When film_grain_bit_depth_chroma_minus8 is not present in the film grain"
            },
            {
                "line_number": 31,
                "text": "characteristics SEI message, the value of film_grain_bit_depth_chroma_minus8 shall be inferred to be equal"
            },
            {
                "line_number": 32,
                "text": "to bit_depth_chroma_minus8."
            },
            {
                "line_number": 33,
                "text": "The value of filmGrainBitDepth[ c ] for c = 1 and 2 is derived as"
            },
            {
                "line_number": 34,
                "text": "filmGrainBitDepth[ c ] = film_grain_bit_depth_chroma_minus8 + 8 with c = 1, 2 (D-15)"
            },
            {
                "line_number": 35,
                "text": "film_grain_full_range_flag has the same semantics as specified in clause E.2.1 for the video_full_range_flag syntax"
            },
            {
                "line_number": 36,
                "text": "element, except as follows:"
            },
            {
                "line_number": 37,
                "text": "– film_grain_full_range_flag specifies the colour space of the film grain characteristics specified in the SEI message,"
            },
            {
                "line_number": 38,
                "text": "rather than the colour space used for the coded video sequence."
            },
            {
                "line_number": 39,
                "text": "– When film_grain_full_range_flag is not present in the film grain characteristics SEI message, the value of"
            },
            {
                "line_number": 40,
                "text": "film_grain_full_range_flag shall be inferred to be equal to video_full_range_flag."
            },
            {
                "line_number": 41,
                "text": "film_grain_colour_primaries has the same semantics as specified in clause E.2.1 for the colour_primaries syntax"
            },
            {
                "line_number": 42,
                "text": "element, except as follows:"
            },
            {
                "line_number": 43,
                "text": "– film_grain_colour_primaries specifies the colour space of the film grain characteristics specified in the SEI message,"
            },
            {
                "line_number": 44,
                "text": "rather than the colour space used for the coded video sequence."
            },
            {
                "line_number": 45,
                "text": "– When film_grain_colour_primaries is not present in the film grain characteristics SEI message, the value of"
            },
            {
                "line_number": 46,
                "text": "film_grain_colour_primaries shall be inferred to be equal to colour_primaries."
            },
            {
                "line_number": 47,
                "text": "film_grain_transfer_characteristics has the same semantics as specified in clause E.2.1 for the transfer_characteristics"
            },
            {
                "line_number": 48,
                "text": "syntax element, except as follows:"
            },
            {
                "line_number": 49,
                "text": "368 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 391,
        "lines": [
            {
                "line_number": 1,
                "text": "– film_grain_transfer_characteristics specifies the colour space of the film grain characteristics specified in the SEI"
            },
            {
                "line_number": 2,
                "text": "message, rather than the colour space used for the coded video sequence."
            },
            {
                "line_number": 3,
                "text": "– When film_grain_transfer_characteristics is not present in the film grain characteristics SEI message, the value of"
            },
            {
                "line_number": 4,
                "text": "film_grain_transfer_characteristics shall be inferred to be equal to transfer_characteristics."
            },
            {
                "line_number": 5,
                "text": "film_grain_matrix_coefficients has the same semantics as specified in clause E.2.1 for the matrix_coefficients syntax"
            },
            {
                "line_number": 6,
                "text": "element, except as follows:"
            },
            {
                "line_number": 7,
                "text": "– film_grain_matrix_coefficients specifies the colour space of the film grain characteristics specified in the SEI"
            },
            {
                "line_number": 8,
                "text": "message, rather than the colour space used for the coded video sequence."
            },
            {
                "line_number": 9,
                "text": "– When film_grain_matrix_coefficients is not present in the film grain characteristics SEI message, the value of"
            },
            {
                "line_number": 10,
                "text": "film_grain_matrix_coefficients shall be inferred to be equal to matrix_coefficients."
            },
            {
                "line_number": 11,
                "text": "– The values allowed for film_grain_matrix_coefficients are not constrained by the value of chroma_format_idc."
            },
            {
                "line_number": 12,
                "text": "The chroma_format_idc of the film grain characteristics specified in the film grain characteristics SEI message shall be"
            },
            {
                "line_number": 13,
                "text": "inferred to be equal to 3 (4:4:4)."
            },
            {
                "line_number": 14,
                "text": "NOTE 4 – Because the use of a specific method is not required for performing film grain generation function used by the display"
            },
            {
                "line_number": 15,
                "text": "process, a decoder may, if desired, down-convert the model information for chroma in order to simulate film grain for other chroma"
            },
            {
                "line_number": 16,
                "text": "formats (4:2:0 or 4:2:2) rather than up-converting the decoded video (using a method not specified by this Recommendation |"
            },
            {
                "line_number": 17,
                "text": "International Standard) before performing film grain generation."
            },
            {
                "line_number": 18,
                "text": "blending_mode_id identifies the blending mode used to blend the simulated film grain with the decoded images as"
            },
            {
                "line_number": 19,
                "text": "specified in Table D-6. blending_mode_id shall be in the range of 0 to 1, inclusive."
            },
            {
                "line_number": 20,
                "text": "Table D-6 – blending_mode_id values"
            },
            {
                "line_number": 21,
                "text": "Value Description"
            },
            {
                "line_number": 22,
                "text": "0 additive"
            },
            {
                "line_number": 23,
                "text": "1 multiplicative"
            },
            {
                "line_number": 24,
                "text": "2 reserved"
            },
            {
                "line_number": 25,
                "text": "3 reserved"
            },
            {
                "line_number": 26,
                "text": "Depending on blending_mode_id, the blending mode is specified as follows:"
            },
            {
                "line_number": 27,
                "text": "– If blending_mode_id is equal to 0 the blending mode is additive as specified by"
            },
            {
                "line_number": 28,
                "text": "I [ x, y, c ] = Clip3( 0, ( 1 << filmGrainBitDepth[ c ] ) − 1, I [ x, y, c ] + G[ x, y, c ] ) (D-16)"
            },
            {
                "line_number": 29,
                "text": "grain decoded"
            },
            {
                "line_number": 30,
                "text": "– Otherwise (blending_mode_id is equal to 1), the blending mode is multiplicative as specified by"
            },
            {
                "line_number": 31,
                "text": "I [ x, y, c ] = Clip3( 0, ( 1 << filmGrainBitDepth[ c ] ) − 1, I [ x, y, c ] (D-17)"
            },
            {
                "line_number": 32,
                "text": "grain decoded"
            },
            {
                "line_number": 33,
                "text": "+ Round( ( I [ x, y, c ] * G[ x, y, c ] ) ÷ ( ( 1 << bitDepth[ c ] ) − 1 ) ) )"
            },
            {
                "line_number": 34,
                "text": "decoded"
            },
            {
                "line_number": 35,
                "text": "where I [ x, y, c ] represents the sample value at coordinates x, y of the colour component c of the decoded image"
            },
            {
                "line_number": 36,
                "text": "decoded"
            },
            {
                "line_number": 37,
                "text": "I , G[ x, y, c ] is the simulated film grain value at the same position and colour component, filmGrainBitDepth[ c ] is"
            },
            {
                "line_number": 38,
                "text": "decoded"
            },
            {
                "line_number": 39,
                "text": "the number of bits used for each sample in a fixed-length unsigned binary representation of the array I [ x, y, c ], and"
            },
            {
                "line_number": 40,
                "text": "grain"
            },
            {
                "line_number": 41,
                "text": "bitDepth[ c ] is specified by"
            },
            {
                "line_number": 42,
                "text": "bitDepth[ c ] ="
            },
            {
                "line_number": 43,
                "text": "BitDepth"
            },
            {
                "line_number": 44,
                "text": "Y"
            },
            {
                "line_number": 45,
                "text": "; c0"
            },
            {
                "line_number": 46,
                "text": "(D-18)"
            },
            {
                "line_number": 47,
                "text": ""
            },
            {
                "line_number": 48,
                "text": "BitDepth"
            },
            {
                "line_number": 49,
                "text": "C"
            },
            {
                "line_number": 50,
                "text": "; c1, 2"
            },
            {
                "line_number": 51,
                "text": "log2_scale_factor specifies a scale factor used in the film grain characterization equations."
            },
            {
                "line_number": 52,
                "text": "comp_model_present_flag[ c ] equal to 0 indicates that film grain is not modelled on the c-th colour component, where c"
            },
            {
                "line_number": 53,
                "text": "equal to 0 refers to the luma component, c equal to 1 refers to the Cb component, and c equal to 2 refers to the Cr component."
            },
            {
                "line_number": 54,
                "text": "comp_model_present_flag[ c ] equal to 1 indicates that syntax elements specifying modelling of film grain on colour"
            },
            {
                "line_number": 55,
                "text": "component c are present in the SEI message."
            },
            {
                "line_number": 56,
                "text": "num_intensity_intervals_minus1[ c ] plus 1 specifies the number of intensity intervals for which a specific set of model"
            },
            {
                "line_number": 57,
                "text": "values has been estimated."
            },
            {
                "line_number": 58,
                "text": "NOTE 5 – The intensity intervals may overlap in order to simulate multi-generational film grain."
            },
            {
                "line_number": 59,
                "text": "Rec. ITU-T H.264 (06/2019) 369"
            }
        ]
    },
    {
        "page_number": 392,
        "lines": [
            {
                "line_number": 1,
                "text": "num_model_values_minus1[ c ] plus 1 specifies the number of model values present for each intensity interval in which"
            },
            {
                "line_number": 2,
                "text": "the film grain has been modelled. The value of num_model_values_minus1[ c ] shall be in the range of 0 to 5, inclusive."
            },
            {
                "line_number": 3,
                "text": "intensity_interval_lower_bound[ c ][ i ] specifies the lower bound of the interval i of intensity levels for which the set of"
            },
            {
                "line_number": 4,
                "text": "model values applies."
            },
            {
                "line_number": 5,
                "text": "intensity_interval_upper_bound[ c ][ i ] specifies the upper bound of the interval i of intensity levels for which the set"
            },
            {
                "line_number": 6,
                "text": "of model values applies."
            },
            {
                "line_number": 7,
                "text": "Depending on film_grain_model_id, the selection of the sets of model values is specified as follows:"
            },
            {
                "line_number": 8,
                "text": "– If film_grain_model_id is equal to 0, the average value of each block b of 8x8 samples in I , referred as b , is"
            },
            {
                "line_number": 9,
                "text": "decoded avg"
            },
            {
                "line_number": 10,
                "text": "used to select the sets of model values with index s[ j ] that apply to all the samples in the block:"
            },
            {
                "line_number": 11,
                "text": "for( i = 0, j = 0; i <= num_intensity_intervals_minus1[ c ]; i++ )"
            },
            {
                "line_number": 12,
                "text": "if( b >= intensity_interval_lower_bound[ c ][ i ] &&"
            },
            {
                "line_number": 13,
                "text": "avg"
            },
            {
                "line_number": 14,
                "text": "b <= intensity_interval_upper_bound[ c ][ i ] ) {"
            },
            {
                "line_number": 15,
                "text": "avg"
            },
            {
                "line_number": 16,
                "text": "s[ j ] = i (D-19)"
            },
            {
                "line_number": 17,
                "text": "j++"
            },
            {
                "line_number": 18,
                "text": "}"
            },
            {
                "line_number": 19,
                "text": "– Otherwise (film_grain_model_id is equal to 1), the sets of model values used to generate the film grain are selected"
            },
            {
                "line_number": 20,
                "text": "for each sample value in I as follows:"
            },
            {
                "line_number": 21,
                "text": "decoded"
            },
            {
                "line_number": 22,
                "text": "for( i = 0, j = 0; i <= num_intensity_intervals_minus1[ c ]; i++ )"
            },
            {
                "line_number": 23,
                "text": "if( I [ x, y, c ] >= intensity_interval_lower_bound[ c ][ i ] &&"
            },
            {
                "line_number": 24,
                "text": "decoded"
            },
            {
                "line_number": 25,
                "text": "I [ x, y, c ] <= intensity_interval_upper_bound[ c ][ i ] ) { (D-20)"
            },
            {
                "line_number": 26,
                "text": "decoded"
            },
            {
                "line_number": 27,
                "text": "s[ j ] = i"
            },
            {
                "line_number": 28,
                "text": "j++"
            },
            {
                "line_number": 29,
                "text": "}"
            },
            {
                "line_number": 30,
                "text": "Samples that do not fall into any of the defined intervals are not modified by the grain generation function. Samples that"
            },
            {
                "line_number": 31,
                "text": "fall into more than one interval will originate multi-generation grain. Multi-generation grain results from adding the grain"
            },
            {
                "line_number": 32,
                "text": "computed independently for each intensity interval."
            },
            {
                "line_number": 33,
                "text": "comp_model_value[ c ][ i ][ j ] represents each one of the model values present for the colour component c and the"
            },
            {
                "line_number": 34,
                "text": "intensity interval i. The set of model values has different meaning depending on the value of film_grain_model_id. The"
            },
            {
                "line_number": 35,
                "text": "value of comp_model_value[ c ][ i ][ j ] shall be constrained as follows, and may be additionally constrained as specified"
            },
            {
                "line_number": 36,
                "text": "elsewhere in this clause."
            },
            {
                "line_number": 37,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ j ] shall be in the range of 0 to 2filmGrainBitDepth[ c ] − 1,"
            },
            {
                "line_number": 38,
                "text": "inclusive."
            },
            {
                "line_number": 39,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ j ] shall be in the range of"
            },
            {
                "line_number": 40,
                "text": "−2( filmGrainBitDepth[ c ] − 1 ) to 2( filmGrainBitDepth[ c ] − 1 ) − 1, inclusive."
            },
            {
                "line_number": 41,
                "text": "Depending on film_grain_model_id, the synthesis of the film grain is modelled as follows:"
            },
            {
                "line_number": 42,
                "text": "– If film_grain_model_id is equal to 0, a frequency filtering model enables simulating the original film grain for c = 0..2,"
            },
            {
                "line_number": 43,
                "text": "x = 0..PicWidthInSamples , and y = 0..PicHeightInSamples as specified by:"
            },
            {
                "line_number": 44,
                "text": "L L"
            },
            {
                "line_number": 45,
                "text": "G[ x, y, c ] = ( comp_model_value[ c ][ s ][ 0 ] * Q[ c ][ x, y ] + comp_model_value[ c ][ s ][ 5 ] *"
            },
            {
                "line_number": 46,
                "text": "G[ x, y, c − 1 ] ) >> log2_scale_factor (D-21)"
            },
            {
                "line_number": 47,
                "text": "where Q[ c ] is a two-dimensional random process generated by filtering 16x16 blocks gaussRv with random-value"
            },
            {
                "line_number": 48,
                "text": "elements gaussRv generated with a normalized Gaussian distribution (independent and identically distributed"
            },
            {
                "line_number": 49,
                "text": "ij"
            },
            {
                "line_number": 50,
                "text": "Gaussian random variable samples with zero mean and unity variance) and where the value of an element"
            },
            {
                "line_number": 51,
                "text": "G[ x, y, c −1 ] used in the right-hand side of the equation is inferred to be equal to 0 when c − 1 is less than 0."
            },
            {
                "line_number": 52,
                "text": "NOTE 6 – A normalized Gaussian random value can be generated from two independent, uniformly distributed random"
            },
            {
                "line_number": 53,
                "text": "values over the interval from 0 to 1 (and not equal to 0), denoted as uRv0 and uRv1, using the Box-Muller transformation"
            },
            {
                "line_number": 54,
                "text": "specified by"
            },
            {
                "line_number": 55,
                "text": "gaussRv  2*Ln( uRv )*Cos( 2 * π*uRv ) (D-22)"
            },
            {
                "line_number": 56,
                "text": "ij 0 1"
            },
            {
                "line_number": 57,
                "text": "where  is Archimedes' constant 3.141 592 653...."
            },
            {
                "line_number": 58,
                "text": "370 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 393,
        "lines": [
            {
                "line_number": 1,
                "text": "The band-pass filtering of blocks gaussRv may be performed in the discrete cosine transform (DCT) domain as"
            },
            {
                "line_number": 2,
                "text": "follows:"
            },
            {
                "line_number": 3,
                "text": "for( y = 0; y < 16; y++ )"
            },
            {
                "line_number": 4,
                "text": "for( x = 0; x < 16; x++ )"
            },
            {
                "line_number": 5,
                "text": "if( ( x < comp_model_value[ c ][ s ][ 3 ] && y < comp_model_value[ c ][ s ][ 4 ] ) | | (D-23)"
            },
            {
                "line_number": 6,
                "text": "x > comp_model_value[ c ][ s ][ 1 ] | | y > comp_model_value[ c ][ s ][ 2 ] )"
            },
            {
                "line_number": 7,
                "text": "gaussRv[ x, y ] = 0"
            },
            {
                "line_number": 8,
                "text": "filteredRv = IDCT16x16( gaussRv )"
            },
            {
                "line_number": 9,
                "text": "where IDCT16x16( z ) refers to a unitary inverse discrete cosine transformation (IDCT) operating on a 16x16 matrix"
            },
            {
                "line_number": 10,
                "text": "argument z as specified by"
            },
            {
                "line_number": 11,
                "text": "IDCT16x16( z ) = r * z * rT (D-24)"
            },
            {
                "line_number": 12,
                "text": "where the superscript T indicates a matrix transposition and r is the 16x16 matrix with elements r specified by"
            },
            {
                "line_number": 13,
                "text": "ij"
            },
            {
                "line_number": 14,
                "text": "( ( i   0 ) ? 1 : 2 ) i *( 2*j  1 )* "
            },
            {
                "line_number": 15,
                "text": "r  Cos   (D-25)"
            },
            {
                "line_number": 16,
                "text": "ij 4  32 "
            },
            {
                "line_number": 17,
                "text": "where  is Archimedes' constant 3.141 592 653."
            },
            {
                "line_number": 18,
                "text": "Q[ c ] is formed by the frequency-filtered blocks filteredRv."
            },
            {
                "line_number": 19,
                "text": "NOTE 7 – Coded model values are based on blocks of 16x16, but a decoder implementation may use other block sizes."
            },
            {
                "line_number": 20,
                "text": "For example, decoders implementing the IDCT on 8x8 blocks, should down-convert by a factor of two the set of coded"
            },
            {
                "line_number": 21,
                "text": "model values comp_model_value[ c ][ s ][ i ] for i equal to 1..4."
            },
            {
                "line_number": 22,
                "text": "NOTE 8 – To reduce the degree of visible blocks that can result from mosaicking the frequency-filtered blocks filteredRv,"
            },
            {
                "line_number": 23,
                "text": "decoders may apply a low-pass filter to the boundaries between frequency-filtered blocks."
            },
            {
                "line_number": 24,
                "text": "– Otherwise (film_grain_model_id is equal to 1), an auto-regression model enables simulating the original film grain"
            },
            {
                "line_number": 25,
                "text": "for c = 0..2, x = 0..PicWidthInSamples , and y = 0..PicHeightInSamples as specified by"
            },
            {
                "line_number": 26,
                "text": "L L"
            },
            {
                "line_number": 27,
                "text": "G[ x, y, c ] = ( comp_model_value[ c ][ s ][ 0 ] * n[ x, y, c ] +"
            },
            {
                "line_number": 28,
                "text": "comp_model_value[ c ][ s ][ 1 ] * ( G[ x − 1, y, c ] + ( ( comp_model_value[ c ][ s ][ 4 ] * G[ x, y − 1, c ] ) >>"
            },
            {
                "line_number": 29,
                "text": "log2_scale_factor ) ) +"
            },
            {
                "line_number": 30,
                "text": "comp_model_value[ c ][ s ][ 3 ] * ( ( ( comp_model_value[ c ][ s ][ 4 ] * G[ x − 1, y − 1, c ] ) >>"
            },
            {
                "line_number": 31,
                "text": "log2_scale_factor ) + G[ x+1, y − 1, c ] ) +"
            },
            {
                "line_number": 32,
                "text": "comp_model_value[ c ][ s ][ 5 ] * ( G[ x − 2, y, c ] +"
            },
            {
                "line_number": 33,
                "text": "( ( comp_model_value[ c ][ s ][ 4 ] * comp_model_value[ c ][ s ][ 4 ] * G[ x, y − 2, c ] ) >>"
            },
            {
                "line_number": 34,
                "text": "( 2 * log2_scale_factor ) ) ) +"
            },
            {
                "line_number": 35,
                "text": "comp_model_value[ c ][ s ][ 2 ] * G[ x, y, c − 1 ] ) >> log2_scale_factor (D-26)"
            },
            {
                "line_number": 36,
                "text": "where n[ x, y, c ] is a random value with normalized Gaussian distribution (independent and identically distributed"
            },
            {
                "line_number": 37,
                "text": "Gaussian random variable samples with zero mean and unity variance for each value of x, y, and c) and where the"
            },
            {
                "line_number": 38,
                "text": "value of an element G[ x, y, c ] used in the right-hand side of the equation is inferred to be equal to 0 when any of the"
            },
            {
                "line_number": 39,
                "text": "following conditions are true:"
            },
            {
                "line_number": 40,
                "text": "– x is less than 0,"
            },
            {
                "line_number": 41,
                "text": "– y is less than 0,"
            },
            {
                "line_number": 42,
                "text": "– x is greater than or equal to PicWidthInSamples ,"
            },
            {
                "line_number": 43,
                "text": "L"
            },
            {
                "line_number": 44,
                "text": "– c is less than 0."
            },
            {
                "line_number": 45,
                "text": "comp_model_value[ c ][ i ][ 0 ] provides the first model value for the model as specified by film_grain_model_id."
            },
            {
                "line_number": 46,
                "text": "comp_model_value[ c ][ i ][ 0 ] corresponds to the standard deviation of the Gaussian noise term in the generation"
            },
            {
                "line_number": 47,
                "text": "functions specified in Equations D-21 through D-26."
            },
            {
                "line_number": 48,
                "text": "comp_model_value[ c ][ i ][ 1 ] provides the second model value for the model as specified by film_grain_model_id. When"
            },
            {
                "line_number": 49,
                "text": "film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 1 ] shall be greater than or equal to 0 and less than 16."
            },
            {
                "line_number": 50,
                "text": "When not present in the film grain characteristics SEI message, comp_model_value[ c ][ i ][ 1 ] shall be inferred as"
            },
            {
                "line_number": 51,
                "text": "follows:"
            },
            {
                "line_number": 52,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 1 ] shall be inferred to be equal to 8."
            },
            {
                "line_number": 53,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ 1 ] shall be inferred to be equal to 0."
            },
            {
                "line_number": 54,
                "text": "comp_model_value[ c ][ i ][ 1 ] is interpreted as follows:"
            },
            {
                "line_number": 55,
                "text": "Rec. ITU-T H.264 (06/2019) 371"
            }
        ]
    },
    {
        "page_number": 394,
        "lines": [
            {
                "line_number": 1,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 1 ] indicates the horizontal high cut frequency to"
            },
            {
                "line_number": 2,
                "text": "be used to filter the DCT of a block of 16x16 random values."
            },
            {
                "line_number": 3,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ 1 ] indicates the first order spatial"
            },
            {
                "line_number": 4,
                "text": "correlation for neighbouring samples (x − 1, y) and (x, y − 1)."
            },
            {
                "line_number": 5,
                "text": "comp_model_value[ c ][ i ][ 2 ] provides the third model value for the model as specified by film_grain_model_id. When"
            },
            {
                "line_number": 6,
                "text": "film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 2 ] shall be greater than or equal to 0 and less than 16."
            },
            {
                "line_number": 7,
                "text": "When not present in the film grain characteristics SEI message, comp_model_value[ c ][ i ][ 2 ] shall be inferred as"
            },
            {
                "line_number": 8,
                "text": "follows:"
            },
            {
                "line_number": 9,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 2 ] shall be inferred to be equal"
            },
            {
                "line_number": 10,
                "text": "to comp_model_value[ c ][ i ][ 1 ]"
            },
            {
                "line_number": 11,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ 2 ] shall be inferred to be equal to 0."
            },
            {
                "line_number": 12,
                "text": "comp_model_value[ c ][ i ][ 2 ] is interpreted as follows:"
            },
            {
                "line_number": 13,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 2 ] indicates the vertical high cut frequency to be"
            },
            {
                "line_number": 14,
                "text": "used to filter the DCT of a block of 16x16 random values."
            },
            {
                "line_number": 15,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ 2 ] indicates the colour correlation"
            },
            {
                "line_number": 16,
                "text": "between consecutive colour components."
            },
            {
                "line_number": 17,
                "text": "comp_model_value[ c ][ i ][ 3 ] provides the fourth model value for the model as specified by film_grain_model_id. When"
            },
            {
                "line_number": 18,
                "text": "film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 3 ] shall be greater than or equal to 0 and less than or equal"
            },
            {
                "line_number": 19,
                "text": "to comp_model_value[ c ][ i ][ 1 ]."
            },
            {
                "line_number": 20,
                "text": "When not present in the film grain characteristics SEI message, comp_model_value[ c ][ i ][ 3 ] shall be inferred to be"
            },
            {
                "line_number": 21,
                "text": "equal to 0."
            },
            {
                "line_number": 22,
                "text": "comp_model_value[ c ][ i ][ 3 ] is interpreted as follows:"
            },
            {
                "line_number": 23,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 3 ] indicates the horizontal low cut frequency to be"
            },
            {
                "line_number": 24,
                "text": "used to filter the DCT of a block of 16x16 random values."
            },
            {
                "line_number": 25,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ 3 ] indicates the first order spatial"
            },
            {
                "line_number": 26,
                "text": "correlation for neighbouring samples (x − 1, y − 1) and (x + 1, y − 1)."
            },
            {
                "line_number": 27,
                "text": "comp_model_value[ c ][ i ][ 4 ] provides the fifth model value for the model as specified by film_grain_model_id. When"
            },
            {
                "line_number": 28,
                "text": "film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 4] shall be greater than or equal to 0 and less than or equal"
            },
            {
                "line_number": 29,
                "text": "to comp_model_value[ c ][ i ][ 2 ]."
            },
            {
                "line_number": 30,
                "text": "When not present in the film grain characteristics SEI message, comp_model_value[ c ][ i ][ 4 ] shall be inferred to be"
            },
            {
                "line_number": 31,
                "text": "equal to film_grain_model_id."
            },
            {
                "line_number": 32,
                "text": "comp_model_value[ c ][ i ][ 4 ] is interpreted as follows:"
            },
            {
                "line_number": 33,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 4 ] indicates the vertical low cut frequency to be"
            },
            {
                "line_number": 34,
                "text": "used to filter the DCT of a block of 16x16 random values."
            },
            {
                "line_number": 35,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ 4 ] indicates the aspect ratio of the"
            },
            {
                "line_number": 36,
                "text": "modelled grain."
            },
            {
                "line_number": 37,
                "text": "comp_model_value[ c ][ i ][ 5 ] provides the sixth model value for the model as specified by film_grain_model_id."
            },
            {
                "line_number": 38,
                "text": "When not present in the film grain characteristics SEI message, comp_model_value[ c ][ i ][ 5 ] shall be inferred to be"
            },
            {
                "line_number": 39,
                "text": "equal to 0."
            },
            {
                "line_number": 40,
                "text": "comp_model_value[ c ][ i ][ 5 ] is interpreted as follows:"
            },
            {
                "line_number": 41,
                "text": "– If film_grain_model_id is equal to 0, comp_model_value[ c ][ i ][ 5 ] indicates the colour correlation between"
            },
            {
                "line_number": 42,
                "text": "consecutive colour components."
            },
            {
                "line_number": 43,
                "text": "– Otherwise (film_grain_model_id is equal to 1), comp_model_value[ c ][ i ][ 5 ] indicates the second order spatial"
            },
            {
                "line_number": 44,
                "text": "correlation for neighbouring samples (x, y − 2) and (x − 2, y)."
            },
            {
                "line_number": 45,
                "text": "film_grain_characteristics_repetition_period specifies the persistence of the film grain characteristics SEI message and"
            },
            {
                "line_number": 46,
                "text": "may specify a picture order count interval within which another film grain characteristics SEI message or the end of the"
            },
            {
                "line_number": 47,
                "text": "coded video sequence shall be present in the bitstream. The value of film_grain_characteristics_repetition_period shall be"
            },
            {
                "line_number": 48,
                "text": "in the range 0 to 16 384, inclusive."
            },
            {
                "line_number": 49,
                "text": "film_grain_characteristics_repetition_period equal to 0 specifies that the film grain characteristics SEI message applies to"
            },
            {
                "line_number": 50,
                "text": "the current decoded picture only."
            },
            {
                "line_number": 51,
                "text": "372 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 395,
        "lines": [
            {
                "line_number": 1,
                "text": "film_grain_characteristics_repetition_period equal to 1 specifies that the film grain characteristics SEI message persists in"
            },
            {
                "line_number": 2,
                "text": "output order until any of the following conditions are true:"
            },
            {
                "line_number": 3,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 4,
                "text": "– A picture in an access unit containing a film grain characteristics SEI message is output having PicOrderCnt( ) greater"
            },
            {
                "line_number": 5,
                "text": "than PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 6,
                "text": "film_grain_characteristics_repetition_period greater than 1 specifies that the film grain characteristics SEI message persists"
            },
            {
                "line_number": 7,
                "text": "until any of the following conditions are true:"
            },
            {
                "line_number": 8,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 9,
                "text": "– A picture in an access unit containing a film grain characteristics SEI message is output having PicOrderCnt( ) greater"
            },
            {
                "line_number": 10,
                "text": "than PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) +"
            },
            {
                "line_number": 11,
                "text": "film_grain_characteristics_repetition_period."
            },
            {
                "line_number": 12,
                "text": "film_grain_characteristics_repetition_period greater than 1 indicates that another film grain characteristics SEI message"
            },
            {
                "line_number": 13,
                "text": "shall be present for a picture in an access unit that is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and"
            },
            {
                "line_number": 14,
                "text": "less than or equal to PicOrderCnt( CurrPic ) + film_grain_characteristics_repetition_period; unless the bitstream ends or a"
            },
            {
                "line_number": 15,
                "text": "new coded video sequence begins without output of such a picture."
            },
            {
                "line_number": 16,
                "text": "D.2.22 Deblocking filter display preference SEI message semantics"
            },
            {
                "line_number": 17,
                "text": "This SEI message provides the decoder with an indication of whether the display of the cropped result of the deblocking"
            },
            {
                "line_number": 18,
                "text": "filter process specified in clause 8.7 or of the cropped result of the picture construction process prior to the deblocking"
            },
            {
                "line_number": 19,
                "text": "filter process specified in clause 8.5.14 is preferred by the encoder for the display of each decoded picture that is output."
            },
            {
                "line_number": 20,
                "text": "NOTE 1 – The display process is not specified in this Recommendation | International Standard. The means by which an encoder"
            },
            {
                "line_number": 21,
                "text": "determines what to indicate as its preference expressed in a deblocking filter display preference SEI message is also not specified in"
            },
            {
                "line_number": 22,
                "text": "this Recommendation | International Standard, and the expression of an expressed preference in a deblocking filter display preference"
            },
            {
                "line_number": 23,
                "text": "SEI message does not impose any requirement on the display process."
            },
            {
                "line_number": 24,
                "text": "deblocking_display_preference_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any"
            },
            {
                "line_number": 25,
                "text": "previous deblocking filter display preference SEI message in output order. deblocking_display_preference_cancel_flag"
            },
            {
                "line_number": 26,
                "text": "equal to 0 indicates that a display_prior_to_deblocking_preferred_flag and"
            },
            {
                "line_number": 27,
                "text": "deblocking_display_preference_repetition_period follow."
            },
            {
                "line_number": 28,
                "text": "NOTE 2 – In the absence of the deblocking filter display preference SEI message, or after the receipt of a deblocking filter display"
            },
            {
                "line_number": 29,
                "text": "preference SEI message in which deblocking_display_preference_cancel_flag is equal to 1, the decoder should infer that the display"
            },
            {
                "line_number": 30,
                "text": "of the cropped result of the deblocking filter process specified in clause 8.7 is preferred over the display of the cropped result of the"
            },
            {
                "line_number": 31,
                "text": "picture construction process prior to the deblocking filter process specified in clause 8.5.14 for the display of each decoded picture"
            },
            {
                "line_number": 32,
                "text": "that is output."
            },
            {
                "line_number": 33,
                "text": "display_prior_to_deblocking_preferred_flag equal to 1 indicates that the encoder preference is for the display process"
            },
            {
                "line_number": 34,
                "text": "(which is not specified in this Recommendation | International Standard) to display the cropped result of the picture"
            },
            {
                "line_number": 35,
                "text": "construction process prior to the deblocking filter process specified in clause 8.5.14 rather than the cropped result of the"
            },
            {
                "line_number": 36,
                "text": "deblocking filter process specified in clause 8.7 for each picture that is cropped and output as specified in Annex C."
            },
            {
                "line_number": 37,
                "text": "display_prior_to_deblocking_preferred_flag equal to 0 indicates that the encoder preference is for the display process"
            },
            {
                "line_number": 38,
                "text": "(which is not specified in this Recommendation | International Standard) to display the cropped result of the deblocking"
            },
            {
                "line_number": 39,
                "text": "filter process specified in clause 8.7 rather than the cropped result of the picture construction process prior to the"
            },
            {
                "line_number": 40,
                "text": "deblocking filter process specified in clause 8.5.14 for each picture that is cropped and output as specified in Annex C."
            },
            {
                "line_number": 41,
                "text": "NOTE 3 – The presence or absence of the deblocking filter display preference SEI message and the value of"
            },
            {
                "line_number": 42,
                "text": "display_prior_to_deblocking_preferred_flag does not affect the requirements of the decoding process specified in this"
            },
            {
                "line_number": 43,
                "text": "Recommendation | International Standard. Rather, it only provides an indication of when, in addition to fulfilling the requirements"
            },
            {
                "line_number": 44,
                "text": "of this Recommendation | International Standard for the decoding process, enhanced visual quality might be obtained by performing"
            },
            {
                "line_number": 45,
                "text": "the display process (which is not specified in this Recommendation | International Standard) in an alternative fashion. Encoders that"
            },
            {
                "line_number": 46,
                "text": "use the deblocking filter display preference SEI message should be designed with an awareness that unless the encoder restricts its"
            },
            {
                "line_number": 47,
                "text": "use of the DPB capacity specified in Annex A and clauses G.10 and H.10 for the profile and level in use, some decoders may not"
            },
            {
                "line_number": 48,
                "text": "have sufficient memory capacity for the storage of the result of the picture construction process prior to the deblocking filter process"
            },
            {
                "line_number": 49,
                "text": "specified in clause 8.5.14 in addition to the storage of the result of the deblocking filter process specified in clause 8.7 when"
            },
            {
                "line_number": 50,
                "text": "reordering and delaying pictures for display, and such decoders would therefore not be able to benefit from the preference indication."
            },
            {
                "line_number": 51,
                "text": "By restricting its use of the DPB capacity, an encoder can be able to use at least half of the DPB capacity specified in Annex A and"
            },
            {
                "line_number": 52,
                "text": "clauses G.10 and H.10 while allowing the decoder to use the remaining capacity for storage of unfiltered pictures that have been"
            },
            {
                "line_number": 53,
                "text": "indicated as preferable for display until the output time arrives for those pictures."
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 373"
            }
        ]
    },
    {
        "page_number": 396,
        "lines": [
            {
                "line_number": 1,
                "text": "dec_frame_buffering_constraint_flag equal to 1 indicates that the use of the frame buffering capacity of the HRD"
            },
            {
                "line_number": 2,
                "text": "decoded picture buffer (DPB) as specified by max_dec_frame_buffering has been constrained such that the coded video"
            },
            {
                "line_number": 3,
                "text": "sequence will not require a decoded picture buffer with more than Max( 1, max_dec_frame_buffering ) frame buffers to"
            },
            {
                "line_number": 4,
                "text": "enable the output of the decoded filtered or unfiltered pictures, as indicated by the deblocking filter display preference SEI"
            },
            {
                "line_number": 5,
                "text": "messages, at the output times specified by the dpb_output_delay of the picture timing SEI messages."
            },
            {
                "line_number": 6,
                "text": "dec_frame_buffering_constraint_flag equal to 0 indicates that the use of the frame buffering capacity in the HRD may or"
            },
            {
                "line_number": 7,
                "text": "may not be constrained in the manner that would be indicated by dec_frame_buffering_constraint_flag equal to 1."
            },
            {
                "line_number": 8,
                "text": "For purposes of determining the constraint imposed when dec_frame_buffering_constraint_flag is equal to 1, the quantity"
            },
            {
                "line_number": 9,
                "text": "of frame buffering capacity used at any given point in time by each frame buffer of the DPB that contains a picture shall"
            },
            {
                "line_number": 10,
                "text": "be derived as follows:"
            },
            {
                "line_number": 11,
                "text": "– If both of the following criteria are satisfied for the frame buffer, the frame buffer is considered to use two frame"
            },
            {
                "line_number": 12,
                "text": "buffers of capacity for its storage."
            },
            {
                "line_number": 13,
                "text": "– The frame buffer contains a frame or one or more fields that is marked as \"used for reference\", and"
            },
            {
                "line_number": 14,
                "text": "– The frame buffer contains a picture for which both of the following criteria are fulfilled:"
            },
            {
                "line_number": 15,
                "text": "– The HRD output time of the picture is greater than the given point in time."
            },
            {
                "line_number": 16,
                "text": "– It has been indicated in a deblocking filter display preference SEI message that the encoder preference for"
            },
            {
                "line_number": 17,
                "text": "the picture is for the display process to display the cropped result of the picture construction process prior"
            },
            {
                "line_number": 18,
                "text": "to the deblocking filter process specified in clause 8.5.14 rather than the cropped result of the deblocking"
            },
            {
                "line_number": 19,
                "text": "filter process specified in clause 8.7."
            },
            {
                "line_number": 20,
                "text": "– Otherwise, the frame buffer is considered to use one frame buffer of DPB capacity for its storage."
            },
            {
                "line_number": 21,
                "text": "When dec_frame_buffering_constraint_flag is equal to 1, the frame buffering capacity used by all of the frame buffers in"
            },
            {
                "line_number": 22,
                "text": "the DPB that contain pictures, as derived in this manner, shall not be greater than Max( 1, max_dec_frame_buffering )"
            },
            {
                "line_number": 23,
                "text": "during the operation of the HRD for the coded video sequence."
            },
            {
                "line_number": 24,
                "text": "The value of dec_frame_buffering_constraint_flag shall be the same in all deblocking filter display preference SEI"
            },
            {
                "line_number": 25,
                "text": "messages of the coded video sequence."
            },
            {
                "line_number": 26,
                "text": "deblocking_display_preference_repetition_period specifies the persistence of the deblocking filter display preference"
            },
            {
                "line_number": 27,
                "text": "SEI message and may specify a picture order count interval within which another deblocking filter display preference"
            },
            {
                "line_number": 28,
                "text": "message or the end of the coded video sequence shall be present in the bitstream. The value of"
            },
            {
                "line_number": 29,
                "text": "deblocking_display_preference_repetition_period shall be in the range 0 to 16 384, inclusive."
            },
            {
                "line_number": 30,
                "text": "deblocking_display_preference_repetition_period equal to 0 specifies that the deblocking filter display preference SEI"
            },
            {
                "line_number": 31,
                "text": "message applies to the current decoded picture only."
            },
            {
                "line_number": 32,
                "text": "deblocking_display_preference_repetition_period equal to 1 specifies that the deblocking filter display preference SEI"
            },
            {
                "line_number": 33,
                "text": "message persists in output order until any of the following conditions are true:"
            },
            {
                "line_number": 34,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 35,
                "text": "– A picture in an access unit containing a deblocking filter display preference SEI message is output having"
            },
            {
                "line_number": 36,
                "text": "PicOrderCnt( ) greater than PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 37,
                "text": "deblocking_display_preference_repetition_period greater than 1 specifies that the deblocking filter display preference SEI"
            },
            {
                "line_number": 38,
                "text": "message persists until any of the following conditions are true:"
            },
            {
                "line_number": 39,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 40,
                "text": "– A picture in an access unit containing a deblocking filter display preference SEI message is output having"
            },
            {
                "line_number": 41,
                "text": "PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) +"
            },
            {
                "line_number": 42,
                "text": "deblocking_display_preference_repetition_period."
            },
            {
                "line_number": 43,
                "text": "deblocking_display_preference_repetition_period greater than 1 indicates that another deblocking filter display"
            },
            {
                "line_number": 44,
                "text": "preference SEI message shall be present for a picture in an access unit that is output having PicOrderCnt( ) greater than"
            },
            {
                "line_number": 45,
                "text": "PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) +"
            },
            {
                "line_number": 46,
                "text": "deblocking_display_preference_repetition_period; unless the bitstream ends or a new coded video sequence begins without"
            },
            {
                "line_number": 47,
                "text": "output of such a picture."
            },
            {
                "line_number": 48,
                "text": "D.2.23 Stereo video information SEI message semantics"
            },
            {
                "line_number": 49,
                "text": "NOTE 1 – The stereo video information SEI message is included in this Specification primarily for historical reasons. It is now"
            },
            {
                "line_number": 50,
                "text": "suggested to use the frame packing arrangement SEI message rather than the stereo video information SEI message to signal stereo"
            },
            {
                "line_number": 51,
                "text": "video information."
            },
            {
                "line_number": 52,
                "text": "This SEI message provides the decoder with an indication that the entire coded video sequence consists of pairs of pictures"
            },
            {
                "line_number": 53,
                "text": "forming stereo-view content."
            },
            {
                "line_number": 54,
                "text": "374 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 397,
        "lines": [
            {
                "line_number": 1,
                "text": "The stereo video information SEI message shall not be present in any access unit of a coded video sequence unless a stereo"
            },
            {
                "line_number": 2,
                "text": "video information SEI message is present in the first access unit of the coded video sequence."
            },
            {
                "line_number": 3,
                "text": "field_views_flag equal to 1 indicates that all pictures in the current coded video sequence are fields and all fields of a"
            },
            {
                "line_number": 4,
                "text": "particular parity are considered a left view and all fields of the opposite parity are considered a right view for stereo-view"
            },
            {
                "line_number": 5,
                "text": "content. field_views_flag equal to 0 indicates that all pictures in the current coded video sequence are frames and"
            },
            {
                "line_number": 6,
                "text": "alternating frames in output order represent a view of a stereo view. The value of field_views_flag shall be the same in all"
            },
            {
                "line_number": 7,
                "text": "stereo video information SEI messages within a coded video sequence."
            },
            {
                "line_number": 8,
                "text": "When the stereo video information SEI message is present and field_views_flag is equal to 1, the left view and right view"
            },
            {
                "line_number": 9,
                "text": "of a stereo video pair shall be coded as a complementary field pair, the display time of the first field of the field pair in"
            },
            {
                "line_number": 10,
                "text": "output order should be delayed to coincide with the display time of the second field of the field pair in output order, and"
            },
            {
                "line_number": 11,
                "text": "the spatial locations of the samples in each individual field should be interpreted for display purposes as representing"
            },
            {
                "line_number": 12,
                "text": "complete pictures as shown in Figure 6-1 rather than as spatially-distinct fields within a frame as shown in Figure 6-2."
            },
            {
                "line_number": 13,
                "text": "NOTE 2 – The display process is not specified in this Recommendation | International Standard."
            },
            {
                "line_number": 14,
                "text": "top_field_is_left_view_flag equal to 1 indicates that the top fields in the coded video sequence represent a left view and"
            },
            {
                "line_number": 15,
                "text": "the bottom fields in the coded video sequence represent a right view. top_field_is_left_view_flag equal to 0 indicates that"
            },
            {
                "line_number": 16,
                "text": "the bottom fields in the coded video sequence represent a left view and the top fields in the coded video sequence represent"
            },
            {
                "line_number": 17,
                "text": "a right view. When present, the value of top_field_is_left_view_flag shall be the same in all stereo video information SEI"
            },
            {
                "line_number": 18,
                "text": "messages within a coded video sequence."
            },
            {
                "line_number": 19,
                "text": "current_frame_is_left_view_flag equal to 1 indicates that the current picture is the left view of a stereo-view pair."
            },
            {
                "line_number": 20,
                "text": "current_frame_is_left_view_flag equal to 0 indicates that the current picture is the right view of a stereo-view pair."
            },
            {
                "line_number": 21,
                "text": "next_frame_is_second_view_flag equal to 1 indicates that the current picture and the next picture in output order form a"
            },
            {
                "line_number": 22,
                "text": "stereo-view pair, and the display time of the current picture should be delayed to coincide with the display time of the next"
            },
            {
                "line_number": 23,
                "text": "picture in output order. next_frame_is_second_view_flag equal to 0 indicates that the current picture and the previous"
            },
            {
                "line_number": 24,
                "text": "picture in output order form a stereo-view pair, and the display time of the current picture should not be delayed for"
            },
            {
                "line_number": 25,
                "text": "purposes of stereo-view pairing."
            },
            {
                "line_number": 26,
                "text": "left_view_self_contained_flag equal to 1 indicates that no inter prediction operations within the decoding process for the"
            },
            {
                "line_number": 27,
                "text": "left-view pictures of the coded video sequence refer to reference pictures that are right-view pictures."
            },
            {
                "line_number": 28,
                "text": "left_view_self_contained_flag equal to 0 indicates that some inter prediction operations within the decoding process for"
            },
            {
                "line_number": 29,
                "text": "the left-view pictures of the coded video sequence may or may not refer to reference pictures that are right-view pictures."
            },
            {
                "line_number": 30,
                "text": "Within a coded video sequence, the value of left_view_self_contained_flag in all stereo video information SEI messages"
            },
            {
                "line_number": 31,
                "text": "shall be the same."
            },
            {
                "line_number": 32,
                "text": "right_view_self_contained_flag equal to 1 indicates that no inter prediction operations within the decoding process for"
            },
            {
                "line_number": 33,
                "text": "the right-view pictures of the coded video sequence refer to reference pictures that are left-view pictures."
            },
            {
                "line_number": 34,
                "text": "right_view_self_contained_flag equal to 0 indicates that some inter prediction operations within the decoding process for"
            },
            {
                "line_number": 35,
                "text": "the right-view pictures of the coded video sequence may or may not refer to reference pictures that are left-view pictures."
            },
            {
                "line_number": 36,
                "text": "Within a coded video sequence, the value of right_view_self_contained_flag in all stereo video information SEI messages"
            },
            {
                "line_number": 37,
                "text": "shall be the same."
            },
            {
                "line_number": 38,
                "text": "D.2.24 Post-filter hint SEI message semantics"
            },
            {
                "line_number": 39,
                "text": "This SEI message provides the coefficients of a post-filter or correlation information for the design of a post-filter for"
            },
            {
                "line_number": 40,
                "text": "potential use in post-processing of the output decoded pictures to obtain improved displayed quality."
            },
            {
                "line_number": 41,
                "text": "filter_hint_size_y specifies the vertical size of the filter coefficient or correlation array. The value of filter_hint_size_y"
            },
            {
                "line_number": 42,
                "text": "shall be in the range of 1 to 15, inclusive."
            },
            {
                "line_number": 43,
                "text": "filter_hint_size_x specifies the horizontal size of the filter coefficient or correlation array. The value of filter_hint_size_x"
            },
            {
                "line_number": 44,
                "text": "shall be in the range of 1 to 15, inclusive."
            },
            {
                "line_number": 45,
                "text": "filter_hint_type identifies the type of the transmitted filter hints as specified in Table D-7. The value of filter_hint_type"
            },
            {
                "line_number": 46,
                "text": "shall be in the range of 0 to 2, inclusive. Decoders shall ignore post-filter hint SEI messages having filter_hint_type equal"
            },
            {
                "line_number": 47,
                "text": "to the reserved value 3."
            },
            {
                "line_number": 48,
                "text": "Rec. ITU-T H.264 (06/2019) 375"
            }
        ]
    },
    {
        "page_number": 398,
        "lines": [
            {
                "line_number": 1,
                "text": "Table D-7 – filter_hint_type values"
            },
            {
                "line_number": 2,
                "text": "Value Description"
            },
            {
                "line_number": 3,
                "text": "0 coefficients of a 2D FIRfilter"
            },
            {
                "line_number": 4,
                "text": "1 coefficients of two 1D FIR filters"
            },
            {
                "line_number": 5,
                "text": "2 cross-correlation matrix"
            },
            {
                "line_number": 6,
                "text": "3 Reserved"
            },
            {
                "line_number": 7,
                "text": "filter_hint[ colour_component ][ cy ][ cx ] specifies a filter coefficient or an element of a cross-correlation matrix between"
            },
            {
                "line_number": 8,
                "text": "original and decoded signal with 16-bit precision. The value of filter_hint[ colour_component ][ cy ][ cx ] shall be in the"
            },
            {
                "line_number": 9,
                "text": "range of −231 + 1 to 231 − 1, inclusive. colour_component specifies the related colour component. cy represents a counter"
            },
            {
                "line_number": 10,
                "text": "in vertical direction, cx represents a counter in horizontal direction. Depending on filter_hint_type, the following applies:"
            },
            {
                "line_number": 11,
                "text": "– If filter_hint_type is equal to 0, the coefficients of a 2-dimensional FIR filter with the size of filter_hint_size_y *"
            },
            {
                "line_number": 12,
                "text": "filter_hint_size_x are transmitted."
            },
            {
                "line_number": 13,
                "text": "– Otherwise, if filter_hint_type is equal to 1, the filter coefficients of two 1-dimensional FIR filters are transmitted. In"
            },
            {
                "line_number": 14,
                "text": "this case, filter_hint_size_y shall be equal to 2. The index cy = 0 specifies the filter coefficients of the horizontal filter"
            },
            {
                "line_number": 15,
                "text": "and cy = 1 specifies the filter coefficients of the vertical filter. In the filtering process, the horizontal filter shall be"
            },
            {
                "line_number": 16,
                "text": "applied first and the result shall be filtered by the vertical filter."
            },
            {
                "line_number": 17,
                "text": "– Otherwise (filter_hint_type is equal to 2), the transmitted hints specify a cross-correlation matrix between the original"
            },
            {
                "line_number": 18,
                "text": "signal s and the decoded signal s′."
            },
            {
                "line_number": 19,
                "text": "NOTE 1 – The normalized cross-correlation matrix for a related colour component with the size of filter_hint_size_y *"
            },
            {
                "line_number": 20,
                "text": "filter_hint_size_x is defined as follows:"
            },
            {
                "line_number": 21,
                "text": "1 h1w1"
            },
            {
                "line_number": 22,
                "text": "filter_hint (cy,cx)  s(m,n)s(mcyoffset_y,ncxoffset_x) (D-27)"
            },
            {
                "line_number": 23,
                "text": "(28bitDepth1)2hwm0n0"
            },
            {
                "line_number": 24,
                "text": "where s denotes the original frame, s′ denotes the decoded frame, h denotes the vertical height of the related colour"
            },
            {
                "line_number": 25,
                "text": "component, w denotes the horizontal width of the related colour component, bitDepth denotes the bit depth of the colour"
            },
            {
                "line_number": 26,
                "text": "component, offset_y is equal to (filter_hint_size_y >> 1), offset_x is equal to (filter_hint_size_x >> 1), 0 <= cy <"
            },
            {
                "line_number": 27,
                "text": "filter_hint_size_y and 0 <= cx < filter_hint_size_x."
            },
            {
                "line_number": 28,
                "text": "NOTE 2 – A decoder can derive a Wiener post-filter from the cross-correlation matrix of original and decoded signal and the"
            },
            {
                "line_number": 29,
                "text": "auto-correlation matrix of the decoded signal."
            },
            {
                "line_number": 30,
                "text": "additional_extension_flag equal to 0 indicates that no additional data follows within the post-filter hint SEI message. The"
            },
            {
                "line_number": 31,
                "text": "value of additional_extension_flag shall be equal to 0. The value of 1 for additional_extension_flag is reserved for future"
            },
            {
                "line_number": 32,
                "text": "use by ITU-T | ISO/IEC. Decoders shall ignore all data that follows the value of 1 for additional_extension_flag in a post-"
            },
            {
                "line_number": 33,
                "text": "filter hint SEI message."
            },
            {
                "line_number": 34,
                "text": "D.2.25 Tone mapping information SEI message semantics"
            },
            {
                "line_number": 35,
                "text": "This SEI message provides information to enable remapping of the colour samples of the output decoded pictures for"
            },
            {
                "line_number": 36,
                "text": "customization to particular display environments. The remapping process maps coded sample values in the RGB colour"
            },
            {
                "line_number": 37,
                "text": "space (specified in Annex E) to target sample values. The mappings are expressed in the luma or RGB colour space domain,"
            },
            {
                "line_number": 38,
                "text": "and should be applied to the luma component or to each RGB component produced by colour space conversion of the"
            },
            {
                "line_number": 39,
                "text": "decoded image accordingly."
            },
            {
                "line_number": 40,
                "text": "tone_map_id contains an identifying number that may be used to identify the purpose of the tone mapping model. The"
            },
            {
                "line_number": 41,
                "text": "value of tone_map_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 42,
                "text": "Values of tone_map_id from 0 to 255, inclusive, and from 512 to 231 − 1, inclusive, may be used as determined by the"
            },
            {
                "line_number": 43,
                "text": "application. Values of tone_map_id from 256 to 511, inclusive, and from 231 to 232 − 2, inclusive, are reserved for future"
            },
            {
                "line_number": 44,
                "text": "use by ITU-T | ISO/IEC. Decoders encountering a value of tone_map_id in the range of 256 to 511, inclusive, or in the"
            },
            {
                "line_number": 45,
                "text": "range of 231 to 232 − 2, inclusive, shall ignore it."
            },
            {
                "line_number": 46,
                "text": "NOTE 1 – The tone_map_id can be used to support tone mapping operations that are suitable for different display scenarios. For"
            },
            {
                "line_number": 47,
                "text": "example, different values of tone_map_id may correspond to different display bit depths."
            },
            {
                "line_number": 48,
                "text": "tone_map_cancel_flag equal to 1 indicates that the tone mapping information SEI message cancels the persistence of any"
            },
            {
                "line_number": 49,
                "text": "previous tone mapping information SEI message in output order. tone_map_cancel_flag equal to 0 indicates that tone"
            },
            {
                "line_number": 50,
                "text": "mapping information follows."
            },
            {
                "line_number": 51,
                "text": "376 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 399,
        "lines": [
            {
                "line_number": 1,
                "text": "tone_map_repetition_period specifies the persistence of the tone mapping information SEI message and may specify a"
            },
            {
                "line_number": 2,
                "text": "picture order count interval within which another tone mapping information SEI message with the same value of"
            },
            {
                "line_number": 3,
                "text": "tone_map_id or the end of the coded video sequence shall be present in the bitstream. The value of"
            },
            {
                "line_number": 4,
                "text": "tone_map_repetition_period shall be in the range of 0 to 16 384, inclusive."
            },
            {
                "line_number": 5,
                "text": "tone_map_repetition_period equal to 0 specifies that the tone map information applies to the current decoded picture only."
            },
            {
                "line_number": 6,
                "text": "tone_map_repetition_period equal to 1 specifies that the tone map information persists in output order until any of the"
            },
            {
                "line_number": 7,
                "text": "following conditions are true:"
            },
            {
                "line_number": 8,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 9,
                "text": "– A picture in an access unit containing a tone mapping information SEI message with the same value of tone_map_id"
            },
            {
                "line_number": 10,
                "text": "is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 11,
                "text": "tone_map_repetition_period equal to 0 or equal to 1 indicates that another tone mapping information SEI message with"
            },
            {
                "line_number": 12,
                "text": "the same value of tone_map_id may or may not be present."
            },
            {
                "line_number": 13,
                "text": "tone_map_repetition_period greater than 1 specifies that the tone map information persists until any of the following"
            },
            {
                "line_number": 14,
                "text": "conditions are true:"
            },
            {
                "line_number": 15,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 16,
                "text": "– A picture in an access unit containing a tone mapping information SEI message with the same value of tone_map_id"
            },
            {
                "line_number": 17,
                "text": "is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic )"
            },
            {
                "line_number": 18,
                "text": "+ tone_map_repetition_period."
            },
            {
                "line_number": 19,
                "text": "tone_map_repetition_period greater than 1 indicates that another tone mapping information SEI message with the same"
            },
            {
                "line_number": 20,
                "text": "value of tone_map_id shall be present for a picture in an access unit that is output having PicOrderCnt( ) greater than"
            },
            {
                "line_number": 21,
                "text": "PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) + tone_map_repetition_period; unless the"
            },
            {
                "line_number": 22,
                "text": "bitstream ends or a new coded video sequence begins without output of such a picture."
            },
            {
                "line_number": 23,
                "text": "coded_data_bit_depth specifies the BitDepth for interpretation of the luma component of the associated pictures for"
            },
            {
                "line_number": 24,
                "text": "Y"
            },
            {
                "line_number": 25,
                "text": "purposes of interpretation of the tone mapping information SEI message. If tone mapping information SEI messages are"
            },
            {
                "line_number": 26,
                "text": "present that have coded_data_bit_depth that is not equal to BitDepth , these refer to the hypothetical result of a transcoding"
            },
            {
                "line_number": 27,
                "text": "Y"
            },
            {
                "line_number": 28,
                "text": "operation performed to convert the coded video to the BitDepth corresponding to the value of coded_data_bit_depth."
            },
            {
                "line_number": 29,
                "text": "Y"
            },
            {
                "line_number": 30,
                "text": "The value of coded_data_bit_depth shall be in the range of 8 to 14, inclusive. Values of coded_data_bit_depth from 0 to 7"
            },
            {
                "line_number": 31,
                "text": "and from 15 to 255 are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore (remove from the bitstream and"
            },
            {
                "line_number": 32,
                "text": "discard) all tone mapping SEI messages that contain a coded_data_bit_depth in the range of 0 to 7 or in the range of 15 to"
            },
            {
                "line_number": 33,
                "text": "255, and bitstreams shall not contain such values."
            },
            {
                "line_number": 34,
                "text": "target_bit_depth specifies the bit depth of the output of the dynamic range mapping function (or tone mapping function)"
            },
            {
                "line_number": 35,
                "text": "described by the tone mapping information SEI message. The tone mapping function specified with a particular"
            },
            {
                "line_number": 36,
                "text": "target_bit_depth is suggested to be reasonable for all display bit depths that are less than or equal to the target_bit_depth."
            },
            {
                "line_number": 37,
                "text": "The value of target_bit_depth shall be in the range of 1 to 16, inclusive. Values of target_bit_depth equal to 0 and in the"
            },
            {
                "line_number": 38,
                "text": "range of 17 to 255 are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore (remove from the bitstream and"
            },
            {
                "line_number": 39,
                "text": "discard) all tone mapping SEI messages that contain a value of target_bit_depth equal to 0 or in the range of 17 to 255, and"
            },
            {
                "line_number": 40,
                "text": "bitstreams shall not contain such values."
            },
            {
                "line_number": 41,
                "text": "tone_map_model_id specifies the model utilized for mapping the coded data into the target_bit_depth range. Values"
            },
            {
                "line_number": 42,
                "text": "greater than 3 are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore (remove from the bitstream and"
            },
            {
                "line_number": 43,
                "text": "discard) all tone mapping SEI messages that contain a value of tone_map_model_id greater than 4, and bitstreams shall"
            },
            {
                "line_number": 44,
                "text": "not contain such values. Decoders shall allow reserved values of tone_map_model_id in the range of 5 to 16 384, inclusive,"
            },
            {
                "line_number": 45,
                "text": "to be present in the bitstream."
            },
            {
                "line_number": 46,
                "text": "NOTE 2 – A tone_map_model_id value of 0 corresponds to a linear mapping with clipping; a tone_map_model_id value of 1"
            },
            {
                "line_number": 47,
                "text": "corresponds to a sigmoidal mapping; a tone_map_model_id value of 2 corresponds to a user-defined table mapping, a"
            },
            {
                "line_number": 48,
                "text": "tone_map_model_id value of 3 corresponds to a piece-wise linear mapping, and a tone_map_model_id value of 4 corresponds to"
            },
            {
                "line_number": 49,
                "text": "luminance dynamic range information."
            },
            {
                "line_number": 50,
                "text": "min_value specifies the RGB sample value that maps to the minimum value in the bit depth indicated by target_bit_depth."
            },
            {
                "line_number": 51,
                "text": "It is used in combination with the max_value parameter. All sample values of the decoded picture that are less than or"
            },
            {
                "line_number": 52,
                "text": "equal to min_value after conversion to the RGB domain (when decoded in a different domain) are mapped to this minimum"
            },
            {
                "line_number": 53,
                "text": "value in the target_bit_depth representation."
            },
            {
                "line_number": 54,
                "text": "max_value specifies the RGB sample value that maps to the maximum value in the bit depth indicated by target_bit_depth."
            },
            {
                "line_number": 55,
                "text": "It is used in combination with the min_value parameter. All sample values of the decoded picture that are greater than or"
            },
            {
                "line_number": 56,
                "text": "equal to max_value after conversion to the RGB domain (when decoded in a different domain) are mapped to this"
            },
            {
                "line_number": 57,
                "text": "maximum value in the target_bit_depth representation."
            },
            {
                "line_number": 58,
                "text": "Rec. ITU-T H.264 (06/2019) 377"
            }
        ]
    },
    {
        "page_number": 400,
        "lines": [
            {
                "line_number": 1,
                "text": "max_value shall be greater than or equal to min_value."
            },
            {
                "line_number": 2,
                "text": "sigmoid_midpoint specifies the RGB sample value of the coded data that is mapped to the centre point of the"
            },
            {
                "line_number": 3,
                "text": "target_bit_depth representation. It is used in combination with the sigmoid_width parameter."
            },
            {
                "line_number": 4,
                "text": "sigmoid_width specifies the distance between two coded data values that approximately correspond to the 5% and 95%"
            },
            {
                "line_number": 5,
                "text": "values of the target_bit_depth representation, respectively. It is used in combination with the sigmoid_midpoint parameter"
            },
            {
                "line_number": 6,
                "text": "and is interpreted according to the following function:"
            },
            {
                "line_number": 7,
                "text": " "
            },
            {
                "line_number": 8,
                "text": " "
            },
            {
                "line_number": 9,
                "text": " 2target_bit_depth1 "
            },
            {
                "line_number": 10,
                "text": "f(i)Round  fori0,,(2coded_bit_depth1) (D-28)"
            },
            {
                "line_number": 11,
                "text": "6*isigmoid_midpoint"
            },
            {
                "line_number": 12,
                "text": "1exp "
            },
            {
                "line_number": 13,
                "text": "    sigmoid_width    "
            },
            {
                "line_number": 14,
                "text": "where f( i ) denotes the function that maps an RGB sample value i from the coded data to a resulting RGB sample value in"
            },
            {
                "line_number": 15,
                "text": "the target_bit_depth representation."
            },
            {
                "line_number": 16,
                "text": "start_of_coded_interval[ i ] specifies the beginning point of an interval in the coded data such that all RGB sample values"
            },
            {
                "line_number": 17,
                "text": "that are greater than or equal to start_of_coded_interval[ i ] and less than start_of_coded_interval[ i + 1 ] are mapped to i"
            },
            {
                "line_number": 18,
                "text": "in the target bit depth representation. The value of start_of_coded_interval[ 2target_bit_depth ] is equal to 2coded_bit_depth. The"
            },
            {
                "line_number": 19,
                "text": "number of bits used for the representation of the start_of_coded_interval is ( ( coded_data_bit_depth + 7 ) >> 3 ) << 3."
            },
            {
                "line_number": 20,
                "text": "num_pivots specifies the number of pivot points in the piece-wise linear mapping function without counting the two"
            },
            {
                "line_number": 21,
                "text": "default end points, (0, 0) and (2coded_data_bit_depth − 1, 2target_bit_depth − 1) ."
            },
            {
                "line_number": 22,
                "text": "coded_pivot_value[ i ] specifies the value in the coded_data_bit_depth corresponding to the i-th pivot point. The number"
            },
            {
                "line_number": 23,
                "text": "of bits used for the representation of the coded_pivot_value is ( ( coded_data_bit_depth + 7 ) >> 3 ) << 3."
            },
            {
                "line_number": 24,
                "text": "target_pivot_value[ i ] specifies the value in the reference target_bit_depth corresponding to the i-th pivot point. The"
            },
            {
                "line_number": 25,
                "text": "number of bits used for the representation of the target_pivot_value is ( ( target_bit_depth + 7 ) >> 3 ) << 3."
            },
            {
                "line_number": 26,
                "text": "camera_iso_speed_idc indicates the camera ISO speed for daylight illumination as specified by ISO 12232, interpreted"
            },
            {
                "line_number": 27,
                "text": "as specified by Table D-8. When camera_iso_speed_idc indicates Extended_ISO, the ISO speed is represented by"
            },
            {
                "line_number": 28,
                "text": "camera_iso_speed_value."
            },
            {
                "line_number": 29,
                "text": "camera_iso_speed_value indicates the camera ISO speed for daylight illumination as specified by ISO 12232 when"
            },
            {
                "line_number": 30,
                "text": "camera_iso_speed_idc is set to Extended_ISO. The value of camera_iso_speed_value shall not be equal to 0."
            },
            {
                "line_number": 31,
                "text": "exposure_index_idc indicates the exposure index setting of the camera as specified by ISO 12232, interpreted as specified"
            },
            {
                "line_number": 32,
                "text": "by Table D-8. When exposure_index_idc indicates Extended_ISO, the exposure index is indicated by"
            },
            {
                "line_number": 33,
                "text": "exposure_index_value."
            },
            {
                "line_number": 34,
                "text": "The values of camera_iso_speed_idc and exposure_index_idc in the range of 31 to 254, inclusive, are reserved for future"
            },
            {
                "line_number": 35,
                "text": "use by ITU-T | ISO/IEC, and shall not be present in bitstreams conforming to this version of this Specification. Decoders"
            },
            {
                "line_number": 36,
                "text": "conforming to this version of this Specification shall ignore tone mapping SEI messages that contain these values."
            },
            {
                "line_number": 37,
                "text": "exposure_index_value indicates the exposure index setting of the camera as specified by ISO 12232 when"
            },
            {
                "line_number": 38,
                "text": "exposure_index_idc indicates Extended_ISO. The value of exposure_index_value shall not be equal to 0."
            },
            {
                "line_number": 39,
                "text": "378 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 401,
        "lines": [
            {
                "line_number": 1,
                "text": "Table D-8 – Interpretation of camera_iso_speed_idc and exposure_index_idc"
            },
            {
                "line_number": 2,
                "text": "camera_iso_speed_idc or Indicated value"
            },
            {
                "line_number": 3,
                "text": "exposure_index_idc"
            },
            {
                "line_number": 4,
                "text": "0 Unspecified"
            },
            {
                "line_number": 5,
                "text": "1 10"
            },
            {
                "line_number": 6,
                "text": "2 12"
            },
            {
                "line_number": 7,
                "text": "3 16"
            },
            {
                "line_number": 8,
                "text": "4 20"
            },
            {
                "line_number": 9,
                "text": "5 25"
            },
            {
                "line_number": 10,
                "text": "6 32"
            },
            {
                "line_number": 11,
                "text": "7 40"
            },
            {
                "line_number": 12,
                "text": "8 50"
            },
            {
                "line_number": 13,
                "text": "9 64"
            },
            {
                "line_number": 14,
                "text": "10 80"
            },
            {
                "line_number": 15,
                "text": "11 100"
            },
            {
                "line_number": 16,
                "text": "12 125"
            },
            {
                "line_number": 17,
                "text": "13 160"
            },
            {
                "line_number": 18,
                "text": "14 200"
            },
            {
                "line_number": 19,
                "text": "15 250"
            },
            {
                "line_number": 20,
                "text": "16 320"
            },
            {
                "line_number": 21,
                "text": "17 400"
            },
            {
                "line_number": 22,
                "text": "18 500"
            },
            {
                "line_number": 23,
                "text": "19 640"
            },
            {
                "line_number": 24,
                "text": "20 800"
            },
            {
                "line_number": 25,
                "text": "21 1000"
            },
            {
                "line_number": 26,
                "text": "22 1250"
            },
            {
                "line_number": 27,
                "text": "23 1600"
            },
            {
                "line_number": 28,
                "text": "24 2000"
            },
            {
                "line_number": 29,
                "text": "25 2500"
            },
            {
                "line_number": 30,
                "text": "26 3200"
            },
            {
                "line_number": 31,
                "text": "27 4000"
            },
            {
                "line_number": 32,
                "text": "28 5000"
            },
            {
                "line_number": 33,
                "text": "29 6400"
            },
            {
                "line_number": 34,
                "text": "30 8000"
            },
            {
                "line_number": 35,
                "text": "31..254 Reserved"
            },
            {
                "line_number": 36,
                "text": "255 Extended_ISO"
            },
            {
                "line_number": 37,
                "text": "Rec. ITU-T H.264 (06/2019) 379"
            }
        ]
    },
    {
        "page_number": 402,
        "lines": [
            {
                "line_number": 1,
                "text": "exposure_compensation_value_sign_flag, when applicable as specified below, specifies the sign of the variable"
            },
            {
                "line_number": 2,
                "text": "ExposureCompensationValue that indicates the exposure compensation value setting used for the process of image"
            },
            {
                "line_number": 3,
                "text": "production."
            },
            {
                "line_number": 4,
                "text": "exposure_compensation_value_numerator, when applicable as specified below, specifies the numerator of the variable"
            },
            {
                "line_number": 5,
                "text": "ExposureCompensationValue that indicates the exposure compensation value setting used for the process of image"
            },
            {
                "line_number": 6,
                "text": "production."
            },
            {
                "line_number": 7,
                "text": "exposure_compensation_value_denom_idc, when not equal to 0, specifies the denominator of the variable"
            },
            {
                "line_number": 8,
                "text": "ExposureCompensationValue that indicates the exposure compensation value setting used for the process of image"
            },
            {
                "line_number": 9,
                "text": "production."
            },
            {
                "line_number": 10,
                "text": "When exposure_compensation_value_denom_idc is present and not equal to 0, the variable ExposureCompensationValue"
            },
            {
                "line_number": 11,
                "text": "is derived from exposure_compensation_value_sign_flag, exposure_compensation_value_numerator and"
            },
            {
                "line_number": 12,
                "text": "exposure_compensation_value_denom_idc. exposure_compensation_value_sign_flag equal to 0 indicates that the"
            },
            {
                "line_number": 13,
                "text": "ExposureCompensationValue is positive. exposure_compensation_value_sign_flag equal to 1 indicates that the"
            },
            {
                "line_number": 14,
                "text": "ExposureCompensationValue is negative. When ExposureCompensationValue is positive, the image is indicated to have"
            },
            {
                "line_number": 15,
                "text": "been further sensitized through the process of production, relative to the recommended exposure index of the camera as"
            },
            {
                "line_number": 16,
                "text": "specified by ISO 12232. When ExposureCompensationValue is negative, the image is indicated to have been further"
            },
            {
                "line_number": 17,
                "text": "desensitized through the process of production, relative to the recommended exposure index of the camera as specified by"
            },
            {
                "line_number": 18,
                "text": "ISO 12232."
            },
            {
                "line_number": 19,
                "text": "When exposure_compensation_value_denom_idc is present and not equal to 0, the variable ExposureCompensationValue"
            },
            {
                "line_number": 20,
                "text": "is derived as follows:"
            },
            {
                "line_number": 21,
                "text": "ExposureCompensationValue = ( 1 − 2 * exposure_compensation_value_sign_flag ) *"
            },
            {
                "line_number": 22,
                "text": "exposure_compensation_value_numerator ÷"
            },
            {
                "line_number": 23,
                "text": "exposure_compensation_value_denom_idc (D-29)"
            },
            {
                "line_number": 24,
                "text": "The value of ExposureCompensationValue is interpreted in units of exposure steps such that an increase of 1 in"
            },
            {
                "line_number": 25,
                "text": "ExposureCompensationValue corresponds to a doubling of exposure in units of lux-seconds. For example, the exposure"
            },
            {
                "line_number": 26,
                "text": "compensation value equal to +1÷2 at the production stage may be indicated by setting"
            },
            {
                "line_number": 27,
                "text": "exposure_compensation_value_sign_flag to 0, exposure_compensation_value_numerator to 1, and"
            },
            {
                "line_number": 28,
                "text": "exposure_compensation_value_denom_idc to 2."
            },
            {
                "line_number": 29,
                "text": "When exposure_compensation_value_denom_idc is present and equal to 0, the exposure compensation value is indicated"
            },
            {
                "line_number": 30,
                "text": "as unknown or unspecified."
            },
            {
                "line_number": 31,
                "text": "ref_screen_luminance_white indicates the reference screen brightness setting for the extended range white level used for"
            },
            {
                "line_number": 32,
                "text": "image production process in units of candela per square metre."
            },
            {
                "line_number": 33,
                "text": "extended_range_white_level indicates the luminance dynamic range for extended dynamic-range display of the"
            },
            {
                "line_number": 34,
                "text": "associated pictures, after conversion to the linear light domain for display, expressed as an integer percentage relative to"
            },
            {
                "line_number": 35,
                "text": "the nominal white level. When present, the value of extended_range_white_level should be greater than or equal to 100."
            },
            {
                "line_number": 36,
                "text": "nominal_black_level_luma_code_value specifies the luma sample value of the associated decoded pictures to which the"
            },
            {
                "line_number": 37,
                "text": "nominal black level is assigned. For example, when coded_data_bit_depth is equal to 8, video_full_range_flag is equal to"
            },
            {
                "line_number": 38,
                "text": "0, and matrix_coefficients is equal to 1, nominal_black_level_luma_code_value should be equal to 16."
            },
            {
                "line_number": 39,
                "text": "nominal_white_level_luma_code_value specifies the luma sample value of the associated decoded pictures to which the"
            },
            {
                "line_number": 40,
                "text": "nominal white level is assigned. For example, when coded_data_bit_depth is equal to 8, video_full_range_flag is equal to"
            },
            {
                "line_number": 41,
                "text": "0, and matrix_coefficients is equal to 1, nominal_white_level_luma_code_value should be equal to 235. When present, the"
            },
            {
                "line_number": 42,
                "text": "value of nominal_white_level_luma_code_value shall be greater than nominal_black_level_luma_code_value."
            },
            {
                "line_number": 43,
                "text": "extended_white_level_luma_code_value specifies the luma sample value of the associated decoded pictures to which the"
            },
            {
                "line_number": 44,
                "text": "white level associated with an extended dynamic range is assigned. When present, the value of"
            },
            {
                "line_number": 45,
                "text": "extended_white_level_luma_code_value shall be greater than or equal to nominal_white_level_luma_code_value."
            },
            {
                "line_number": 46,
                "text": "D.2.26 Frame packing arrangement SEI message semantics"
            },
            {
                "line_number": 47,
                "text": "This SEI message informs the decoder that the output cropped decoded picture contains samples of multiple distinct"
            },
            {
                "line_number": 48,
                "text": "spatially packed constituent frames that are packed into one frame, or that the output cropped decoded pictures in output"
            },
            {
                "line_number": 49,
                "text": "order form a temporal interleaving of alternating first and second constituent frames, using an indicated frame packing"
            },
            {
                "line_number": 50,
                "text": "arrangement scheme. This information can be used by the decoder to appropriately rearrange and process the samples of"
            },
            {
                "line_number": 51,
                "text": "the constituent frames appropriately for display or other purposes (which are outside the scope of this Specification)."
            },
            {
                "line_number": 52,
                "text": "380 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 403,
        "lines": [
            {
                "line_number": 1,
                "text": "This SEI message may be associated with pictures that are either frames or fields. The frame packing arrangement of the"
            },
            {
                "line_number": 2,
                "text": "samples is specified in terms of the sampling structure of a frame in order to define a frame packing arrangement structure"
            },
            {
                "line_number": 3,
                "text": "that is invariant with respect to whether a picture is a single field of such a packed frame or is a complete packed frame."
            },
            {
                "line_number": 4,
                "text": "frame_packing_arrangement_id contains an identifying number that may be used to identify the usage of the frame"
            },
            {
                "line_number": 5,
                "text": "packing arrangement SEI message. The value of frame_packing_arrangement_id shall be in the range of 0 to 232 − 2,"
            },
            {
                "line_number": 6,
                "text": "inclusive."
            },
            {
                "line_number": 7,
                "text": "Values of frame_packing_arrangement_id from 0 to 255, inclusive, and from 512 to 231 − 1, inclusive, may be used as"
            },
            {
                "line_number": 8,
                "text": "determined by the application. Values of frame_packing_arrangement_id from 256 to 511, inclusive, and from 231 to"
            },
            {
                "line_number": 9,
                "text": "232 − 2, inclusive, are reserved for future use by ITU-T | ISO/IEC. Decoders encountering a value of"
            },
            {
                "line_number": 10,
                "text": "frame_packing_arrangement_id in the range of 256 to 511, inclusive, or in the range of 231 to 232 − 2, inclusive, shall ignore"
            },
            {
                "line_number": 11,
                "text": "it."
            },
            {
                "line_number": 12,
                "text": "frame_packing_arrangement_cancel_flag equal to 1 indicates that the frame packing arrangement SEI message cancels"
            },
            {
                "line_number": 13,
                "text": "the persistence of any previous frame packing arrangement SEI message in output order."
            },
            {
                "line_number": 14,
                "text": "frame_packing_arrangement_cancel_flag equal to 0 indicates that frame packing arrangement information follows."
            },
            {
                "line_number": 15,
                "text": "frame_packing_arrangement_type identifies the indicated interpretation of the sample arrays of the output cropped"
            },
            {
                "line_number": 16,
                "text": "decoded picture as specified in Table D-9."
            },
            {
                "line_number": 17,
                "text": "Table D-9 – Definition of frame_packing_arrangement_type"
            },
            {
                "line_number": 18,
                "text": "Value Interpretation"
            },
            {
                "line_number": 19,
                "text": "0 The frame packing arrangement structure contains a \"checkerboard\" based interleaving of corresponding"
            },
            {
                "line_number": 20,
                "text": "planes of two constituent frames as illustrated in Figure D-1."
            },
            {
                "line_number": 21,
                "text": "1 The frame packing arrangement structure contains a column based interleaving of corresponding planes of"
            },
            {
                "line_number": 22,
                "text": "two constituent frames as illustrated in Figure D-2 and Figure D-3."
            },
            {
                "line_number": 23,
                "text": "2 The frame packing arrangement structure contains a row based interleaving of corresponding planes of two"
            },
            {
                "line_number": 24,
                "text": "constituent frames as illustrated in Figure D-4 and Figure D-5."
            },
            {
                "line_number": 25,
                "text": "3 The frame packing arrangement structure contains a side-by-side packing arrangement of corresponding"
            },
            {
                "line_number": 26,
                "text": "planes of two constituent frames as illustrated in Figure D-6, Figure D-7, and Figure D-10."
            },
            {
                "line_number": 27,
                "text": "4 The frame packing arrangement structure contains a top-bottom packing arrangement of corresponding"
            },
            {
                "line_number": 28,
                "text": "planes of two constituent frames as illustrated in Figure D-8 and Figure D-9."
            },
            {
                "line_number": 29,
                "text": "5 The component planes of the output cropped decoded pictures in output order form a temporal interleaving"
            },
            {
                "line_number": 30,
                "text": "of alternating first and second constituent frames as illustrated in Figure D-11."
            },
            {
                "line_number": 31,
                "text": "6 The output cropped decoded picture constitutes a complete 2D frame (when field_pic_flag is equal to 0) or"
            },
            {
                "line_number": 32,
                "text": "field (when field_pic_flag is equal to 1) without any frame packing."
            },
            {
                "line_number": 33,
                "text": "7 The frame packing arrangement structure contains a tile format packing arrangement of corresponding"
            },
            {
                "line_number": 34,
                "text": "planes of two constituent frames as illustrated in Figure D-12."
            },
            {
                "line_number": 35,
                "text": "NOTE 1 – Figure D-1 to Figure D-10 provide typical examples of rearrangement and upconversion processing for various packing"
            },
            {
                "line_number": 36,
                "text": "arrangement schemes. Actual characteristics of the constituent frames are signalled in detail by the subsequent syntax elements of"
            },
            {
                "line_number": 37,
                "text": "the frame packing arrangement SEI message. In Figure D-1 to Figure D-10, an upconversion processing is performed on each"
            },
            {
                "line_number": 38,
                "text": "constituent frame to produce frames having the same resolution as that of the decoded frame. An example of the upsampling method"
            },
            {
                "line_number": 39,
                "text": "to be applied to a quincunx sampled frame as shown in Figure D-1 or Figure D-10 is to fill in missing positions with an average of"
            },
            {
                "line_number": 40,
                "text": "the available spatially neighbouring samples (the average of the values of the available samples above, below, to the left and to the"
            },
            {
                "line_number": 41,
                "text": "right of each sample to be generated). The actual upconversion process to be performed, if any, is outside the scope of this"
            },
            {
                "line_number": 42,
                "text": "Specification."
            },
            {
                "line_number": 43,
                "text": "NOTE 2 – The sample aspect ratio (SAR) indicated in the VUI parameters should indicate the output picture shape for the packed"
            },
            {
                "line_number": 44,
                "text": "decoded frame output by a decoder that does not interpret the frame packing arrangement SEI message. In the examples shown in"
            },
            {
                "line_number": 45,
                "text": "Figure D-1 to Figure D-10, the SAR produced in each upconverted colour plane would be the same as the SAR indicated in the VUI"
            },
            {
                "line_number": 46,
                "text": "parameters, since the illustrated upconversion process produces the same total number of samples from each constituent frame as"
            },
            {
                "line_number": 47,
                "text": "existed in the packed decoded frame."
            },
            {
                "line_number": 48,
                "text": "NOTE 3 – When the output time of the samples of constituent frame 0 differs from the output time of the samples of constituent"
            },
            {
                "line_number": 49,
                "text": "frame 1 (i.e., when field_views_flag is equal to 1 or frame_packing_arrangement_type is equal to 5) and the display system in use"
            },
            {
                "line_number": 50,
                "text": "presents two views simultaneously, the display time for constituent frame 0 should be delayed to coincide with the display time for"
            },
            {
                "line_number": 51,
                "text": "constituent frame 1. (The display process is not specified in this Recommendation | International Standard.)"
            },
            {
                "line_number": 52,
                "text": "Rec. ITU-T H.264 (06/2019) 381"
            }
        ]
    },
    {
        "page_number": 404,
        "lines": [
            {
                "line_number": 1,
                "text": "NOTE 4 – When field_views_flag is equal to 1 or frame_packing_arrangement_type is equal to 5, the value 0 for"
            },
            {
                "line_number": 2,
                "text": "fixed_frame_rate_flag is not expected to be prevalent in industry use of this SEI message."
            },
            {
                "line_number": 3,
                "text": "NOTE 5 – frame_packing_arrangement_type equal to 5 describes a temporal interleaving process of different views."
            },
            {
                "line_number": 4,
                "text": "NOTE 6 – Figure D-12 provides an illustration of the rearrangement process for the frame packing arrangement scheme for the"
            },
            {
                "line_number": 5,
                "text": "frame_packing_arrangement_type value of 7."
            },
            {
                "line_number": 6,
                "text": "All other values of frame_packing_arrangement_type are reserved for future use by ITU-T | ISO/IEC. It is a requirement"
            },
            {
                "line_number": 7,
                "text": "of bitstream conformance that the bitstreams shall not contain such other values of frame_packing_arrangement_type."
            },
            {
                "line_number": 8,
                "text": "quincunx_sampling_flag equal to 1 indicates that each colour component plane of each constituent frame is quincunx"
            },
            {
                "line_number": 9,
                "text": "sampled as illustrated in Figure D-1 or Figure D-10, and quincunx_sampling_flag equal to 0 indicates that the colour"
            },
            {
                "line_number": 10,
                "text": "component planes of each constituent frame are not quincunx sampled."
            },
            {
                "line_number": 11,
                "text": "When frame_packing_arrangement_type is equal to 0, it is a requirement of bitstream conformance that quincunx_"
            },
            {
                "line_number": 12,
                "text": "sampling_flag shall be equal to 1. When frame_packing_arrangement_type is equal to 5, 6, or 7, it is a requirement of"
            },
            {
                "line_number": 13,
                "text": "bitstream conformance that quincunx_sampling_flag shall be equal to 0."
            },
            {
                "line_number": 14,
                "text": "NOTE 7 – For any chroma format (4:2:0, 4:2:2, or 4:4:4), the luma plane and each chroma plane is quincunx sampled as illustrated"
            },
            {
                "line_number": 15,
                "text": "in Figure D-1 when quincunx_sampling_flag is equal to 1."
            },
            {
                "line_number": 16,
                "text": "Let croppedWidth and croppedHeight be the width and height, respectively, of the cropped frame area output from the"
            },
            {
                "line_number": 17,
                "text": "decoder in units of luma samples, derived as follows:"
            },
            {
                "line_number": 18,
                "text": "croppedWidth = PicWidthInSamples − CropUnitX * ( frame_crop_left_offset + frame_crop_right_offset )"
            },
            {
                "line_number": 19,
                "text": "L"
            },
            {
                "line_number": 20,
                "text": "(D-30)"
            },
            {
                "line_number": 21,
                "text": "croppedHeight = 16 * FrameHeightInMbs − CropUnitY * ( frame_crop_top_offset + frame_crop_bottom_offset )"
            },
            {
                "line_number": 22,
                "text": "(D-31)"
            },
            {
                "line_number": 23,
                "text": "When frame_packing_arrangement_type is equal to 7, it is a requirement of bitstream conformance that croppedWidth and"
            },
            {
                "line_number": 24,
                "text": "croppedHeight shall be integer multiples of 3."
            },
            {
                "line_number": 25,
                "text": "Let oneThirdWidth and oneThirdHeight be derived as follows:"
            },
            {
                "line_number": 26,
                "text": "oneThirdWidth = croppedWidth / 3 (D-32)"
            },
            {
                "line_number": 27,
                "text": "oneThirdHeight = croppedHeight / 3 (D-33)"
            },
            {
                "line_number": 28,
                "text": "When frame_packing_arrangement_type is equal to 7, the frame packing arrangement is composed of five rectangular"
            },
            {
                "line_number": 29,
                "text": "regions identified as R0, R1, R2, R3, and R4 as illustrated in Figure D-12."
            },
            {
                "line_number": 30,
                "text": "The width and height of region R0 are specified in units of frame luma samples as follows:"
            },
            {
                "line_number": 31,
                "text": "r0 = 2 * oneThirdWidth (D-34)"
            },
            {
                "line_number": 32,
                "text": "W"
            },
            {
                "line_number": 33,
                "text": "r0 = 2* oneThirdHeight (D-35)"
            },
            {
                "line_number": 34,
                "text": "H"
            },
            {
                "line_number": 35,
                "text": "The width and height of region R1 are specified in units of frame luma samples as follows:"
            },
            {
                "line_number": 36,
                "text": "r1 = oneThirdWidth (D-36)"
            },
            {
                "line_number": 37,
                "text": "W"
            },
            {
                "line_number": 38,
                "text": "r1 = 2* oneThirdHeight (D-37)"
            },
            {
                "line_number": 39,
                "text": "H"
            },
            {
                "line_number": 40,
                "text": "The width and height of region R2 are specified in units of frame luma samples as follows:"
            },
            {
                "line_number": 41,
                "text": "r2 = oneThirdWidth (D-38)"
            },
            {
                "line_number": 42,
                "text": "W"
            },
            {
                "line_number": 43,
                "text": "r2 = oneThirdHeight (D-39)"
            },
            {
                "line_number": 44,
                "text": "H"
            },
            {
                "line_number": 45,
                "text": "The width and height of region R3 are specified in units of frame luma samples as follows:"
            },
            {
                "line_number": 46,
                "text": "r3 = oneThirdWidth (D-40)"
            },
            {
                "line_number": 47,
                "text": "W"
            },
            {
                "line_number": 48,
                "text": "r3 = oneThirdHeight (D-41)"
            },
            {
                "line_number": 49,
                "text": "H"
            },
            {
                "line_number": 50,
                "text": "The width and height of region R4 are specified in units of frame luma samples as follows:"
            },
            {
                "line_number": 51,
                "text": "382 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 405,
        "lines": [
            {
                "line_number": 1,
                "text": "r4 = oneThirdWidth (D-42)"
            },
            {
                "line_number": 2,
                "text": "W"
            },
            {
                "line_number": 3,
                "text": "r4 = oneThirdHeight (D-43)"
            },
            {
                "line_number": 4,
                "text": "H"
            },
            {
                "line_number": 5,
                "text": "When frame_packing_arrangement_type is equal to 7, constituent frame 0 is obtained by cropping from the decoded frames"
            },
            {
                "line_number": 6,
                "text": "region R0, and constituent frame 1 is obtained by stacking vertically regions R2 and R3 and placing the resulting rectangle"
            },
            {
                "line_number": 7,
                "text": "to the right of the region R1. Region R4 is not part of either constituent frame and is discarded."
            },
            {
                "line_number": 8,
                "text": "content_interpretation_type indicates the intended interpretation of the constituent frames as specified in Table D-10."
            },
            {
                "line_number": 9,
                "text": "Values of content_interpretation_type that do not appear in Table D-10 are reserved for future specification by ITU-T |"
            },
            {
                "line_number": 10,
                "text": "ISO/IEC. When frame_packing_arrangement_type is equal to 6, content_interpretation_type shall be equal to 0."
            },
            {
                "line_number": 11,
                "text": "When frame_packing_arrangement_type is not equal to 6, for each specified frame packing arrangement scheme, there are"
            },
            {
                "line_number": 12,
                "text": "two constituent frames that are referred to as frame 0 and frame 1."
            },
            {
                "line_number": 13,
                "text": "Table D-10 – Definition of content_interpretation_type"
            },
            {
                "line_number": 14,
                "text": "Value Interpretation"
            },
            {
                "line_number": 15,
                "text": "0 Unspecified relationship between the frame packed constituent frames"
            },
            {
                "line_number": 16,
                "text": "1 Indicates that the two constituent frames form the left and right views of a stereo view scene, with frame 0"
            },
            {
                "line_number": 17,
                "text": "being associated with the left view and frame 1 being associated with the right view"
            },
            {
                "line_number": 18,
                "text": "2 Indicates that the two constituent frames form the right and left views of a stereo view scene, with frame 0"
            },
            {
                "line_number": 19,
                "text": "being associated with the right view and frame 1 being associated with the left view"
            },
            {
                "line_number": 20,
                "text": "NOTE 8 – The value 2 for content_interpretation_type is not expected to be prevalent in industry use of this SEI message. However,"
            },
            {
                "line_number": 21,
                "text": "the value was specified herein for purposes of completeness."
            },
            {
                "line_number": 22,
                "text": "When frame_packing_arrangement_type is equal to 6, content_interpretation_type, frame0_self_contained_flag,"
            },
            {
                "line_number": 23,
                "text": "frame1_self_contained_flag, frame0_grid_position_x, frame0_grid_position_y, frame1_grid_position_x, and"
            },
            {
                "line_number": 24,
                "text": "frame1_grid_position_y have no meaning and shall be equal to 0, and decoders shall ignore the values of these syntax"
            },
            {
                "line_number": 25,
                "text": "elements. In this case, semantics for other values of these syntax elements are reserved for future specification by ITU-T |"
            },
            {
                "line_number": 26,
                "text": "ISO/IEC."
            },
            {
                "line_number": 27,
                "text": "spatial_flipping_flag equal to 1, when frame_packing_arrangement_type is equal to 3 or 4, indicates that one of the two"
            },
            {
                "line_number": 28,
                "text": "constituent frames is spatially flipped relative to its intended orientation for display or other such purposes."
            },
            {
                "line_number": 29,
                "text": "When frame_packing_arrangement_type is equal to 3 or 4 and spatial_flipping_flag is equal to 1, the type of spatial flipping"
            },
            {
                "line_number": 30,
                "text": "that is indicated is as follows:"
            },
            {
                "line_number": 31,
                "text": "– If frame_packing_arrangement_type is equal to 3, the indicated spatial flipping is horizontal flipping."
            },
            {
                "line_number": 32,
                "text": "– Otherwise (frame_packing_arrangement_type is equal to 4), the indicated spatial flipping is vertical flipping."
            },
            {
                "line_number": 33,
                "text": "When frame_packing_arrangement_type is not equal to 3 or 4, it is a requirement of bitstream conformance that"
            },
            {
                "line_number": 34,
                "text": "spatial_flipping_flag shall be equal to 0. When frame_packing_arrangement_type is not equal to 3 or 4, the value 1 for"
            },
            {
                "line_number": 35,
                "text": "spatial_flipping_flag is reserved for future use by ITU-T | ISO/IEC. When frame_packing_arrangement_type is not equal"
            },
            {
                "line_number": 36,
                "text": "to 3 or 4, decoders shall ignore the value 1 for spatial_flipping_flag."
            },
            {
                "line_number": 37,
                "text": "frame0_flipped_flag, when spatial_flipping_flag is equal to 1, indicates which one of the two constituent frames is flipped."
            },
            {
                "line_number": 38,
                "text": "When spatial_flipping_flag is equal to 1, frame0_flipped_flag equal to 0 indicates that frame 0 is not spatially flipped and"
            },
            {
                "line_number": 39,
                "text": "frame 1 is spatially flipped, and frame0_flipped_flag equal to 1 indicates that frame 0 is spatially flipped and frame 1 is"
            },
            {
                "line_number": 40,
                "text": "not spatially flipped."
            },
            {
                "line_number": 41,
                "text": "When spatial_flipping_flag is equal to 0, it is a requirement of bitstream conformance that frame0_flipped_flag shall be"
            },
            {
                "line_number": 42,
                "text": "equal to 0. When spatial_flipping_flag is equal to 0, the value 1 for spatial_flipping_flag is reserved for future use by ITU-"
            },
            {
                "line_number": 43,
                "text": "T | ISO/IEC. When spatial_flipping_flag is equal to 0, decoders shall ignore the value of frame0_flipped_flag."
            },
            {
                "line_number": 44,
                "text": "field_views_flag equal to 1 indicates that all pictures in the current coded video sequence are coded as complementary"
            },
            {
                "line_number": 45,
                "text": "field pairs. All fields of a particular parity are considered a first constituent frame and all fields of the opposite parity are"
            },
            {
                "line_number": 46,
                "text": "considered a second constituent frame. When frame_packing_arrangement_type is not equal to 2, it is a requirement of"
            },
            {
                "line_number": 47,
                "text": "bitstream conformance that the field_views_flag shall be equal to 0. When frame_packing_arrangement_type is not equal"
            },
            {
                "line_number": 48,
                "text": "to 2, the value 1 for field_views_flag is reserved for future use by ITU-T | ISO/IEC. When frame_"
            },
            {
                "line_number": 49,
                "text": "packing_arrangement_type is not equal to 2, decoders shall ignore the value of field_views_flag."
            },
            {
                "line_number": 50,
                "text": "Rec. ITU-T H.264 (06/2019) 383"
            }
        ]
    },
    {
        "page_number": 406,
        "lines": [
            {
                "line_number": 1,
                "text": "current_frame_is_frame0_flag equal to 1, when frame_packing_arrangement is equal to 5, indicates that the current"
            },
            {
                "line_number": 2,
                "text": "decoded frame is constituent frame 0 and the next decoded frame in output order is constituent frame 1, and the display"
            },
            {
                "line_number": 3,
                "text": "time of the constituent frame 0 should be delayed to coincide with the display time of constituent frame 1."
            },
            {
                "line_number": 4,
                "text": "current_frame_is_frame0_flag equal to 0, when frame_packing_arrangement is equal to 5, indicates that the current"
            },
            {
                "line_number": 5,
                "text": "decoded frame is constituent frame 1 and the previous decoded frame in output order is constituent frame 0, and the display"
            },
            {
                "line_number": 6,
                "text": "time of the constituent frame 1 should not be delayed for purposes of stereo-view pairing."
            },
            {
                "line_number": 7,
                "text": "When frame_packing_arrangement_type is not equal to 5, the constituent frame associated with the upper-left sample of"
            },
            {
                "line_number": 8,
                "text": "the decoded frame is considered to be constituent frame 0 and the other constituent frame is considered to be constituent"
            },
            {
                "line_number": 9,
                "text": "frame 1. When frame_packing_arrangement_type is not equal to 5, it is a requirement of bitstream conformance that"
            },
            {
                "line_number": 10,
                "text": "current_frame_is_frame0_flag shall be equal to 0. When frame_packing_arrangement_type is not equal to 5, the value 1"
            },
            {
                "line_number": 11,
                "text": "for current_frame_is_frame0_flag is reserved for future use by ITU-T | ISO/IEC. When frame_packing_arrangement_type"
            },
            {
                "line_number": 12,
                "text": "is not equal to 5, decoders shall ignore the value of current_frame_is_frame0_flag."
            },
            {
                "line_number": 13,
                "text": "frame0_self_contained_flag equal to 1 indicates that no inter prediction operations within the decoding process for the"
            },
            {
                "line_number": 14,
                "text": "samples of constituent frame 0 of the coded video sequence refer to samples of any constituent frame 1."
            },
            {
                "line_number": 15,
                "text": "frame0_self_contained_flag equal to 0 indicates that some inter prediction operations within the decoding process for the"
            },
            {
                "line_number": 16,
                "text": "samples of constituent frame 0 of the coded video sequence may or may not refer to samples of some constituent frame 1."
            },
            {
                "line_number": 17,
                "text": "When frame_packing_arrangement_type is equal to 0 or 1, it is a requirement of bitstream conformance that"
            },
            {
                "line_number": 18,
                "text": "frame0_self_contained_flag shall be equal to 0. When frame_packing_arrangement_type is equal to 0 or 1, the value 1 for"
            },
            {
                "line_number": 19,
                "text": "frame0_self_contained_flag is reserved for future use by ITU-T | ISO/IEC. When frame_packing_arrangement_type is"
            },
            {
                "line_number": 20,
                "text": "equal to 0 or 1, decoders shall ignore the value of frame0_self_contained_flag. Within a coded video sequence, the value"
            },
            {
                "line_number": 21,
                "text": "of frame0_self_contained_flag in all frame packing arrangement SEI messages shall be the same."
            },
            {
                "line_number": 22,
                "text": "frame1_self_contained_flag equal to 1 indicates that no inter prediction operations within the decoding process for the"
            },
            {
                "line_number": 23,
                "text": "samples of constituent frame 1 of the coded video sequence refer to samples of any constituent frame 0."
            },
            {
                "line_number": 24,
                "text": "frame1_self_contained_flag equal to 0 indicates that some inter prediction operations within the decoding process for the"
            },
            {
                "line_number": 25,
                "text": "samples of constituent frame 1 of the coded video sequence may or may not refer to samples of some constituent frame 0."
            },
            {
                "line_number": 26,
                "text": "When frame_packing_arrangement_type is equal to 0 or 1, it is a requirement of bitstream conformance that"
            },
            {
                "line_number": 27,
                "text": "frame1_self_contained_flag shall be equal to 0. When frame_packing_arrangement_type is equal to 0 or 1, the value 1 for"
            },
            {
                "line_number": 28,
                "text": "frame1_self_contained_flag is reserved for future use by ITU-T | ISO/IEC. When frame_packing_arrangement_type is"
            },
            {
                "line_number": 29,
                "text": "equal to 0 or 1, decoders shall ignore the value of frame1_self_contained_flag. Within a coded video sequence, the value"
            },
            {
                "line_number": 30,
                "text": "of frame1_self_contained_flag in all frame packing arrangement SEI messages shall be the same."
            },
            {
                "line_number": 31,
                "text": "NOTE 9 – When frame0_self_contained_flag is equal to 1 or frame1_self_contained_flag is equal to 1, and"
            },
            {
                "line_number": 32,
                "text": "frame_packing_arrangement_type is equal to 2, it is expected that the decoded frame should not be an MBAFF frame."
            },
            {
                "line_number": 33,
                "text": "When quincunx_sampling_flag is equal to 0 and frame_packing_arrangement_type is not equal to 5, two (x, y) coordinate"
            },
            {
                "line_number": 34,
                "text": "pairs are specified to determine the indicated luma sampling grid alignment for constituent frame 0 and constituent frame"
            },
            {
                "line_number": 35,
                "text": "1, relative to the upper left corner of the rectangular area represented by the samples of the corresponding constituent"
            },
            {
                "line_number": 36,
                "text": "frame."
            },
            {
                "line_number": 37,
                "text": "NOTE 10 – The location of chroma samples relative to luma samples can be indicated by the chroma_sample_loc_type_top_field"
            },
            {
                "line_number": 38,
                "text": "and chroma_sample_loc_type_bottom_field syntax elements in the VUI parameters."
            },
            {
                "line_number": 39,
                "text": "frame0_grid_position_x (when present) specifies the x component of the (x, y) coordinate pair for constituent frame 0."
            },
            {
                "line_number": 40,
                "text": "frame0_grid_position_y (when present) specifies the y component of the (x, y) coordinate pair for constituent frame 0."
            },
            {
                "line_number": 41,
                "text": "frame1_grid_position_x (when present) specifies the x component of the (x, y) coordinate pair for constituent frame 1."
            },
            {
                "line_number": 42,
                "text": "frame1_grid_position_y (when present) specifies the y component of the (x, y) coordinate pair for constituent frame 1."
            },
            {
                "line_number": 43,
                "text": "When quincunx_sampling_flag is equal to 0 and frame_packing_arrangement_type is not equal to 5 the (x, y) coordinate"
            },
            {
                "line_number": 44,
                "text": "pair for each constituent frame is interpreted as follows:"
            },
            {
                "line_number": 45,
                "text": "– If the (x, y) coordinate pair for a constituent frame is equal to (0, 0), this indicates a default sampling grid alignment"
            },
            {
                "line_number": 46,
                "text": "specified as follows:"
            },
            {
                "line_number": 47,
                "text": "– If frame_packing_arrangement_type is equal to 1 or 3, the indicated position is the same as for the (x, y)"
            },
            {
                "line_number": 48,
                "text": "coordinate pair value (4, 8), as illustrated in Figure D-2 and Figure D-6."
            },
            {
                "line_number": 49,
                "text": "– Otherwise (frame_packing_arrangement_type is equal to 2 or 4), the indicated position is the same as for the"
            },
            {
                "line_number": 50,
                "text": "(x, y) coordinate pair value (8, 4), as illustrated in Figure D-4 and Figure D-8."
            },
            {
                "line_number": 51,
                "text": "– Otherwise, if the (x, y) coordinate pair for a constituent frame is equal to (15, 15), this indicates that the sampling"
            },
            {
                "line_number": 52,
                "text": "grid alignment is unknown or unspecified or specified by other means not specified in this Recommendation |"
            },
            {
                "line_number": 53,
                "text": "International Standard."
            },
            {
                "line_number": 54,
                "text": "– Otherwise, the x and y elements of the (x, y) coordinate pair specify the indicated horizontal and vertical sampling"
            },
            {
                "line_number": 55,
                "text": "grid alignment positioning to the right of and below the upper left corner of the rectangular area represented by the"
            },
            {
                "line_number": 56,
                "text": "384 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 407,
        "lines": [
            {
                "line_number": 1,
                "text": "corresponding constituent frame, respectively, in units of one sixteenth of the luma sample grid spacing between the"
            },
            {
                "line_number": 2,
                "text": "samples of the columns and rows of the constituent frame that are present in the decoded frame (prior to any"
            },
            {
                "line_number": 3,
                "text": "upsampling for display or other purposes)."
            },
            {
                "line_number": 4,
                "text": "NOTE 11 – The spatial location reference information frame0_grid_position_x, frame0_grid_position_y, frame1_grid_position_x,"
            },
            {
                "line_number": 5,
                "text": "and frame1_grid_position_y is not provided when quincunx_sampling_flag is equal to 1 because the spatial alignment in this case"
            },
            {
                "line_number": 6,
                "text": "is assumed to be such that constituent frame 0 and constituent frame 1 cover corresponding spatial areas with interleaved quincunx"
            },
            {
                "line_number": 7,
                "text": "sampling patterns as illustrated in Figure D-1 and Figure D-10."
            },
            {
                "line_number": 8,
                "text": "NOTE 12 – When frame_packing_arrangement_type is equal to 2 and field_views_flag is equal to 1, it is suggested that"
            },
            {
                "line_number": 9,
                "text": "frame0_grid_position_y should be equal to frame1_grid_position_y."
            },
            {
                "line_number": 10,
                "text": "frame_packing_arrangement_reserved_byte is reserved for future use by ITU-T | ISO/IEC. It is a requirement of"
            },
            {
                "line_number": 11,
                "text": "bitstream conformance that the value of frame_packing_arrangement_reserved_byte shall be equal to 0. All other values"
            },
            {
                "line_number": 12,
                "text": "of frame_packing_arrangement_reserved_byte are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore"
            },
            {
                "line_number": 13,
                "text": "(remove from the bitstream and discard) the value of frame_packing_arrangement_reserved_byte."
            },
            {
                "line_number": 14,
                "text": "frame_packing_arrangement_repetition_period specifies the persistence of the frame packing arrangement SEI"
            },
            {
                "line_number": 15,
                "text": "message and may specify a frame order count interval within which another frame packing arrangement SEI message with"
            },
            {
                "line_number": 16,
                "text": "the same value of frame_packing_arrangement_id or the end of the coded video sequence shall be present in the bitstream."
            },
            {
                "line_number": 17,
                "text": "The value of frame_packing_arrangement_repetition_period shall be in the range of 0 to 16 384, inclusive."
            },
            {
                "line_number": 18,
                "text": "frame_packing_arrangement_repetition_period equal to 0 specifies that the frame packing arrangement SEI message"
            },
            {
                "line_number": 19,
                "text": "applies to the current decoded frame only."
            },
            {
                "line_number": 20,
                "text": "frame_packing_arrangement_repetition_period equal to 1 specifies that the frame packing arrangement SEI message"
            },
            {
                "line_number": 21,
                "text": "persists in output order until any of the following conditions are true:"
            },
            {
                "line_number": 22,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 23,
                "text": "– A frame in an access unit containing a frame packing arrangement SEI message with the same value of"
            },
            {
                "line_number": 24,
                "text": "frame_packing_arrangement_id is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 25,
                "text": "frame_packing_arrangement_repetition_period equal to 0 or equal to 1 indicates that another frame packing arrangement"
            },
            {
                "line_number": 26,
                "text": "SEI message with the same value of frame_packing_arrangement_id may or may not be present."
            },
            {
                "line_number": 27,
                "text": "frame_packing_arrangement_repetition_period greater than 1 specifies that the frame packing arrangement SEI message"
            },
            {
                "line_number": 28,
                "text": "persists until any of the following conditions are true:"
            },
            {
                "line_number": 29,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 30,
                "text": "– A frame in an access unit containing a frame packing arrangement SEI message with the same value of"
            },
            {
                "line_number": 31,
                "text": "frame_packing_arrangement_id is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or"
            },
            {
                "line_number": 32,
                "text": "equal to PicOrderCnt( CurrPic ) + frame_packing_arrangement_repetition_period."
            },
            {
                "line_number": 33,
                "text": "frame_packing_arrangement_repetition_period greater than 1 indicates that another frame packing arrangement SEI"
            },
            {
                "line_number": 34,
                "text": "message with the same value of frame_packing_arrangement_frames_id shall be present for a frame in an access unit that"
            },
            {
                "line_number": 35,
                "text": "is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) +"
            },
            {
                "line_number": 36,
                "text": "frame_packing_arrangement_repetition_period; unless the bitstream ends or a new coded video sequence begins without"
            },
            {
                "line_number": 37,
                "text": "output of such a frame."
            },
            {
                "line_number": 38,
                "text": "frame_packing_arrangement_extension_flag equal to 0 indicates that no additional data follows within the frame"
            },
            {
                "line_number": 39,
                "text": "packing arrangement SEI message. It is a requirement of bitstream conformance that the value of frame_packing_"
            },
            {
                "line_number": 40,
                "text": "arrangement_extension_flag shall be equal to 0. The value 1 for frame_packing_arrangement_extension_flag is reserved"
            },
            {
                "line_number": 41,
                "text": "for future use by ITU-T | ISO/IEC. Decoders shall ignore the value 1 for frame_packing_arrangement_extension_flag in a"
            },
            {
                "line_number": 42,
                "text": "frame packing arrangement SEI message and shall ignore all data that follows within a frame packing arrangement SEI"
            },
            {
                "line_number": 43,
                "text": "message after the value 1 for frame_packing_arrangement_extension_flag."
            },
            {
                "line_number": 44,
                "text": "Rec. ITU-T H.264 (06/2019) 385"
            }
        ]
    },
    {
        "page_number": 408,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure D-1 – Rearrangement and upconversion of checkerboard interleaving"
            },
            {
                "line_number": 2,
                "text": "(frame_packing_arrangement_type equal to 0)"
            },
            {
                "line_number": 3,
                "text": "Figure D-2 – Rearrangement and upconversion of column interleaving"
            },
            {
                "line_number": 4,
                "text": "with frame_packing_arrangement_type equal to 1, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 5,
                "text": "and (x, y) equal to (0, 0) or (4, 8) for both constituent frames"
            },
            {
                "line_number": 6,
                "text": "386 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 409,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure D-3 – Rearrangement and upconversion of column interleaving with"
            },
            {
                "line_number": 2,
                "text": "frame_packing_arrangement_type equal to 1, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 3,
                "text": "(x, y) equal to (0, 0) or (4, 8) for constituent frame 0 and (x, y) equal to (12, 8) for constituent frame 1"
            },
            {
                "line_number": 4,
                "text": "Figure D-4 – Rearrangement and upconversion of row interleaving with"
            },
            {
                "line_number": 5,
                "text": "frame_packing_arrangement_type equal to 2, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 6,
                "text": "and (x, y) equal to (0, 0) or (8, 4) for both constituent frames"
            },
            {
                "line_number": 7,
                "text": "Rec. ITU-T H.264 (06/2019) 387"
            }
        ]
    },
    {
        "page_number": 410,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure D-5 – Rearrangement and upconversion of row interleaving with"
            },
            {
                "line_number": 2,
                "text": "frame_packing_arrangement_type equal to 2, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 3,
                "text": "(x, y) equal to (0, 0) or (8, 4) for constituent frame 0, and (x, y) equal to (8, 12) for constituent frame 1"
            },
            {
                "line_number": 4,
                "text": "Figure D-6 – Rearrangement and upconversion of side-by-side packing arrangement with"
            },
            {
                "line_number": 5,
                "text": "frame_packing_arrangement_type equal to 3, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 6,
                "text": "and (x, y) equal to (0, 0) or (4, 8) for both constituent frames"
            },
            {
                "line_number": 7,
                "text": "388 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 411,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure D-7 – Rearrangement and upconversion of side-by-side packing arrangement with"
            },
            {
                "line_number": 2,
                "text": "frame_packing_arrangement_type equal to 3, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 3,
                "text": "(x, y) equal to (12, 8) for constituent frame 0, and (x, y) equal to (0, 0) or (4, 8) for constituent frame 1"
            },
            {
                "line_number": 4,
                "text": "Figure D-8 – Rearrangement and upconversion of top-bottom packing arrangement with"
            },
            {
                "line_number": 5,
                "text": "frame_packing_arrangement_type equal to 4, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 6,
                "text": "and (x, y) equal to (0, 0) or (8, 4) for both constituent frames"
            },
            {
                "line_number": 7,
                "text": "Rec. ITU-T H.264 (06/2019) 389"
            }
        ]
    },
    {
        "page_number": 412,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure D-9 – Rearrangement and upconversion of top-bottom packing arrangement with"
            },
            {
                "line_number": 2,
                "text": "frame_packing_arrangement_type equal to 4, quincunx_sampling_flag equal to 0,"
            },
            {
                "line_number": 3,
                "text": "(x, y) equal to (8, 12) for constituent frame 0, and (x, y) equal to (0, 0) or (8, 4) for constituent frame 1"
            },
            {
                "line_number": 4,
                "text": "Figure D-10 – Rearrangement and upconversion of side-by-side packing arrangement with quincunx sampling"
            },
            {
                "line_number": 5,
                "text": "(frame_packing_arrangement_type equal to 3 with quincunx_sampling_flag equal to 1)"
            },
            {
                "line_number": 6,
                "text": "390 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 413,
        "lines": [
            {
                "line_number": 1,
                "text": "Figure D-11 – Rearrangement of a temporal interleaving frame arrangement"
            },
            {
                "line_number": 2,
                "text": "(frame_packing_arrangement_type equal to 5)"
            },
            {
                "line_number": 3,
                "text": "Figure D-12 – Rearrangement and upconversion of tile format packing arrangement"
            },
            {
                "line_number": 4,
                "text": "(frame_packing_arrangement_type equal to 7)"
            },
            {
                "line_number": 5,
                "text": "D.2.27 Display orientation SEI message semantics"
            },
            {
                "line_number": 6,
                "text": "This SEI message informs the decoder of a transformation that is recommended to be applied to the output decoded and"
            },
            {
                "line_number": 7,
                "text": "cropped picture prior to display."
            },
            {
                "line_number": 8,
                "text": "display_orientation_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous display"
            },
            {
                "line_number": 9,
                "text": "orientation SEI message in output order. display_orientation_cancel_flag equal to 0 indicates that display orientation"
            },
            {
                "line_number": 10,
                "text": "information follows."
            },
            {
                "line_number": 11,
                "text": "Rec. ITU-T H.264 (06/2019) 391"
            }
        ]
    },
    {
        "page_number": 414,
        "lines": [
            {
                "line_number": 1,
                "text": "hor_flip equal to 1 indicates that the cropped decoded picture should be flipped horizontally for display. hor_flip equal to"
            },
            {
                "line_number": 2,
                "text": "0 indicates that the decoded picture should not be flipped horizontally."
            },
            {
                "line_number": 3,
                "text": "When hor_flip is equal to 1, the cropped decoded picture should be flipped as follows for each colour component Z = L,"
            },
            {
                "line_number": 4,
                "text": "Cb, and Cr, letting dZ be the final cropped array of output samples for the component Z:"
            },
            {
                "line_number": 5,
                "text": "for( x = 0; x < croppedWidthInSamplesZ; x++ )"
            },
            {
                "line_number": 6,
                "text": "for( y = 0; y < croppedHeightInSamplesZ; y++ )"
            },
            {
                "line_number": 7,
                "text": "dZ[ x][ y ] = Z[ croppedWidthInSamplesZ − x − 1 ][ y ]"
            },
            {
                "line_number": 8,
                "text": "ver_flip equal to 1 indicates that the cropped decoded picture should be flipped vertically (in addition to any horizontal"
            },
            {
                "line_number": 9,
                "text": "flipping when hor_flip is equal to 1) for display. ver_flip equal to 0 indicates that the decoded picture should not be flipped"
            },
            {
                "line_number": 10,
                "text": "vertically."
            },
            {
                "line_number": 11,
                "text": "When ver_flip is equal to 1, the cropped decoded picture should be flipped as follows for each colour component Z = L,"
            },
            {
                "line_number": 12,
                "text": "Cb, and Cr, letting dZ be the final cropped array of output samples for the component Z:"
            },
            {
                "line_number": 13,
                "text": "for( x = 0; x < croppedWidthInSamplesZ; x++ )"
            },
            {
                "line_number": 14,
                "text": "for( y = 0; y < croppedHeightInSamplesZ; y++ )"
            },
            {
                "line_number": 15,
                "text": "dZ[ x ][ y ] = Z[ x ][ croppedWidthInSamplesZ − y − 1 ]"
            },
            {
                "line_number": 16,
                "text": "anticlockwise_rotation specifies the recommended anticlockwise rotation of the decoded picture (after applying"
            },
            {
                "line_number": 17,
                "text": "horizontal and/or vertical flipping when hor_flip or ver_flip is set) prior to display. The decoded picture should be rotated"
            },
            {
                "line_number": 18,
                "text": "by 360 * anticlockwise_rotation ÷ 216 degrees (2 * π * anticlockwise_rotation ÷ 216 radians, where π is Archimedes'"
            },
            {
                "line_number": 19,
                "text": "Constant (3.141 592 653 589 793 …) in the anticlockwise direction prior to display. For example, anticlockwise_rotation"
            },
            {
                "line_number": 20,
                "text": "equal to 0 indicates no rotation and anticlockwise_rotation equal to 16 384 indicates 90 degrees (π ÷ 2 radians) rotation in"
            },
            {
                "line_number": 21,
                "text": "the anticlockwise direction."
            },
            {
                "line_number": 22,
                "text": "NOTE – It is possible for equivalent transformations to be expressed in multiple ways using these syntax elements. For example,"
            },
            {
                "line_number": 23,
                "text": "the combination of having both hor_flip and ver_flip equal to 1 with anticlockwise_rotation equal to 0 can alternatively be expressed"
            },
            {
                "line_number": 24,
                "text": "by having both hor_flip and ver_flip equal to 1 with anticlockwise_rotation equal to 0x8000000, and the combination of hor_flip"
            },
            {
                "line_number": 25,
                "text": "equal to 1 with ver_flip equal to 0 and anticlockwise_rotation equal to 0 can alternatively be expressed by having hor_flip equal to"
            },
            {
                "line_number": 26,
                "text": "0 with ver_flip equal to 1 and anticlockwise_rotation equal to 0x8000000."
            },
            {
                "line_number": 27,
                "text": "display_orientation_repetition_period specifies the persistence of the display orientation SEI message and may specify"
            },
            {
                "line_number": 28,
                "text": "a picture order count interval within which another display orientation SEI message or the end of the coded video sequence"
            },
            {
                "line_number": 29,
                "text": "shall be present in the bitstream. The value of display_orientation_repetition_period shall be in the range 0 to 16 384,"
            },
            {
                "line_number": 30,
                "text": "inclusive."
            },
            {
                "line_number": 31,
                "text": "display_orientation_repetition_period equal to 0 specifies that the display orientation SEI message applies to the current"
            },
            {
                "line_number": 32,
                "text": "decoded picture only."
            },
            {
                "line_number": 33,
                "text": "display_orientation_repetition_period equal to 1 specifies that the display orientation SEI message persists in output order"
            },
            {
                "line_number": 34,
                "text": "until any of the following conditions are true:"
            },
            {
                "line_number": 35,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 36,
                "text": "– A picture in an access unit containing a display orientation SEI message is output having PicOrderCnt( ) greater than"
            },
            {
                "line_number": 37,
                "text": "PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 38,
                "text": "display_orientation_repetition_period greater than 1 specifies that the display orientation SEI message persists until any"
            },
            {
                "line_number": 39,
                "text": "of the following conditions are true:"
            },
            {
                "line_number": 40,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 41,
                "text": "– A picture in an access unit containing a display orientation SEI message is output having PicOrderCnt( ) greater than"
            },
            {
                "line_number": 42,
                "text": "PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) + display_orientation_repetition_period."
            },
            {
                "line_number": 43,
                "text": "display_orientation_repetition_period greater than 1 indicates that another display orientation SEI message shall be present"
            },
            {
                "line_number": 44,
                "text": "for a picture in an access unit that is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or"
            },
            {
                "line_number": 45,
                "text": "equal to PicOrderCnt( CurrPic ) + display_orientation_repetition_period; unless the bitstream ends or a new coded video"
            },
            {
                "line_number": 46,
                "text": "sequence begins without output of such a picture."
            },
            {
                "line_number": 47,
                "text": "display_orientation_extension_flag equal to 0 indicates that no additional data follows within the display orientation SEI"
            },
            {
                "line_number": 48,
                "text": "message. The value of display_orientation_extension_flag shall be equal to 0. The value of 1 for"
            },
            {
                "line_number": 49,
                "text": "display_orientation_extension_flag is reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore all data that"
            },
            {
                "line_number": 50,
                "text": "follows the value of 1 for display_orientation_extension_flag in a display orientation SEI message."
            },
            {
                "line_number": 51,
                "text": "D.2.28 Green metadata SEI message semantics"
            },
            {
                "line_number": 52,
                "text": "The semantics for this SEI message are specified in ISO/IEC 23001-11 (Green metadata), which facilitates reduced power"
            },
            {
                "line_number": 53,
                "text": "consumption in decoders, encoders, displays, and in media selection."
            },
            {
                "line_number": 54,
                "text": "392 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 415,
        "lines": [
            {
                "line_number": 1,
                "text": "D.2.29 Mastering display colour volume SEI message semantics"
            },
            {
                "line_number": 2,
                "text": "This SEI message identifies the colour volume (the colour primaries, white point, and luminance range) of a display"
            },
            {
                "line_number": 3,
                "text": "considered to be the mastering display for the associated video content – e.g., the colour volume of a display that was used"
            },
            {
                "line_number": 4,
                "text": "for viewing while authoring the video content. The described mastering display is a three-colour additive display system"
            },
            {
                "line_number": 5,
                "text": "that has been configured to use the indicated mastering colour volume."
            },
            {
                "line_number": 6,
                "text": "This SEI message does not specify the measurement methodologies and procedures used for determining the indicated"
            },
            {
                "line_number": 7,
                "text": "values or any description of the mastering environment. It also does not provide information on colour transformations"
            },
            {
                "line_number": 8,
                "text": "that would be appropriate to preserve creative intent on displays with colour volumes different from that of the described"
            },
            {
                "line_number": 9,
                "text": "mastering display."
            },
            {
                "line_number": 10,
                "text": "The information conveyed in this SEI message is intended to be adequate for purposes corresponding to the use of Society"
            },
            {
                "line_number": 11,
                "text": "of Motion Picture and Television Engineers ST 2086."
            },
            {
                "line_number": 12,
                "text": "When a mastering display colour volume SEI message is present in any access unit of a coded video sequence, a mastering"
            },
            {
                "line_number": 13,
                "text": "display colour volume SEI message shall be present in the IDR access unit that is the first access unit of the coded video"
            },
            {
                "line_number": 14,
                "text": "sequence. All mastering display colour volume SEI messages that apply to the same coded video sequence shall have the"
            },
            {
                "line_number": 15,
                "text": "same content."
            },
            {
                "line_number": 16,
                "text": "The mastering display colour volume SEI message persists in decoding order from the current access unit until the end of"
            },
            {
                "line_number": 17,
                "text": "the coded video sequence."
            },
            {
                "line_number": 18,
                "text": "display_primaries_x[ c ], when in the range of 5 to 37 000, inclusive, specifies the normalized x chromaticity coordinate"
            },
            {
                "line_number": 19,
                "text": "of the colour primary component c of the mastering display, according to the CIE 1931 definition of x as specified in ISO"
            },
            {
                "line_number": 20,
                "text": "11664-1 (see also ISO 11664-3 and CIE 15), in increments of 0.00002. When display_primaries_x[ c ] is not in the range"
            },
            {
                "line_number": 21,
                "text": "of 5 to 37 000, inclusive, the normalized x chromaticity coordinate of the colour primary component c of the mastering"
            },
            {
                "line_number": 22,
                "text": "display is unknown or unspecified or specified by other means not specified in this Specification."
            },
            {
                "line_number": 23,
                "text": "display_primaries_y[ c ], when in the range of 5 to 42 000, inclusive, specifies the normalized y chromaticity coordinate"
            },
            {
                "line_number": 24,
                "text": "of the colour primary component c of the mastering display, according to the CIE 1931 definition of y as specified in ISO"
            },
            {
                "line_number": 25,
                "text": "11664-1 (see also ISO 11664-3 and CIE 15), in increments of 0.00002. When display_primaries_y[ c ] is not in the range"
            },
            {
                "line_number": 26,
                "text": "of 5 to 42 000, inclusive, the normalized y chromaticity coordinate of the colour primary component c of the mastering"
            },
            {
                "line_number": 27,
                "text": "display is unknown or unspecified or specified by other means not specified in this Specification."
            },
            {
                "line_number": 28,
                "text": "For describing mastering displays that use red, green, and blue colour primaries, it is suggested that index value c equal to"
            },
            {
                "line_number": 29,
                "text": "0 should correspond to the green primary, c equal to 1 should correspond to the blue primary and c equal to 2 should"
            },
            {
                "line_number": 30,
                "text": "correspond to the red colour primary (see also Annex E and Table E-3)."
            },
            {
                "line_number": 31,
                "text": "white_point_x, when in the range of 5 to 37 000, inclusive, specifies the normalized x chromaticity coordinate of the white"
            },
            {
                "line_number": 32,
                "text": "point of the mastering display, according to the CIE 1931 definition of x as specified in ISO 11664-1 (see also ISO 11664-"
            },
            {
                "line_number": 33,
                "text": "3 and CIE 15), in normalized increments of 0.00002. When white_point_x is not in the range of 5 to 37 000, inclusive, the"
            },
            {
                "line_number": 34,
                "text": "normalized x chromaticity coordinate of the white point of the mastering display is indicated to be unknown or unspecified"
            },
            {
                "line_number": 35,
                "text": "or specified by other means not specified in this Specification."
            },
            {
                "line_number": 36,
                "text": "white_point_y, when in the range of 5 to 42 000, inclusive, specifies the normalized y chromaticity coordinate of the white"
            },
            {
                "line_number": 37,
                "text": "point of the mastering display, according to the CIE 1931 definition of y as specified in ISO 11664-1 (see also ISO 11664-"
            },
            {
                "line_number": 38,
                "text": "3 and CIE 15), in normalized increments of 0.00002. When white_point_y is not in the range of 5 to 42 000, inclusive, the"
            },
            {
                "line_number": 39,
                "text": "normalized y chromaticity coordinate of the white point of the mastering display is indicated to be unknown or unspecified"
            },
            {
                "line_number": 40,
                "text": "or specified by other means not specified in this Specification."
            },
            {
                "line_number": 41,
                "text": "NOTE 1 – Society of Motion Picture and Television Engineers ST 2086 (2018) specifies that the normalized x and y chromaticity"
            },
            {
                "line_number": 42,
                "text": "coordinate values for the mastering display colour primaries and white point are to be represented with four decimal places. This"
            },
            {
                "line_number": 43,
                "text": "would correspond with using values of the syntax elements display_primaries_x[ c ], display_primaries_y[ c ], white_point_x, and"
            },
            {
                "line_number": 44,
                "text": "white_point_y, as defined in this Specification, that are multiples of 5."
            },
            {
                "line_number": 45,
                "text": "NOTE 2 – An example of the use of values outside the range for which semantics are specified in this Specification is that"
            },
            {
                "line_number": 46,
                "text": "ANSI/CTA 861-G (2016) uses normalized (x, y) chromaticity coordinate values of (0,0) for the white point to indicate that the white"
            },
            {
                "line_number": 47,
                "text": "point chromaticity is unknown."
            },
            {
                "line_number": 48,
                "text": "max_display_mastering_luminance, when in the range of 50 000 to 100 000 000, specifies the nominal maximum"
            },
            {
                "line_number": 49,
                "text": "display luminance of the mastering display in units of 0.0001 candelas per square metre. When"
            },
            {
                "line_number": 50,
                "text": "max_display_mastering_luminance is not in the range of 50 000 to 100 000 000, the nominal maximum display luminance"
            },
            {
                "line_number": 51,
                "text": "of the mastering display is indicated to be unknown or unspecified or specified by other means not specified in this"
            },
            {
                "line_number": 52,
                "text": "Specification."
            },
            {
                "line_number": 53,
                "text": "NOTE 3 – Society of Motion Picture and Television Engineers ST 2086 (2018) specifies that the nominal maximum display"
            },
            {
                "line_number": 54,
                "text": "luminance of the mastering display is to be specified as a multiple of 1 candela per square meter. This would correspond with using"
            },
            {
                "line_number": 55,
                "text": "values of the syntax element max_display_mastering_luminance, as defined in this Specification, that are a multiple of 10 000."
            },
            {
                "line_number": 56,
                "text": "Rec. ITU-T H.264 (06/2019) 393"
            }
        ]
    },
    {
        "page_number": 416,
        "lines": [
            {
                "line_number": 1,
                "text": "NOTE 4 – An example of the use of values outside the range for which semantics are specified in this Specification is that"
            },
            {
                "line_number": 2,
                "text": "ANSI/CTA 861-G (2016) uses the value 0 for the nominal maximum display luminance of the mastering display to indicate that the"
            },
            {
                "line_number": 3,
                "text": "nominal maximum display luminance of the mastering display is unknown."
            },
            {
                "line_number": 4,
                "text": "min_display_mastering_luminance, when in the range of 1 to 50 000, specifies the nominal minimum display luminance"
            },
            {
                "line_number": 5,
                "text": "of the mastering display in units of 0.0001 candelas per square metre. When min_display_mastering_luminance is not in"
            },
            {
                "line_number": 6,
                "text": "the range of 1 to 50 000, the nominal maximum display luminance of the mastering display is unknown or unspecified or"
            },
            {
                "line_number": 7,
                "text": "specified by other means not specified in this Specification. When max_display_mastering_luminance is equal to 50 000,"
            },
            {
                "line_number": 8,
                "text": "min_display_mastering_luminance shall not be equal to 50 000."
            },
            {
                "line_number": 9,
                "text": "NOTE 5 – Society of Motion Picture and Television Engineers ST 2086 (2018) specifies that the nominal minimum display"
            },
            {
                "line_number": 10,
                "text": "luminance of the mastering display is to be specified as a multiple of 0.0001 candelas per square metre, which corresponds to the"
            },
            {
                "line_number": 11,
                "text": "semantics specified in this Specification."
            },
            {
                "line_number": 12,
                "text": "NOTE 6 – An example of the use of values outside the range for which semantics are specified in this Specification is that"
            },
            {
                "line_number": 13,
                "text": "ANSI/CTA 861-G (2016) uses the value 0 for the nominal minimum display luminance of the mastering display to indicate that the"
            },
            {
                "line_number": 14,
                "text": "nominal minimum display luminance of the mastering display is unknown."
            },
            {
                "line_number": 15,
                "text": "NOTE 7 – Another example of the potential use of values outside the range for which semantics are specified in this Specification"
            },
            {
                "line_number": 16,
                "text": "is that Society of Motion Picture and Television Engineers ST 2086 (2018) indicates that values outside the specified range could"
            },
            {
                "line_number": 17,
                "text": "be used to indicate that the black level and contrast of the mastering display have been adjusted using picture line-up generation"
            },
            {
                "line_number": 18,
                "text": "equipment (PLUGE)."
            },
            {
                "line_number": 19,
                "text": "At the minimum luminance, the mastering display is considered to have the same nominal chromaticity as the white point."
            },
            {
                "line_number": 20,
                "text": "D.2.30 Colour remapping information SEI message semantics"
            },
            {
                "line_number": 21,
                "text": "The colour remapping information SEI message provides information to enable remapping of the reconstructed colour"
            },
            {
                "line_number": 22,
                "text": "samples of the output pictures for purposes such as converting the output pictures to a representation that is more suitable"
            },
            {
                "line_number": 23,
                "text": "for an alternative display. The colour remapping model used in the colour remapping information SEI message is composed"
            },
            {
                "line_number": 24,
                "text": "of a first piece-wise linear function applied to each colour component (specified by the \"pre\" set of syntax elements herein),"
            },
            {
                "line_number": 25,
                "text": "followed by a three-by-three matrix applied to the three resulting colour components, followed by a second piece-wise"
            },
            {
                "line_number": 26,
                "text": "linear function applied to each resulting colour component (specified by the \"post\" set of syntax elements herein)."
            },
            {
                "line_number": 27,
                "text": "NOTE 1 – Colour remapping of the output pictures for the display process (which is outside the scope of this Specification) is"
            },
            {
                "line_number": 28,
                "text": "optional and does not affect the decoding process specified in this Specification."
            },
            {
                "line_number": 29,
                "text": "Unless indicated otherwise by some means not specified in this Specification, the input to the indicated remapping process"
            },
            {
                "line_number": 30,
                "text": "is the set of decoded sample values after applying an (unspecified) upsampling conversion process to the 4:4:4 colour"
            },
            {
                "line_number": 31,
                "text": "sampling format as necessary when the colour remapping three-by-three matrix coefficients are present in the SEI message"
            },
            {
                "line_number": 32,
                "text": "and chroma_format_idc is equal to 1 (4:2:0 chroma format) or 2 (4:2:2 chroma format). When chroma_format_idc is equal"
            },
            {
                "line_number": 33,
                "text": "to 0 (monochrome), the colour remapping information SEI message shall not be present, although decoders shall allow"
            },
            {
                "line_number": 34,
                "text": "such messages to be present and shall ignore any such colour remapping information SEI messages that may be present."
            },
            {
                "line_number": 35,
                "text": "colour_remap_id contains an identifying number that may be used to identify the purpose of the colour remapping"
            },
            {
                "line_number": 36,
                "text": "information. The value of colour_remap_id may be used (in a manner not specified in this Specification) to indicate that"
            },
            {
                "line_number": 37,
                "text": "the input to the remapping process is the output of some conversion process that is not specified in this Specification, such"
            },
            {
                "line_number": 38,
                "text": "as a conversion of the picture to some alternative colour representation (e.g., conversion from a YCbCr colour"
            },
            {
                "line_number": 39,
                "text": "representation to a GBR colour representation). When more than one colour remapping information SEI message is present"
            },
            {
                "line_number": 40,
                "text": "with the same value of colour_remap_id, the content of these colour remapping information SEI messages shall be the"
            },
            {
                "line_number": 41,
                "text": "same. When colour remapping information SEI messages are present that have more than one value of colour_remap_id,"
            },
            {
                "line_number": 42,
                "text": "this may indicate that the remapping processes indicated by the different values of colour_remap_id are alternatives that"
            },
            {
                "line_number": 43,
                "text": "are provided for different purposes or that a cascading of remapping processes is to be applied in a sequential order (an"
            },
            {
                "line_number": 44,
                "text": "order that is not specified in this Specification). The value of colour_remap_id shall be in the range of 0 to 232 − 2, inclusive."
            },
            {
                "line_number": 45,
                "text": "Values of colour_remap_id from 0 to 255, inclusive, and from 512 to 231 − 1, inclusive, may be used as determined by the"
            },
            {
                "line_number": 46,
                "text": "application. Values of colour_remap_id from 256 to 511, inclusive, and from 231 to 232 − 2, inclusive, are reserved for"
            },
            {
                "line_number": 47,
                "text": "future use by ITU-T | ISO/IEC. Decoders encountering a value of colour_remap_id in the range of 256 to 511, inclusive,"
            },
            {
                "line_number": 48,
                "text": "or in the range of 231 to 232 − 2, inclusive, shall ignore it."
            },
            {
                "line_number": 49,
                "text": "NOTE 2 – The colour_remap_id can be used to support different colour remapping processes that are suitable for different display"
            },
            {
                "line_number": 50,
                "text": "scenarios. For example, different values of colour_remap_id may correspond to different remapped colour spaces supported by"
            },
            {
                "line_number": 51,
                "text": "displays."
            },
            {
                "line_number": 52,
                "text": "colour_remap_cancel_flag equal to 1 indicates that the colour remapping information SEI message cancels the"
            },
            {
                "line_number": 53,
                "text": "persistence of any previous colour remapping information SEI message in output order that applies to the current layer."
            },
            {
                "line_number": 54,
                "text": "colour_remap_cancel_flag equal to 0 indicates that colour remapping information follows."
            },
            {
                "line_number": 55,
                "text": "colour_remap_repetition_period specifies the persistence of the colour remapping information SEI message and may"
            },
            {
                "line_number": 56,
                "text": "specify a picture order count interval within which another colour remapping information SEI message with the same value"
            },
            {
                "line_number": 57,
                "text": "of colour_remap_id or the end of the coded video sequence shall be present in the bitstream. The value of"
            },
            {
                "line_number": 58,
                "text": "colour_remap_repetition_period shall be in the range of 0 to 16 384, inclusive."
            },
            {
                "line_number": 59,
                "text": "394 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 417,
        "lines": [
            {
                "line_number": 1,
                "text": "colour_remap_repetition_period equal to 0 specifies that the colour remapping information applies to the current decoded"
            },
            {
                "line_number": 2,
                "text": "picture only."
            },
            {
                "line_number": 3,
                "text": "colour_remap_repetition_period equal to 1 specifies that the colour remapping information persists in output order until"
            },
            {
                "line_number": 4,
                "text": "any of the following conditions are true:"
            },
            {
                "line_number": 5,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 6,
                "text": "– A picture in an access unit containing a colour remapping information SEI message with the same value of"
            },
            {
                "line_number": 7,
                "text": "colour_remap_id is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic )."
            },
            {
                "line_number": 8,
                "text": "colour_remap_repetition_period equal to 0 or equal to 1 indicates that another colour remapping information SEI message"
            },
            {
                "line_number": 9,
                "text": "with the same value of colour_remap_id may or may not be present."
            },
            {
                "line_number": 10,
                "text": "colour_remap_repetition_period greater than 1 specifies that the colour remapping information persists until any of the"
            },
            {
                "line_number": 11,
                "text": "following conditions are true:"
            },
            {
                "line_number": 12,
                "text": "– A new coded video sequence begins."
            },
            {
                "line_number": 13,
                "text": "– A picture in an access unit containing a colour remapping information SEI message with the same value of"
            },
            {
                "line_number": 14,
                "text": "colour_remap_id is output having PicOrderCnt( ) greater than PicOrderCnt( CurrPic ) and less than or equal to"
            },
            {
                "line_number": 15,
                "text": "PicOrderCnt( CurrPic ) + colour_remap_repetition_period."
            },
            {
                "line_number": 16,
                "text": "colour_remap_repetition_period greater than 1 indicates that another colour remapping information SEI message with the"
            },
            {
                "line_number": 17,
                "text": "same value of colour_remap_id shall be present for a picture in an access unit that is output having PicOrderCnt( ) greater"
            },
            {
                "line_number": 18,
                "text": "than PicOrderCnt( CurrPic ) and less than or equal to PicOrderCnt( CurrPic ) + colour_remap_repetition_period; unless"
            },
            {
                "line_number": 19,
                "text": "the bitstream ends or a new coded video sequence begins without output of such a picture."
            },
            {
                "line_number": 20,
                "text": "colour_remap_video_signal_info_present_flag equal to 1 specifies that syntax elements colour_remap_full_range_flag,"
            },
            {
                "line_number": 21,
                "text": "colour_remap_primaries, colour_remap_transfer_function and colour_remap_matrix_coefficients are present,"
            },
            {
                "line_number": 22,
                "text": "colour_remap_video_signal_info_present_flag equal to 0 specifies that syntax elements colour_remap_full_range_flag,"
            },
            {
                "line_number": 23,
                "text": "colour_remap_primaries, colour_remap_transfer_function and colour_remap_matrix_coefficients are not present."
            },
            {
                "line_number": 24,
                "text": "colour_remap_full_range_flag has the same semantics as specified in clause E.2.1 for the video_full_range_flag syntax"
            },
            {
                "line_number": 25,
                "text": "element, except that colour_remap_full_range_flag identifies the colour space of the remapped reconstructed picture, rather"
            },
            {
                "line_number": 26,
                "text": "than the colour space used for the coded video sequence. When not present, the value of colour_remap_full_range_flag is"
            },
            {
                "line_number": 27,
                "text": "inferred to be equal to the value of video_full_range_flag."
            },
            {
                "line_number": 28,
                "text": "colour_remap_primaries has the same semantics as specified in clause E.2.1 for the colour_primaries syntax element,"
            },
            {
                "line_number": 29,
                "text": "except that colour_remap_primaries identifies the colour space of the remapped reconstructed picture, rather than the"
            },
            {
                "line_number": 30,
                "text": "colour space used for the coded video sequence. When not present, the value of colour_remap_primaries is inferred to be"
            },
            {
                "line_number": 31,
                "text": "equal to the value of colour_primaries."
            },
            {
                "line_number": 32,
                "text": "colour_remap_transfer_function has the same semantics as specified in clause E.2.1 for the transfer_characteristics"
            },
            {
                "line_number": 33,
                "text": "syntax element, except that colour_remap_transfer_function identifies the colour space of the remapped reconstructed"
            },
            {
                "line_number": 34,
                "text": "picture, rather than the colour space used for the coded video sequence. When not present, the value of"
            },
            {
                "line_number": 35,
                "text": "colour_remap_transfer_function is inferred to be equal to the value of transfer_characteristics."
            },
            {
                "line_number": 36,
                "text": "colour_remap_matrix_coefficients has the same semantics as specified in clause E.2.1 for the matrix_coefficients syntax"
            },
            {
                "line_number": 37,
                "text": "element, except that colour_remap_matrix_coefficients identifies the colour space of the remapped reconstructed picture,"
            },
            {
                "line_number": 38,
                "text": "rather than the colour space used for the coded video sequence. When not present, the value of"
            },
            {
                "line_number": 39,
                "text": "colour_remap_matrix_coefficients is inferred to be equal to the value of matrix_coefficients."
            },
            {
                "line_number": 40,
                "text": "colour_remap_input_bit_depth specifies the bit depth of the colour components of the associated pictures for purposes"
            },
            {
                "line_number": 41,
                "text": "of interpretation of the colour remapping information SEI message. When any colour remapping information SEI messages"
            },
            {
                "line_number": 42,
                "text": "is present with the value of colour_remap_input_bit_depth not equal to the bit depth of the decoded colour components,"
            },
            {
                "line_number": 43,
                "text": "the SEI message refers to the hypothetical result of a conversion operation performed to convert the decoded colour"
            },
            {
                "line_number": 44,
                "text": "component samples to the bit depth equal to colour_remap_input_bit_depth."
            },
            {
                "line_number": 45,
                "text": "The value of colour_remap_input_bit_depth shall be in the range of 8 to 16, inclusive. Values of"
            },
            {
                "line_number": 46,
                "text": "colour_remap_input_bit_depth from 0 to 7, inclusive, and from 17 to 255, inclusive, are reserved for future use by ITU-T"
            },
            {
                "line_number": 47,
                "text": "| ISO/IEC. Decoders shall ignore all colour remapping SEI messages that contain a colour_remap_input_bit_depth in the"
            },
            {
                "line_number": 48,
                "text": "range of 0 to 7, inclusive, or in the range of 17 to 255, inclusive, and bitstreams shall not contain such values."
            },
            {
                "line_number": 49,
                "text": "colour_remap_output_bit_depth specifies the bit depth of the output of the colour remapping function described by the"
            },
            {
                "line_number": 50,
                "text": "colour remapping information SEI message."
            },
            {
                "line_number": 51,
                "text": "The value of colour_remap_output_bit_depth shall be in the range of 8 to 16, inclusive. Values of"
            },
            {
                "line_number": 52,
                "text": "colour_remap_output_bit_depth from 0 to 7, inclusive, and in the range of 17 to 255, inclusive, are reserved for future use"
            },
            {
                "line_number": 53,
                "text": "by ITU-T | ISO/IEC. Decoders shall ignore all colour remapping SEI messages that contain a value of"
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 395"
            }
        ]
    },
    {
        "page_number": 418,
        "lines": [
            {
                "line_number": 1,
                "text": "colour_remap_output_bit_depth from 0 to 7, inclusive, or in the range of 17 to 255, inclusive, and bitstreams shall not"
            },
            {
                "line_number": 2,
                "text": "contain such values."
            },
            {
                "line_number": 3,
                "text": "pre_lut_num_val_minus1[ c ] plus 1 specifies the number of pivot points in the piece-wise linear remapping function for"
            },
            {
                "line_number": 4,
                "text": "the c-th component, where c equal to 0 refers to the luma or G component, c equal to 1 refers to the Cb or B component,"
            },
            {
                "line_number": 5,
                "text": "and c equal to 2 refers to the Cr or R component. When pre_lut_num_val_minus1[ c ] is equal to 0, the default end points"
            },
            {
                "line_number": 6,
                "text": "of the input values are 0 and 2colour_remap_input_bit_depth − 1, and the corresponding default end points of the output values are 0"
            },
            {
                "line_number": 7,
                "text": "and 2colour_remap_output_bit_depth − 1, for the c-th component. In bitstreams conforming to this version of this Specification, the"
            },
            {
                "line_number": 8,
                "text": "value of pre_lut_num_val_minus1[ c ] shall be in the range of 0 to 32, inclusive."
            },
            {
                "line_number": 9,
                "text": "pre_lut_coded_value[ c ][ i ] specifies the value of the i-th pivot point for the c-th component. The number of bits used"
            },
            {
                "line_number": 10,
                "text": "to represent pre_lut_coded_value[ c ][ i ] is ( ( colour_remap_input_bit_depth + 7 ) >> 3 ) << 3."
            },
            {
                "line_number": 11,
                "text": "pre_lut_target_value[ c ][ i ] specifies the value of the i-th pivot point for the c-th component. The number of bits used"
            },
            {
                "line_number": 12,
                "text": "to represent pre_lut_target_value[ c ][ i ] is ( ( colour_remap_output_bit_depth + 7 ) >> 3 ) << 3."
            },
            {
                "line_number": 13,
                "text": "When pre_lut_coded_value[ c ][ 0 ] is greater than 0, an initial linear segment should be inferred that maps input values"
            },
            {
                "line_number": 14,
                "text": "ranging from 0 to pre_lut_coded_value[ c ][ 0 ], inclusive, to target values ranging from 0 to pre_lut_target_value[ c ][ 0 ],"
            },
            {
                "line_number": 15,
                "text": "inclusive."
            },
            {
                "line_number": 16,
                "text": "When pre_lut_coded_value[ c ][ pre_lut_num_val_minus1[ c ] ] is not equal to 2colour_remap_input_bit_depth − 1, a final linear"
            },
            {
                "line_number": 17,
                "text": "segment should be inferred that maps input values ranging from pre_lut_coded_value[ c ][ pre_lut_num_val_minus1[ c ] ]"
            },
            {
                "line_number": 18,
                "text": "to 2colour_remap_input_bit_depth − 1, inclusive, to target values ranging from"
            },
            {
                "line_number": 19,
                "text": "pre_lut_target_value[ c ][ pre_lut_num_val_minus1[ c ] ] to 2colour_remap_output_bit_depth − 1, inclusive."
            },
            {
                "line_number": 20,
                "text": "colour_remap_matrix_present_flag equal to 1 indicates that the syntax elements log2_matrix_denom and"
            },
            {
                "line_number": 21,
                "text": "colour_remap_coeffs[ c ][ i ], for c and i in the range of 0 to 2, inclusive, are present. colour_remap_matrix_present_flag"
            },
            {
                "line_number": 22,
                "text": "equal to 0 indicates that the syntax elements log2_matrix_denom and colour_remap_coeffs[ c ][ i ], for c and i in the range"
            },
            {
                "line_number": 23,
                "text": "of 0 to 2, inclusive, are not present."
            },
            {
                "line_number": 24,
                "text": "log2_matrix_denom specifies the base 2 logarithm of the denominator for all matrix coefficients. The value of"
            },
            {
                "line_number": 25,
                "text": "log2_matrix_denom shall be in the range of 0 to 15, inclusive. When not present, the value of log2_matrix_denom is"
            },
            {
                "line_number": 26,
                "text": "inferred to be equal to 0."
            },
            {
                "line_number": 27,
                "text": "colour_remap_coeffs[ c ][ i ] specifies the value of the three-by-three colour remapping matrix coefficients. The value of"
            },
            {
                "line_number": 28,
                "text": "colour_remap_coeffs[ c ][ i ] shall be in the range of −215 to 215 − 1, inclusive. When colour_remap_coeffs[ c ][ i ] is not"
            },
            {
                "line_number": 29,
                "text": "present, it is inferred to be equal to 1 if c is equal to i, and inferred to be equal to 0 otherwise."
            },
            {
                "line_number": 30,
                "text": "NOTE 3 – When colour_remap_matrix_present_flag is equal to 0, the colour remapping matrix is inferred to be equal to the identity"
            },
            {
                "line_number": 31,
                "text": "matrix of size 3x3."
            },
            {
                "line_number": 32,
                "text": "The variable matrixOutput[ c ] for c = 0, 1 and 2 is derived as follows:"
            },
            {
                "line_number": 33,
                "text": "roundingOffset = log2_matrix_denom = = 0 ? 0: 1 << ( log2_matrix_denom − 1 )"
            },
            {
                "line_number": 34,
                "text": "matrixOutput[ c ] = Clip3( 0, ( 1 << colour_remap_output_bit_depth ) − 1, (D-44)"
            },
            {
                "line_number": 35,
                "text": "( colour_remap_coeffs[ c ][ 0 ] * matrixInput[ 0 ] + colour_remap_coeffs[ c ][ 1 ] * matrixInput[ 1 ]"
            },
            {
                "line_number": 36,
                "text": "+ colour_remap_coeffs[ c ][ 2 ] * matrixInput[ 2 ] + roundingOffset ) >> log2_matrix_denom )"
            },
            {
                "line_number": 37,
                "text": "where matrixInput[ c ] is the input sample value of the c-th colour component,and matrixOutput[ c ] is the output sample"
            },
            {
                "line_number": 38,
                "text": "value of the c-th colour component."
            },
            {
                "line_number": 39,
                "text": "post_lut_num_val_minus1[ c ] has the same semantics as pre_lut_num_val_minus1[ c ], with pre replaced by post, except"
            },
            {
                "line_number": 40,
                "text": "that the default end points of the input values are 0 and 2colour_remap_output_bit_depth − 1 for the c-th colour component. The value"
            },
            {
                "line_number": 41,
                "text": "of post_lut_num_val_minus1[ c ] shall be in the range of 0 to 32, inclusive."
            },
            {
                "line_number": 42,
                "text": "post_lut_coded_value[ c ][ i ] has the same semantics as pre_lut_coded_value[ c ][ i ], with \"pre\" replaced by \"post\","
            },
            {
                "line_number": 43,
                "text": "except that the number of bits used to represent post_lut_coded_value[ c ][ i ] is"
            },
            {
                "line_number": 44,
                "text": "( ( colour_remap_output_bit_depth + 7 ) >> 3 ) << 3."
            },
            {
                "line_number": 45,
                "text": "post_lut_target_value[ c ][ i ] has the same semantics as pre_lut_target_value[ c ][ i ], with \"pre\" replaced by \"post\""
            },
            {
                "line_number": 46,
                "text": "except that colour_remap_input_bit_depth is replaced by colour_remap_output_bit_depth in the semantics."
            },
            {
                "line_number": 47,
                "text": "D.2.31 Content light level information SEI message semantics"
            },
            {
                "line_number": 48,
                "text": "This SEI message identifies upper bounds for the nominal target brightness light level of the pictures of the coded video"
            },
            {
                "line_number": 49,
                "text": "sequence."
            },
            {
                "line_number": 50,
                "text": "The information conveyed in this SEI message is intended to be adequate for purposes corresponding to the use of the"
            },
            {
                "line_number": 51,
                "text": "Consumer Technology Association 861.3 specification."
            },
            {
                "line_number": 52,
                "text": "396 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 419,
        "lines": [
            {
                "line_number": 1,
                "text": "The semantics of the content light level information SEI message are defined in relation to the values of samples in a 4:4:4"
            },
            {
                "line_number": 2,
                "text": "representation of red, green, and blue colour primary intensities in the linear light domain for the pictures of the coded"
            },
            {
                "line_number": 3,
                "text": "video sequence, in units of candelas per square metre. However, this SEI message does not, by itself, identify a conversion"
            },
            {
                "line_number": 4,
                "text": "process for converting the sample values of a decoded picture to the samples in a 4:4:4 representation of red, green, and"
            },
            {
                "line_number": 5,
                "text": "blue colour primary intensities in the linear light domain for the picture."
            },
            {
                "line_number": 6,
                "text": "NOTE 1 – Other syntax elements, such as colour_primaries, transfer_characteristics, matrix_coefficients, and the chroma"
            },
            {
                "line_number": 7,
                "text": "resampling filter hint SEI message, when present, may assist in the identification of such a conversion process."
            },
            {
                "line_number": 8,
                "text": "Given the red, green, and blue colour primary intensities in the linear light domain for the location of a luma sample in a"
            },
            {
                "line_number": 9,
                "text": "corresponding 4:4:4 representation, denoted as E , E , and E , the maximum component intensity is defined as E ="
            },
            {
                "line_number": 10,
                "text": "R G B Max"
            },
            {
                "line_number": 11,
                "text": "Max( E , Max( E , E ) ). The light level corresponding to the stimulus is then defined as the CIE 1931 luminance"
            },
            {
                "line_number": 12,
                "text": "R G B"
            },
            {
                "line_number": 13,
                "text": "corresponding to equal amplitudes of E for all three colour primary intensities for red, green, and blue (with appropriate"
            },
            {
                "line_number": 14,
                "text": "Max"
            },
            {
                "line_number": 15,
                "text": "scaling to reflect the nominal luminance level associated with peak white – e.g., ordinarily scaling to associate peak white"
            },
            {
                "line_number": 16,
                "text": "with 10 000 candelas per square metre when transfer_characteristics is equal to 16)."
            },
            {
                "line_number": 17,
                "text": "NOTE 2 – Since the maximum value EMax is used in this definition at each sample location, rather than a direct conversion from ER,"
            },
            {
                "line_number": 18,
                "text": "EG, and EB to the corresponding CIE 1931 luminance, the CIE 1931 luminance at a location may in some cases be less than the"
            },
            {
                "line_number": 19,
                "text": "indicated light level. This situation would occur, for example, when ER and EG are very small and EB is large, in which case the"
            },
            {
                "line_number": 20,
                "text": "indicated light level would be much larger than the true CIE 1931 luminance associated with the ( ER, EG, EB ) triplet."
            },
            {
                "line_number": 21,
                "text": "When a content light level information SEI message is present in any access unit of a coded video sequence, a content light"
            },
            {
                "line_number": 22,
                "text": "level information SEI message shall be present in the IDR access unit that is the first access unit of the coded video"
            },
            {
                "line_number": 23,
                "text": "sequence. All content light level information SEI messages that apply to the same coded video sequence shall have the"
            },
            {
                "line_number": 24,
                "text": "same content."
            },
            {
                "line_number": 25,
                "text": "The content light level information SEI message persists in decoding order from the current access unit until the end of the"
            },
            {
                "line_number": 26,
                "text": "coded video sequence."
            },
            {
                "line_number": 27,
                "text": "max_content_light_level, when not equal to 0, indicates an upper bound on the maximum light level among all individual"
            },
            {
                "line_number": 28,
                "text": "samples in a 4:4:4 representation of red, green, and blue colour primary intensities (in the linear light domain) for the"
            },
            {
                "line_number": 29,
                "text": "pictures of the coded video sequence, in units of candelas per square metre. When equal to 0, no such upper bound is"
            },
            {
                "line_number": 30,
                "text": "indicated by max_content_light_level."
            },
            {
                "line_number": 31,
                "text": "max_pic_average_light_level, when not equal to 0, indicates an upper bound on the maximum average light level among"
            },
            {
                "line_number": 32,
                "text": "the samples in a 4:4:4 representation of red, green, and blue colour primary intensities (in the linear light domain) for any"
            },
            {
                "line_number": 33,
                "text": "individual picture of the coded video sequence, in units of candelas per square metre. When equal to 0, no such upper"
            },
            {
                "line_number": 34,
                "text": "bound is indicated by max_pic_average_light_level."
            },
            {
                "line_number": 35,
                "text": "NOTE 3 – When the visually relevant region does not correspond to the entire cropped decoded picture, such as for \"letterbox\""
            },
            {
                "line_number": 36,
                "text": "encoding of video content with a wide picture aspect ratio within a taller cropped decoded picture, the indicated average should be"
            },
            {
                "line_number": 37,
                "text": "performed only within the visually relevant region."
            },
            {
                "line_number": 38,
                "text": "D.2.32 Alternative transfer characteristics SEI message semantics"
            },
            {
                "line_number": 39,
                "text": "The alternative transfer characteristics SEI message provides a preferred alternative value for the transfer_characteristics"
            },
            {
                "line_number": 40,
                "text": "syntax element that is indicated by the colour description syntax of VUI parameters of the sequence parameter set. This"
            },
            {
                "line_number": 41,
                "text": "SEI message is intended to be used in cases when some value of transfer_characteristics is preferred for interpretation of"
            },
            {
                "line_number": 42,
                "text": "the pictures of the coded video sequence although some other value of transfer_characteristics may also be acceptable for"
            },
            {
                "line_number": 43,
                "text": "interpretation of the pictures of the coded video sequence and that other value is provided in the colour description syntax"
            },
            {
                "line_number": 44,
                "text": "of VUI parameters of the sequence parameter set for interpretation by decoders that do not support interpretation of the"
            },
            {
                "line_number": 45,
                "text": "preferred value (e.g., because the preferred value had not yet been defined in a previous version of this Specification)."
            },
            {
                "line_number": 46,
                "text": "When an alternative transfer characteristics SEI message is present for any picture of a coded video sequence, an alternative"
            },
            {
                "line_number": 47,
                "text": "transfer characteristics SEI message shall be present for the IDR picture of the coded video sequence. The alternative"
            },
            {
                "line_number": 48,
                "text": "transfer characteristics SEI message persists in decoding order from the current picture until the end of the coded video"
            },
            {
                "line_number": 49,
                "text": "sequence. All alternative transfer characteristics SEI messages that apply to the same coded video sequence shall have the"
            },
            {
                "line_number": 50,
                "text": "same content."
            },
            {
                "line_number": 51,
                "text": "preferred_transfer_characteristics specifies a preferred alternative value for the transfer_characteristics syntax element"
            },
            {
                "line_number": 52,
                "text": "of the colour description syntax of VUI parameters of the sequence parameter set. The semantics for"
            },
            {
                "line_number": 53,
                "text": "preferred_transfer_characteristics are otherwise the same as for the transfer_characteristics syntax element specified in the"
            },
            {
                "line_number": 54,
                "text": "VUI parameters of the sequence parameter set (see clause E.2.1 and Table E-4). When preferred_transfer_characteristics"
            },
            {
                "line_number": 55,
                "text": "is not equal to the value of transfer_characteristics indicated in the VUI parameters of the sequence parameter set, decoders"
            },
            {
                "line_number": 56,
                "text": "should ignore the value of transfer_characteristics indicated in the VUI parameters of the sequence parameter set and"
            },
            {
                "line_number": 57,
                "text": "instead use the value indicated by preferred_transfer_characteristics."
            },
            {
                "line_number": 58,
                "text": "D.2.33 Content colour volume SEI message semantics"
            },
            {
                "line_number": 59,
                "text": "The content colour volume SEI message describes the colour volume characteristics of the associated pictures. These"
            },
            {
                "line_number": 60,
                "text": "colour volume characteristics are expressed in terms of a nominal range, although deviations from this range may occur."
            },
            {
                "line_number": 61,
                "text": "Rec. ITU-T H.264 (06/2019) 397"
            }
        ]
    },
    {
        "page_number": 420,
        "lines": [
            {
                "line_number": 1,
                "text": "The variable transferCharacteristics is specified as follows:"
            },
            {
                "line_number": 2,
                "text": "– If an alternative transfer characteristics SEI message is present for the coded video sequence, transferCharacteristics"
            },
            {
                "line_number": 3,
                "text": "is set equal to preferred_transfer_characteristics;"
            },
            {
                "line_number": 4,
                "text": "– Otherwise, (an alternative transfer characteristics SEI message is not present for the coded video sequence),"
            },
            {
                "line_number": 5,
                "text": "transferCharacteristics is set equal to transfer_characteristics."
            },
            {
                "line_number": 6,
                "text": "The content colour volume SEI message shall not be present, and decoders shall ignore it, when any of the following"
            },
            {
                "line_number": 7,
                "text": "conditions is true:"
            },
            {
                "line_number": 8,
                "text": "– Any of the values of transferCharacteristics, colour_primaries, and matrix_coefficients has a value defined as"
            },
            {
                "line_number": 9,
                "text": "unspecified."
            },
            {
                "line_number": 10,
                "text": "– The value of transfer_characteristics is equal to 2, 4, or 5."
            },
            {
                "line_number": 11,
                "text": "– The value of colour_primaries is equal to 2."
            },
            {
                "line_number": 12,
                "text": "The following applies when converting the signal from a non-linear to a linear representation:"
            },
            {
                "line_number": 13,
                "text": "– If the value of transferCharacteristics is equal to 1, 6, 7, 14, or 15, the Rec. ITU-R BT.1886-0 reference electro-optical"
            },
            {
                "line_number": 14,
                "text": "transfer function should be used to convert the signal to its linear representation, where the value of screen luminance"
            },
            {
                "line_number": 15,
                "text": "for white is set equal to 100 cd/m2, the value of screen luminance for black is set equal to 0 cd/m2, and the value of"
            },
            {
                "line_number": 16,
                "text": "the exponent of the power function is set equal to 2.4."
            },
            {
                "line_number": 17,
                "text": "– Otherwise, if the value of transferCharacteristics is equal to 18, the hybrid log-gamma reference electro-optical"
            },
            {
                "line_number": 18,
                "text": "transfer function specified in Rec. ITU-R BT.2100-2 should be used to convert the signal to its linear representation,"
            },
            {
                "line_number": 19,
                "text": "where the value of nominal peak luminance of the display is set equal to 1000 cd/m2, the value of the display"
            },
            {
                "line_number": 20,
                "text": "luminance for black is set equal to 0 cd/m2, and the value of system gamma is set equal to 1.2."
            },
            {
                "line_number": 21,
                "text": "– Otherwise (the value of transferCharacteristics is not equal to 1, 6, 7, 14, 15, or 18) when the content colour volume"
            },
            {
                "line_number": 22,
                "text": "SEI message is present, the exact inverse of the transfer function specified in Table E-4 should be used to convert the"
            },
            {
                "line_number": 23,
                "text": "non-linear signal to a linear representation."
            },
            {
                "line_number": 24,
                "text": "ccv_cancel_flag equal to 1 indicates that the content colour volume SEI message cancels the persistence of any previous"
            },
            {
                "line_number": 25,
                "text": "content colour volume SEI message in output order. ccv_cancel_flag equal to 0 indicates that content colour volume"
            },
            {
                "line_number": 26,
                "text": "information follows."
            },
            {
                "line_number": 27,
                "text": "ccv_persistence_flag specifies the persistence of the content colour volume SEI message."
            },
            {
                "line_number": 28,
                "text": "ccv_persistence_flag equal to 0 specifies that the content colour volume SEI message applies to the current decoded picture"
            },
            {
                "line_number": 29,
                "text": "only."
            },
            {
                "line_number": 30,
                "text": "Let picA be the current picture. ccv_persistence_flag equal to 1 specifies that the content colour volume SEI message"
            },
            {
                "line_number": 31,
                "text": "persists in output order until one or more of the following conditions are true:"
            },
            {
                "line_number": 32,
                "text": "– A new CVS begins."
            },
            {
                "line_number": 33,
                "text": "– The bitstream ends."
            },
            {
                "line_number": 34,
                "text": "– A picture picB in an access unit containing a content colour volume SEI message is output having PicOrderCnt( picB )"
            },
            {
                "line_number": 35,
                "text": "greater than PicOrderCnt( picA )."
            },
            {
                "line_number": 36,
                "text": "ccv_primaries_present_flag equal to 1 specifies that the syntax elements ccv_primaries_x[ c ] and ccv_primaries_y[ c ]"
            },
            {
                "line_number": 37,
                "text": "are present. ccv_primaries_present_flag equal to 0 specifies that the syntax elements ccv_primaries_x[ c ] and"
            },
            {
                "line_number": 38,
                "text": "ccv_primaries_y[ c ] are not present."
            },
            {
                "line_number": 39,
                "text": "ccv_min_luminance_value_present_flag equal to 1 specifies that the syntax element ccv_min_luminance_value is"
            },
            {
                "line_number": 40,
                "text": "present. ccv_min_luminance_value_present_flag equal to 0 specifies that the syntax element ccv_min_luminance_value"
            },
            {
                "line_number": 41,
                "text": "is not present."
            },
            {
                "line_number": 42,
                "text": "ccv_max_luminance_value_present_flag equal to 1 specifies that the syntax element ccv_max_luminance_value is"
            },
            {
                "line_number": 43,
                "text": "present. ccv_max_luminance_value_present_flag equal to 0 specifies that the syntax element ccv_max_luminance_value"
            },
            {
                "line_number": 44,
                "text": "is not present."
            },
            {
                "line_number": 45,
                "text": "ccv_avg_luminance_value_present_flag equal to 1 specifies that the syntax element ccv_avg_luminance_value is"
            },
            {
                "line_number": 46,
                "text": "present. ccv_avg_luminance_value_present_flag equal to 0 specifies that the syntax element ccv_avg_luminance_value is"
            },
            {
                "line_number": 47,
                "text": "not present."
            },
            {
                "line_number": 48,
                "text": "It is a requirement of bitstream conformance that the values of ccv_primaries_present_flag,"
            },
            {
                "line_number": 49,
                "text": "ccv_min_luminance_value_present_flag, ccv_max_luminance_value_present_flag, and"
            },
            {
                "line_number": 50,
                "text": "ccv_avg_luminance_value_present_flag shall not all be equal to 0."
            },
            {
                "line_number": 51,
                "text": "398 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 421,
        "lines": [
            {
                "line_number": 1,
                "text": "ccv_reserved_zero_2bits shall be equal to 0 in bitstreams conforming to this version of this Specification. Other values"
            },
            {
                "line_number": 2,
                "text": "for ccv_reserved_zero_2bits are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore the value of"
            },
            {
                "line_number": 3,
                "text": "ccv_reserved_zero_2bits."
            },
            {
                "line_number": 4,
                "text": "ccv_primaries_x[ c ] and ccv_primaries_y[ c ] specify the normalized x and y chromaticity coordinates, respectively, of"
            },
            {
                "line_number": 5,
                "text": "the colour primary component c of the nominal content colour volume in normalized increments of 0.00002, according to"
            },
            {
                "line_number": 6,
                "text": "the CIE 1931 definition of x and y as specified in ISO 11664-1 (see also ISO 11664-3 and CIE 15), in normalized"
            },
            {
                "line_number": 7,
                "text": "increments of 0.00002. For describing colour volumes that use red, green, and blue colour primaries, it is suggested that"
            },
            {
                "line_number": 8,
                "text": "index value c equal to 0 should correspond to the green primary, c equal to 1 should correspond to the blue primary, and c"
            },
            {
                "line_number": 9,
                "text": "equal to 2 should correspond to the red colour primary (see also Annex E and Table E-3)."
            },
            {
                "line_number": 10,
                "text": "The values of ccv_primaries_x[ c ] and ccv_primaries_y[ c ] shall be in the range of −5 000 000 to 5 000 000, inclusive."
            },
            {
                "line_number": 11,
                "text": "When ccv_primaries_x[ c ] and ccv_primaries_y[ c ] are not present, they are inferred to be equal to the normalized x and"
            },
            {
                "line_number": 12,
                "text": "y chromaticity coordinates, respectively, specified by colour_primaries."
            },
            {
                "line_number": 13,
                "text": "ccv_min_luminance_value specifies the normalized minimum luminance value, according to CIE 1931, that is expected"
            },
            {
                "line_number": 14,
                "text": "to be present in the content, where values are normalized to L or L as specified in Table E-4 according to the indicated"
            },
            {
                "line_number": 15,
                "text": "o c"
            },
            {
                "line_number": 16,
                "text": "transfer characteristics of the signal. The values of ccv_min_luminance_value are in normalized increments of 0.0000001."
            },
            {
                "line_number": 17,
                "text": "ccv_max_luminance_value specifies the maximum luminance value, according to CIE 1931, that is expected to be present"
            },
            {
                "line_number": 18,
                "text": "in the content, where values are normalized to L or L as specified in Table E-4 according to the transfer characteristics"
            },
            {
                "line_number": 19,
                "text": "o c"
            },
            {
                "line_number": 20,
                "text": "of the signal. The values of ccv_max_luminance_value are in normalized increments of 0.0000001."
            },
            {
                "line_number": 21,
                "text": "ccv_avg_luminance_value specifies the average luminance value, according to CIE 1931, that is expected to be present"
            },
            {
                "line_number": 22,
                "text": "in the content, where values are normalized to L or L as specified in Table E-4 according to the transfer characteristics"
            },
            {
                "line_number": 23,
                "text": "o c"
            },
            {
                "line_number": 24,
                "text": "of the signal. The values of ccv_avg_luminance_value are in normalized increments of 0.0000001."
            },
            {
                "line_number": 25,
                "text": "NOTE – The resulting domain from this conversion process may or may not represent light in a source or display domain – it is"
            },
            {
                "line_number": 26,
                "text": "merely a gamut representation domain rather than necessarily being a representation of actual light in either the scene or display"
            },
            {
                "line_number": 27,
                "text": "domain. Therefore, the values corresponding to ccv_min_luminance_value, ccv_max_luminance_value, and"
            },
            {
                "line_number": 28,
                "text": "ccv_avg_luminance_value might not necessarily correspond to a true luminance value."
            },
            {
                "line_number": 29,
                "text": "The value of ccv_min_luminance_value, when present, shall be less than or equal to ccv_avg_luminance_value, when"
            },
            {
                "line_number": 30,
                "text": "present. The value of ccv_avg_luminance_value, when present, shall be less than or equal to ccv_max_luminance_value,"
            },
            {
                "line_number": 31,
                "text": "when present. The value of ccv_min_luminance_value, when present, shall be less than or equal to"
            },
            {
                "line_number": 32,
                "text": "ccv_max_luminance_value, when present."
            },
            {
                "line_number": 33,
                "text": "When the visually relevant region does not correspond to the entire cropped decoded picture, such as for \"letterbox\""
            },
            {
                "line_number": 34,
                "text": "encoding of video content with a wide picture aspect ratio within a taller cropped decoded picture, the indicated"
            },
            {
                "line_number": 35,
                "text": "ccv_min_luminance_value, ccv_max_luminance_value, and ccv_avg_luminance_value should correspond only to values"
            },
            {
                "line_number": 36,
                "text": "within the visually relevant region."
            },
            {
                "line_number": 37,
                "text": "D.2.34 Ambient viewing environment SEI message semantics"
            },
            {
                "line_number": 38,
                "text": "The ambient viewing environment SEI message identifies the characteristics of the nominal ambient viewing environment"
            },
            {
                "line_number": 39,
                "text": "for the display of the associated video content. The syntax elements of the ambient viewing environment SEI message may"
            },
            {
                "line_number": 40,
                "text": "assist the receiving system in adapting the received video content for local display in viewing environments that may be"
            },
            {
                "line_number": 41,
                "text": "similar or may substantially differ from those assumed or intended when mastering the video content."
            },
            {
                "line_number": 42,
                "text": "This SEI message does not provide information on colour transformations that would be appropriate to preserve creative"
            },
            {
                "line_number": 43,
                "text": "intent on displays with colour volumes different from that of the described mastering display."
            },
            {
                "line_number": 44,
                "text": "When an ambient viewing environment SEI message is present for any picture of a coded video sequence, an ambient"
            },
            {
                "line_number": 45,
                "text": "viewing environment SEI message shall be present in the IDR access unit that is the first access unit of the coded video"
            },
            {
                "line_number": 46,
                "text": "sequence. All ambient viewing environment SEI messages that apply to the same coded video sequence shall have the"
            },
            {
                "line_number": 47,
                "text": "same content."
            },
            {
                "line_number": 48,
                "text": "ambient_illuminance specifies the environmental illluminance of the ambient viewing environment in units of 0.0001"
            },
            {
                "line_number": 49,
                "text": "lux. ambient_illuminance shall not be equal to 0."
            },
            {
                "line_number": 50,
                "text": "ambient_light_x and ambient_light_y specify the normalized x and y chromaticity coordinates, respectively, of the"
            },
            {
                "line_number": 51,
                "text": "environmental ambient light in the nominal viewing environment, according to the CIE 1931 definition of x and y as"
            },
            {
                "line_number": 52,
                "text": "specified in ISO 11664-1 (see also ISO 11664-3 and CIE 15), in normalized increments of 0.00002. The values of"
            },
            {
                "line_number": 53,
                "text": "ambient_light_x and ambient_light_y shall be in the range of 0 to 50 000, inclusive."
            },
            {
                "line_number": 54,
                "text": "NOTE – For example, the conditions identified in Rec. ITU-R BT.2035 can be expressed using ambient_illuminance equal to"
            },
            {
                "line_number": 55,
                "text": "100 000 with background chromaticity indicating D65 (ambient_light_x equal to 15 635, ambient_light_y equal to 16 450), or"
            },
            {
                "line_number": 56,
                "text": "optionally in some regions, background chromaticity indicating D93 (ambient_light_x equal to 14 155, ambient_light_y equal to"
            },
            {
                "line_number": 57,
                "text": "14 855)."
            },
            {
                "line_number": 58,
                "text": "Rec. ITU-T H.264 (06/2019) 399"
            }
        ]
    },
    {
        "page_number": 422,
        "lines": [
            {
                "line_number": 1,
                "text": "D.2.35 Semantics of omnidirectional video specific SEI messages"
            },
            {
                "line_number": 2,
                "text": "D.2.35.1 Equirectangular projection SEI message semantics"
            },
            {
                "line_number": 3,
                "text": "The equirectangular projection SEI message provides information to enable remapping (through an equirectangular"
            },
            {
                "line_number": 4,
                "text": "projection) of the colour samples of the projected pictures onto a sphere coordinate space in sphere coordinates (ϕ, θ) for"
            },
            {
                "line_number": 5,
                "text": "use in omnidirectional video applications for which the viewing perspective is from the origin looking outward toward the"
            },
            {
                "line_number": 6,
                "text": "inside of the sphere. The sphere coordinates are defined so that ϕ is the azimuth (longitude, increasing eastward) and θ is"
            },
            {
                "line_number": 7,
                "text": "the elevation (latitude, increasing northward)."
            },
            {
                "line_number": 8,
                "text": "When an equirectangular projection SEI message is present for any picture of a coded video sequence (CVS), an"
            },
            {
                "line_number": 9,
                "text": "equirectangular projection SEI message shall be present for the first picture of the CVS and no SEI message indicating a"
            },
            {
                "line_number": 10,
                "text": "different type of projection shall be present for any picture of the CVS."
            },
            {
                "line_number": 11,
                "text": "When aspect_ratio_idc is present and greater than 1 in the active sequence parameter set, there should be no equirectangular"
            },
            {
                "line_number": 12,
                "text": "projection SEI messages applicable for any picture of the CVS."
            },
            {
                "line_number": 13,
                "text": "A frame packing arrangement SEI message for which all the following conditions are true is referred to as an effectively"
            },
            {
                "line_number": 14,
                "text": "applicable frame packing arrangement SEI message:"
            },
            {
                "line_number": 15,
                "text": "– The value of frame_packing_arrangement_cancel_flag is equal to 0."
            },
            {
                "line_number": 16,
                "text": "– The value of frame_packing_arrangement_type is equal to 3, 4, or 5."
            },
            {
                "line_number": 17,
                "text": "– The value of quincunx_sampling_flag is equal to 0."
            },
            {
                "line_number": 18,
                "text": "– The value of spatial_flipping_flag is equal to 0."
            },
            {
                "line_number": 19,
                "text": "– The value of field_views_flag is equal to 0."
            },
            {
                "line_number": 20,
                "text": "– The value of frame0_grid_position_x is equal to 0."
            },
            {
                "line_number": 21,
                "text": "– The value of frame0_grid_position_y is equal to 0."
            },
            {
                "line_number": 22,
                "text": "– The value of frame1_grid_position_x is equal to 0."
            },
            {
                "line_number": 23,
                "text": "– The value of frame1_grid_position_y is equal to 0."
            },
            {
                "line_number": 24,
                "text": "When an effectively applicable frame packing arrangement SEI message that applies to the picture is not present, an"
            },
            {
                "line_number": 25,
                "text": "equirectangular projection SEI message with erp_cancel_flag equal to 0 that applies to the picture shall not be present."
            },
            {
                "line_number": 26,
                "text": "Decoders shall ignore equirectangular projection SEI messages when an effectively applicable frame packing arrangement"
            },
            {
                "line_number": 27,
                "text": "SEI message that applies to the picture is not present."
            },
            {
                "line_number": 28,
                "text": "erp_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous equirectangular"
            },
            {
                "line_number": 29,
                "text": "projection SEI message in output order. erp_cancel_flag equal to 0 indicates that equirectangular projection information"
            },
            {
                "line_number": 30,
                "text": "follows."
            },
            {
                "line_number": 31,
                "text": "erp_persistence_flag specifies the persistence of the equirectangular projection SEI message."
            },
            {
                "line_number": 32,
                "text": "erp_persistence_flag equal to 0 specifies that the equirectangular projection SEI message applies to the current decoded"
            },
            {
                "line_number": 33,
                "text": "picture only."
            },
            {
                "line_number": 34,
                "text": "Let picA be the current picture. erp_persistence_flag equal to 1 specifies that the equirectangular projection SEI message"
            },
            {
                "line_number": 35,
                "text": "persists in output order until one or more of the following conditions are true:"
            },
            {
                "line_number": 36,
                "text": "– A new CVS begins."
            },
            {
                "line_number": 37,
                "text": "– The bitstream ends."
            },
            {
                "line_number": 38,
                "text": "– A picture picB in an access unit containing an equirectangular projection SEI message is output having"
            },
            {
                "line_number": 39,
                "text": "PicOrderCnt( picB ) greater than PicOrderCnt( picA )."
            },
            {
                "line_number": 40,
                "text": "erp_padding_flag equal to 1 indicates that the constituent picture contains padded areas for which the sizes are specified"
            },
            {
                "line_number": 41,
                "text": "by the syntax elements left_gb_erp_width and right_gb_erp_width. erp_padding_flag equal to 0 indicates that the"
            },
            {
                "line_number": 42,
                "text": "constituent picture does not contains padded areas for which the sizes are specified by the syntax elements"
            },
            {
                "line_number": 43,
                "text": "left_gb_erp_width and right_gb_erp_width."
            },
            {
                "line_number": 44,
                "text": "erp_reserved_zero_2bits shall be equal to 0 in bitstreams conforming to this version of this Specification. Other values"
            },
            {
                "line_number": 45,
                "text": "for erp_reserved_zero_2bits are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore the value of"
            },
            {
                "line_number": 46,
                "text": "erp_reserved_zero_2bits."
            },
            {
                "line_number": 47,
                "text": "gb_erp_type specifies the type of the guard bands as follows:"
            },
            {
                "line_number": 48,
                "text": "– gb_erp_type equal to 0 specifies that the content of the guard band in relation to the content of the constituent picture"
            },
            {
                "line_number": 49,
                "text": "is unspecified."
            },
            {
                "line_number": 50,
                "text": "400 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 423,
        "lines": [
            {
                "line_number": 1,
                "text": "– gb_erp_type equal to 1 specifies that the content of the guard band suffices for interpolation of sample values at sub-"
            },
            {
                "line_number": 2,
                "text": "pel sample fractional locations within the constituent picture."
            },
            {
                "line_number": 3,
                "text": "NOTE – gb_erp_type equal to 1 could be used when the boundary samples of a constituent picture have been copied"
            },
            {
                "line_number": 4,
                "text": "horizontally to the guard band."
            },
            {
                "line_number": 5,
                "text": "– gb_erp_type equal to 2 specifies that the content of the guard band represents actual picture content at quality that"
            },
            {
                "line_number": 6,
                "text": "gradually changes from the picture quality of the constituent picture."
            },
            {
                "line_number": 7,
                "text": "– gb_erp_type equal to 3 specifies that the content of the guard bands represents actual picture content at a similar level"
            },
            {
                "line_number": 8,
                "text": "of quality as the constituent picture."
            },
            {
                "line_number": 9,
                "text": "– gb_erp_type values greater than 3 are reserved. Decoders shall ignore the value of gb_erp_type when the value is"
            },
            {
                "line_number": 10,
                "text": "greater than 3."
            },
            {
                "line_number": 11,
                "text": "left_gb_erp_width specifies the width of the guard band on the left side of the constituent picture in units of luma samples."
            },
            {
                "line_number": 12,
                "text": "When erp_padding_flag is equal to 0, the value of left_gb_erp_width is inferred to be equal to 0. When the decoded picture"
            },
            {
                "line_number": 13,
                "text": "has 4:2:0 or 4:2:2 chroma format, left_gb_erp_width shall be an even number."
            },
            {
                "line_number": 14,
                "text": "right_gb_erp_width specifies the width of the guard band on the right side of the constituent picture in units of luma"
            },
            {
                "line_number": 15,
                "text": "samples. When erp_padding_flag is equal to 0, the value of right_gb_erp_width is inferred to be equal to 0. When the"
            },
            {
                "line_number": 16,
                "text": "decoded picture has 4:2:0 or 4:2:2 chroma format, right_gb_erp_width shall be an even number."
            },
            {
                "line_number": 17,
                "text": "D.2.35.2 Cubemap projection SEI message semantics"
            },
            {
                "line_number": 18,
                "text": "The cubemap projection SEI message provides information to enable remapping (through a cubemap projection) of the"
            },
            {
                "line_number": 19,
                "text": "colour samples of the projected pictures onto a sphere coordinate space in sphere coordinates (ϕ, θ) for use in"
            },
            {
                "line_number": 20,
                "text": "omnidirectional video applications for which the viewing perspective is from the origin looking outward toward the inside"
            },
            {
                "line_number": 21,
                "text": "of the sphere. The sphere coordinates are defined so that ϕ is the azimuth (longitude, increasing eastward) and θ is the"
            },
            {
                "line_number": 22,
                "text": "elevation (latitude, increasing northward)."
            },
            {
                "line_number": 23,
                "text": "When a cubemap projection SEI message is present for any picture of a coded video sequence (CVS), a cubemap projection"
            },
            {
                "line_number": 24,
                "text": "SEI message shall be present for the first picture of the CVS and no SEI message indicating a different type of projection"
            },
            {
                "line_number": 25,
                "text": "shall be present for any picture."
            },
            {
                "line_number": 26,
                "text": "When aspect_ratio_idc is present and greater than 1 in the active sequence parameter set, there should be no cubemap"
            },
            {
                "line_number": 27,
                "text": "projection SEI messages applicable for any picture of the CVS."
            },
            {
                "line_number": 28,
                "text": "A frame packing arrangement SEI message for which all the following conditions are true is referred to as an effectively"
            },
            {
                "line_number": 29,
                "text": "applicable frame packing arrangement SEI message:"
            },
            {
                "line_number": 30,
                "text": "– The value of frame_packing_arrangement_cancel_flag is equal to 0."
            },
            {
                "line_number": 31,
                "text": "– The value of frame_packing_arrangement_type is equal to 3, 4, or 5."
            },
            {
                "line_number": 32,
                "text": "– The value of quincunx_sampling_flag is equal to 0."
            },
            {
                "line_number": 33,
                "text": "– The value of spatial_flipping_flag is equal to 0."
            },
            {
                "line_number": 34,
                "text": "– The value of field_views_flag is equal to 0."
            },
            {
                "line_number": 35,
                "text": "– The value of frame0_grid_position_x is equal to 0."
            },
            {
                "line_number": 36,
                "text": "– The value of frame0_grid_position_y is equal to 0."
            },
            {
                "line_number": 37,
                "text": "– The value of frame1_grid_position_x is equal to 0."
            },
            {
                "line_number": 38,
                "text": "– The value of frame1_grid_position_y is equal to 0."
            },
            {
                "line_number": 39,
                "text": "When an effectively applicable frame packing arrangement SEI message that applies to the picture is not present, a"
            },
            {
                "line_number": 40,
                "text": "cubemap projection SEI message with cmp_cancel_flag equal to 0 that applies to the picture shall not be present. Decoders"
            },
            {
                "line_number": 41,
                "text": "shall ignore cubemap projection SEI messages when an effectively applicable frame packing arrangement SEI message"
            },
            {
                "line_number": 42,
                "text": "that applies to the picture is not present."
            },
            {
                "line_number": 43,
                "text": "cmp_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous cubemap projection"
            },
            {
                "line_number": 44,
                "text": "SEI message in output order. cmp_cancel_flag equal to 0 indicates that cubemap projection information follows."
            },
            {
                "line_number": 45,
                "text": "cmp_persistence_flag specifies the persistence of the cubemap projection SEI message."
            },
            {
                "line_number": 46,
                "text": "cmp_persistence_flag equal to 0 specifies that the cubemap projection SEI message applies to the current decoded picture"
            },
            {
                "line_number": 47,
                "text": "only."
            },
            {
                "line_number": 48,
                "text": "Let picA be the current picture. cmp_persistence_flag equal to 1 specifies that the cubemap projection SEI message persists"
            },
            {
                "line_number": 49,
                "text": "in output order until one or more of the following conditions are true:"
            },
            {
                "line_number": 50,
                "text": "– A new CVS begins."
            },
            {
                "line_number": 51,
                "text": "Rec. ITU-T H.264 (06/2019) 401"
            }
        ]
    },
    {
        "page_number": 424,
        "lines": [
            {
                "line_number": 1,
                "text": "– The bitstream ends."
            },
            {
                "line_number": 2,
                "text": "– A picture picB in an access unit containing a cubemap projection SEI message is output having PicOrderCnt( picB )"
            },
            {
                "line_number": 3,
                "text": "greater than PicOrderCnt( picA )."
            },
            {
                "line_number": 4,
                "text": "D.2.35.3 Sphere rotation SEI message semantics"
            },
            {
                "line_number": 5,
                "text": "The sphere rotation SEI message provides information on rotation angles yaw (α), pitch (β), and roll (γ) that are used for"
            },
            {
                "line_number": 6,
                "text": "conversion between the global coordinate axes and the local coordinate axes."
            },
            {
                "line_number": 7,
                "text": "Relative to an (x, y, z) Cartesian coordinate system, yaw expresses a rotation around the z (vertical, up) axis, pitch rotates"
            },
            {
                "line_number": 8,
                "text": "around the y (lateral, side-to-side) axis, and roll rotates around the x (back-to-front) axis. Rotations are extrinsic, i.e.,"
            },
            {
                "line_number": 9,
                "text": "around x, y, and z fixed reference axes. The angles increase clockwise when looking from the origin towards the positive"
            },
            {
                "line_number": 10,
                "text": "end of an axis."
            },
            {
                "line_number": 11,
                "text": "sphere_rotation_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous sphere"
            },
            {
                "line_number": 12,
                "text": "rotation SEI message in output order. sphere_rotation_cancel_flag equal to 0 indicates that sphere rotation information"
            },
            {
                "line_number": 13,
                "text": "follows."
            },
            {
                "line_number": 14,
                "text": "sphere_rotation_persistence_flag specifies the persistence of the sphere rotation SEI message."
            },
            {
                "line_number": 15,
                "text": "sphere_rotation_persistence_flag equal to 0 specifies that the sphere rotation SEI message applies to the current decoded"
            },
            {
                "line_number": 16,
                "text": "picture only."
            },
            {
                "line_number": 17,
                "text": "Let picA be the current picture. sphere_rotation_persistence_flag equal to 1 specifies that the sphere rotation SEI message"
            },
            {
                "line_number": 18,
                "text": "persists in output order until one or more of the following conditions are true:"
            },
            {
                "line_number": 19,
                "text": "– A new coded video sequence (CVS) begins."
            },
            {
                "line_number": 20,
                "text": "– The bitstream ends."
            },
            {
                "line_number": 21,
                "text": "– A picture picB in an access unit containing a sphere rotation SEI message is output having PicOrderCnt( picB ) greater"
            },
            {
                "line_number": 22,
                "text": "than PicOrderCnt( picA )."
            },
            {
                "line_number": 23,
                "text": "When an equirectangular projection SEI message with erp_cancel_flag equal to 0 or a cubemap projection SEI message"
            },
            {
                "line_number": 24,
                "text": "with cmp_cancel_flag equal to 0 is not present in the CVS that applies to the current picture and precedes the sphere"
            },
            {
                "line_number": 25,
                "text": "rotation SEI message in decoding order, a sphere rotation SEI message with sphere_rotation_cancel_flag equal to 0 shall"
            },
            {
                "line_number": 26,
                "text": "not be present in the CVS that applies to the current picture. Decoders shall ignore sphere rotation SEI messages with"
            },
            {
                "line_number": 27,
                "text": "sphere_rotation_cancel_flag equal to 0 that do not follow, in decoding order, an equirectangular projection SEI message"
            },
            {
                "line_number": 28,
                "text": "with erp_cancel_flag equal to 0 or a cubemap projection SEI message with cmp_cancel_flag equal to 0 in the CVS that"
            },
            {
                "line_number": 29,
                "text": "applies to the current picture."
            },
            {
                "line_number": 30,
                "text": "sphere_rotation_reserved_zero_6bits shall be equal to 0 in bitstreams conforming to this version of this Specification."
            },
            {
                "line_number": 31,
                "text": "Other values for sphere_rotation_reserved_zero_6bits are reserved for future use by ITU-T | ISO/IEC. Decoders shall"
            },
            {
                "line_number": 32,
                "text": "ignore the value of sphere_rotation_reserved_zero_6bits."
            },
            {
                "line_number": 33,
                "text": "yaw_rotation specifies the value of the yaw rotation angle, in units of 2−16 degrees. The value of yaw_rotation shall be in"
            },
            {
                "line_number": 34,
                "text": "the range of −180 * 216 (i.e., −11 796 480) to 180 * 216 − 1 (i.e., 11 796 479), inclusive. When not present, the value of"
            },
            {
                "line_number": 35,
                "text": "yaw_rotation is inferred to be equal to 0."
            },
            {
                "line_number": 36,
                "text": "pitch_rotation specifies the value of the pitch rotation angle, in units of 2−16 degrees. The value of pitch_rotation shall be"
            },
            {
                "line_number": 37,
                "text": "in the range of −90 * 216 (i.e., −5 898 240) to 90 * 216 (i.e., 5 898 240), inclusive. When not present, the value of"
            },
            {
                "line_number": 38,
                "text": "pitch_rotation is inferred to be equal to 0."
            },
            {
                "line_number": 39,
                "text": "roll_rotation specifies the value of the roll rotation angle, in units of 2−16 degrees. The value of roll_rotation shall be in"
            },
            {
                "line_number": 40,
                "text": "the range of −180 * 216 (i.e., −11 796 480) to 180 * 216 − 1 (i.e., 11 796 479), inclusive. When not present, the value of"
            },
            {
                "line_number": 41,
                "text": "roll_rotation is inferred to be equal to 0."
            },
            {
                "line_number": 42,
                "text": "D.2.35.4 Region-wise packing SEI message semantics"
            },
            {
                "line_number": 43,
                "text": "The region-wise packing SEI message provides information to enable remapping of the colour samples of the cropped"
            },
            {
                "line_number": 44,
                "text": "decoded pictures onto projected pictures as well as information on the location and size of the guard bands, if any."
            },
            {
                "line_number": 45,
                "text": "rwp_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous region-wise packing"
            },
            {
                "line_number": 46,
                "text": "SEI message in output order. rwp_cancel_flag equal to 0 indicates that region-wise packing information follows."
            },
            {
                "line_number": 47,
                "text": "rwp_persistence_flag specifies the persistence of the region-wise packing SEI message."
            },
            {
                "line_number": 48,
                "text": "rwp_persistence_flag equal to 0 specifies that the region-wise packing SEI message applies to the current decoded picture"
            },
            {
                "line_number": 49,
                "text": "only."
            },
            {
                "line_number": 50,
                "text": "402 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 425,
        "lines": [
            {
                "line_number": 1,
                "text": "Let picA be the current picture. rwp_persistence_flag equal to 1 specifies that the region-wise packing SEI message persists"
            },
            {
                "line_number": 2,
                "text": "in output order until one or more of the following conditions are true:"
            },
            {
                "line_number": 3,
                "text": "– A new coded video sequence (CVS) begins."
            },
            {
                "line_number": 4,
                "text": "– The bitstream ends."
            },
            {
                "line_number": 5,
                "text": "– A picture picB in an access unit containing a region-wise packing SEI message is output having PicOrderCnt( picB )"
            },
            {
                "line_number": 6,
                "text": "greater than PicOrderCnt( picA )."
            },
            {
                "line_number": 7,
                "text": "When an equirectangular projection SEI message with erp_cancel_flag equal to 0 and erp_padding_flag equal to 0 or a"
            },
            {
                "line_number": 8,
                "text": "cubemap projection SEI message with cmp_cancel_flag equal to 0 is not present in the CVS that applies to the current"
            },
            {
                "line_number": 9,
                "text": "picture and precedes the region-wise packing SEI message in decoding order, a region-wise packing SEI message with"
            },
            {
                "line_number": 10,
                "text": "rwp_cancel_flag equal to 0 shall not be present in the CVS that applies to the current picture. Decoders shall ignore region-"
            },
            {
                "line_number": 11,
                "text": "wise packing SEI messages with rwp_cancel_flag equal to 0 that do not follow, in decoding order, an equirectangular"
            },
            {
                "line_number": 12,
                "text": "projection SEI message with erp_cancel_flag equal to 0 or a cubemap projection SEI message with cmp_cancel_flag equal"
            },
            {
                "line_number": 13,
                "text": "to 0 in the CVS that applies to the current picture."
            },
            {
                "line_number": 14,
                "text": "For the frame packing arrangement scheme indicated by a frame packing arrangement SEI message that applies to the"
            },
            {
                "line_number": 15,
                "text": "current picture, if a region-wise packing SEI message with rwp_cancel_flag equal to 0 is present that applies to the current"
            },
            {
                "line_number": 16,
                "text": "picture, the frame packing arrangement scheme applies to the projected picture, otherwise, the frame packing arrangement"
            },
            {
                "line_number": 17,
                "text": "scheme applies to the cropped decoded picture."
            },
            {
                "line_number": 18,
                "text": "If a frame packing arrangement SEI message with frame_packing_arrangement_cancel_flag equal to 0,"
            },
            {
                "line_number": 19,
                "text": "frame_packing_arrangement_type equal to 3, 4, or 5, and quincunx_sampling_flag equal to 0 is not present that applies to"
            },
            {
                "line_number": 20,
                "text": "the current picture, the variables StereoFlag, TopBottomFlag, SideBySideFlag, and TempInterleavingFlag are all set equal"
            },
            {
                "line_number": 21,
                "text": "to 0, the variables HorDiv1 and VerDiv1 are both set equal to 1. Otherwise the following applies:"
            },
            {
                "line_number": 22,
                "text": "– StereoFlag is equal to 1."
            },
            {
                "line_number": 23,
                "text": "– When the frame_packing_arrangement_type is equal to 3, SideBySideFlag is set equal to 1, TopBottomFlag and"
            },
            {
                "line_number": 24,
                "text": "TempInterleavingFlag are both set equal to 0, HorDiv1 is set equal to 2 and VerDiv1 is set equal to 1."
            },
            {
                "line_number": 25,
                "text": "– When the frame_packing_arrangement_type is equal to 4, TopBottomFlag is set equal to 1, SideBySideFlag and"
            },
            {
                "line_number": 26,
                "text": "TempInterleavingFlag are both set equal to 0, HorDiv1 is set equal to 1 and VerDiv1 is set equal to 2."
            },
            {
                "line_number": 27,
                "text": "– When the frame_packing_arrangement_type is equal to 5, TempInterleavingFlag is set equal to 1, TopBottomFlag"
            },
            {
                "line_number": 28,
                "text": "and SideBySideFlag are both set equal to 0, HorDiv1 and VerDiv1 are both set equal to 1."
            },
            {
                "line_number": 29,
                "text": "constituent_picture_matching_flag equal to 1 specifies that the projected region information, packed region information,"
            },
            {
                "line_number": 30,
                "text": "and guard band region information in this SEI message apply individually to each constituent picture and that the packed"
            },
            {
                "line_number": 31,
                "text": "picture and the projected picture have the same stereoscopic frame packing format indicated by the frame packing"
            },
            {
                "line_number": 32,
                "text": "arrangement SEI message. constituent_picture_matching_flag equal to 0 specifies that the projected region information,"
            },
            {
                "line_number": 33,
                "text": "packed region information, and guard band region information in this SEI message apply to the projected picture."
            },
            {
                "line_number": 34,
                "text": "When either of the following two conditions is true, the value of constituent_picture_matching_flag shall be equal to 0:"
            },
            {
                "line_number": 35,
                "text": "– StereoFlag is equal to 0."
            },
            {
                "line_number": 36,
                "text": "– StereoFlag is equal to 1 and frame_packing_arrangement_type is equal to 5."
            },
            {
                "line_number": 37,
                "text": "rwp_reserved_zero_5bits shall be equal to 0 in bitstreams conforming to this version of this Specification. Other values"
            },
            {
                "line_number": 38,
                "text": "for rwp_reserved_zero_56bits[ i ] are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore the value of"
            },
            {
                "line_number": 39,
                "text": "rwp_reserved_zero_5bits[ i ]."
            },
            {
                "line_number": 40,
                "text": "num_packed_regions specifies the number of packed regions when constituent_picture_matching_flag is equal to 0. The"
            },
            {
                "line_number": 41,
                "text": "value of num_packed_regions shall be greater than 0. When constituent_picture_matching_flag is equal to 1, the total"
            },
            {
                "line_number": 42,
                "text": "number of packed regions is equal to num_packed_regions * 2, and the information in each entry of the loop of"
            },
            {
                "line_number": 43,
                "text": "num_packed_regions entries applies to each constituent picture of the projected picture and the packed picture."
            },
            {
                "line_number": 44,
                "text": "proj_picture_width and proj_picture_height specify the width and height, respectively, of the projected picture, in"
            },
            {
                "line_number": 45,
                "text": "relative projected picture sample units."
            },
            {
                "line_number": 46,
                "text": "The values of proj_picture_width and proj_picture_height shall both be greater than 0."
            },
            {
                "line_number": 47,
                "text": "packed_picture_width and packed_picture_height specify the width and height, respectively, of the packed picture, in"
            },
            {
                "line_number": 48,
                "text": "relative packed picture sample units."
            },
            {
                "line_number": 49,
                "text": "The values of packed_picture_width and packed_picture_height shall both be greater than 0."
            },
            {
                "line_number": 50,
                "text": "It is a requirement of bitstream conformance that packed_picture_width and packed_picture_height shall have such values"
            },
            {
                "line_number": 51,
                "text": "that packed_picture_width is an integer multiple of cropPicWidth and packed_picture_height is an integer multiple of"
            },
            {
                "line_number": 52,
                "text": "cropPicHeight, where cropPicWidth and cropPicHeight are the width and height, respectively, of the cropped decoded"
            },
            {
                "line_number": 53,
                "text": "picture."
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 403"
            }
        ]
    },
    {
        "page_number": 426,
        "lines": [
            {
                "line_number": 1,
                "text": "rwp_reserved_zero_4bits[ i ] shall be equal to 0 in bitstreams conforming to this version of this Specification. Other"
            },
            {
                "line_number": 2,
                "text": "values for rwp_reserved_zero_4bits[ i ] are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore the value of"
            },
            {
                "line_number": 3,
                "text": "rwp_reserved_zero_4bits[ i ]."
            },
            {
                "line_number": 4,
                "text": "transform_type[ i ] specifies the rotation and mirroring to be applied to the i-th packed region to remap to the i-th projected"
            },
            {
                "line_number": 5,
                "text": "region. When transform_type[ i ] specifies both rotation and mirroring, rotation applies before mirroring. The values of"
            },
            {
                "line_number": 6,
                "text": "transform_type[ i ] are specified in Table D-11:"
            },
            {
                "line_number": 7,
                "text": "Table D-11 – transform_type[ i ] values"
            },
            {
                "line_number": 8,
                "text": "Value Description"
            },
            {
                "line_number": 9,
                "text": "0 no transform"
            },
            {
                "line_number": 10,
                "text": "1 mirroring horizontally"
            },
            {
                "line_number": 11,
                "text": "2 rotation by 180 degrees (anticlockwise)"
            },
            {
                "line_number": 12,
                "text": "3 rotation by 180 degrees (anticlockwise) before mirroring horizontally"
            },
            {
                "line_number": 13,
                "text": "4 rotation by 90 degrees (anticlockwise) before mirroring horizontally"
            },
            {
                "line_number": 14,
                "text": "5 rotation by 90 degrees (anticlockwise)"
            },
            {
                "line_number": 15,
                "text": "6 rotation by 270 degrees (anticlockwise) before mirroring horizontally"
            },
            {
                "line_number": 16,
                "text": "7 rotation by 270 degrees (anticlockwise)"
            },
            {
                "line_number": 17,
                "text": "guard_band_flag[ i ] equal to 0 specifies that the i-th packed region does not have a guard band. guard_band_flag[ i ]"
            },
            {
                "line_number": 18,
                "text": "equal to 1 specifies that the i-th packed region has a guard band."
            },
            {
                "line_number": 19,
                "text": "proj_region_width[ i ], proj_region_height[ i ], proj_region_top[ i ] and proj_region_left[ i ] specify the width,"
            },
            {
                "line_number": 20,
                "text": "height, top sample row, and the left-most sample column, respectively, of the i-th projected region, either within the"
            },
            {
                "line_number": 21,
                "text": "projected picture (when constituent_picture_matching_flag is equal to 0) or within the constituent picture of the projected"
            },
            {
                "line_number": 22,
                "text": "picture (when constituent_picture_matching_flag is equal to 1)."
            },
            {
                "line_number": 23,
                "text": "proj_region_width[ i ], proj_region_height[ i ], proj_region_top[ i ], and proj_region_left[ i ] are indicated in relative"
            },
            {
                "line_number": 24,
                "text": "projected picture sample units."
            },
            {
                "line_number": 25,
                "text": "NOTE 1 – Two projected regions may partially or entirely overlap with each other."
            },
            {
                "line_number": 26,
                "text": "packed_region_width[ i ], packed_region_height[ i ], packed_region_top[ i ], and packed_region_left[ i ] specify the"
            },
            {
                "line_number": 27,
                "text": "width, height, the top luma sample row, and the left-most luma sample column, respectively, of the packed region, either"
            },
            {
                "line_number": 28,
                "text": "within the region-wise packed picture (when constituent_picture_matching_flag is equal to 0) or within each constituent"
            },
            {
                "line_number": 29,
                "text": "picture of the region-wise packed picture (when constituent_picture_matching_flag is equal to 1)."
            },
            {
                "line_number": 30,
                "text": "packed_region_width[ i ], packed_region_height[ i ], packed_region_top[ i ], and packed_region_left[ i ] are indicated in"
            },
            {
                "line_number": 31,
                "text": "relative region-wise packed picture sample units. packed_region_width[ i ], packed_region_height[ i ],"
            },
            {
                "line_number": 32,
                "text": "packed_region_top[ i ], and packed_region_left[ i ] shall represent integer horizontal and vertical coordinates of luma"
            },
            {
                "line_number": 33,
                "text": "sample units within the cropped decoded pictures."
            },
            {
                "line_number": 34,
                "text": "NOTE 2 – Two packed regions may partially or entirely overlap with each other."
            },
            {
                "line_number": 35,
                "text": "left_gb_width[ i ] specifies the width of the guard band on the left side of the i-th packed region in relative region-wise"
            },
            {
                "line_number": 36,
                "text": "packed picture sample units. When the decoded picture has 4:2:0 or 4:2:2 chroma format, left_gb_width[ i ] shall"
            },
            {
                "line_number": 37,
                "text": "correspond to an even number of luma samples within the cropped decoded picture."
            },
            {
                "line_number": 38,
                "text": "right_gb_width[ i ] specifies the width of the guard band on the right side of the i-th packed region in relative region-wise"
            },
            {
                "line_number": 39,
                "text": "packed picture sample units. When the decoded picture has 4:2:0 or 4:2:2 chroma format, right_gb_width[ i ] shall"
            },
            {
                "line_number": 40,
                "text": "correspond to an even number of luma samples within the cropped decoded picture."
            },
            {
                "line_number": 41,
                "text": "top_gb_height[ i ] specifies the height of the guard band above the i-th packed region in relative region-wise packed"
            },
            {
                "line_number": 42,
                "text": "picture sample units. When the decoded picture has 4:2:0 chroma format, top_gb_height[ i ] shall correspond to an even"
            },
            {
                "line_number": 43,
                "text": "number of luma samples within the cropped decoded picture."
            },
            {
                "line_number": 44,
                "text": "404 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 427,
        "lines": [
            {
                "line_number": 1,
                "text": "bottom_gb_height[ i ] specifies the height of the guard band below the i-th packed region in relative region-wise packed"
            },
            {
                "line_number": 2,
                "text": "picture sample units. When the decoded picture has 4:2:0 chroma format, bottom_gb_height[ i ] shall correspond to an"
            },
            {
                "line_number": 3,
                "text": "even number of luma samples within the cropped decoded picture."
            },
            {
                "line_number": 4,
                "text": "When guard_band_flag[ i ] is equal to 1, left_gb_width[ i ], right_gb_width[ i ], top_gb_height[ i ], or"
            },
            {
                "line_number": 5,
                "text": "bottom_gb_height[ i ] shall be greater than 0."
            },
            {
                "line_number": 6,
                "text": "The i-th packed region as specified by this SEI message shall not overlap with any other packed region specified by the"
            },
            {
                "line_number": 7,
                "text": "same SEI message or any guard band specified by the same SEI message."
            },
            {
                "line_number": 8,
                "text": "The guard bands associated with the i-th packed region, if any, as specified by this SEI message shall not overlap with any"
            },
            {
                "line_number": 9,
                "text": "packed region specified by the same SEI message or any other guard bands specified by the same SEI message."
            },
            {
                "line_number": 10,
                "text": "gb_not_used_for_pred_flag[ i ] equal to 0 specifies that the guard bands may or may not be used in the inter prediction"
            },
            {
                "line_number": 11,
                "text": "process. gb_not_used_for_pred_flag[ i ] equal to 1 specifies that the sample values of the guard bands are not used in the"
            },
            {
                "line_number": 12,
                "text": "inter prediction process."
            },
            {
                "line_number": 13,
                "text": "NOTE 3 – When gb_not_used_for_pred_flag[ i ] is equal to 1, the sample values within guard bands in cropped decoded pictures"
            },
            {
                "line_number": 14,
                "text": "can be rewritten even if the cropped decoded pictures were used as references for inter prediction of subsequent pictures to be"
            },
            {
                "line_number": 15,
                "text": "decoded. For example, the content of a packed region can be seamlessly expanded to its guard band with decoded and re-projected"
            },
            {
                "line_number": 16,
                "text": "samples of another packed region."
            },
            {
                "line_number": 17,
                "text": "gb_type[ i ][ j ] specifies the type of the guard bands for the i-th packed region as follows, with j equal to 0, 1, 2, or 3"
            },
            {
                "line_number": 18,
                "text": "indicating that the semantics below apply to the left, right, top, or bottom edge, respectively, of the packed region:"
            },
            {
                "line_number": 19,
                "text": "– gb_type[ i ][ j ] equal to 0 specifies that the content of the guard bands in relation to the content of the packed regions"
            },
            {
                "line_number": 20,
                "text": "is unspecified. When gb_not_used_for_pred_flag[ i ] is equal to 0, gb_type[ i ][ j ] shall not be equal to 0."
            },
            {
                "line_number": 21,
                "text": "– gb_type[ i ][ j ] equal to 1 specifies that the content of the guard bands suffices for interpolation of sample values at"
            },
            {
                "line_number": 22,
                "text": "sub-pel sample fractional locations within the packed region and less than sample outside of the boundary of the"
            },
            {
                "line_number": 23,
                "text": "packed region."
            },
            {
                "line_number": 24,
                "text": "NOTE 4 – gb_type[ i ][ j ] equal to 1 can be used when the boundary samples of a packed region have been copied horizontally"
            },
            {
                "line_number": 25,
                "text": "or vertically to the guard band."
            },
            {
                "line_number": 26,
                "text": "– gb_type[ i ][ j ] equal to 2 specifies that the content of the guard bands represents actual picture content that is"
            },
            {
                "line_number": 27,
                "text": "spherically adjacent to the content in the packed region and is on the surface of the packed region at quality that"
            },
            {
                "line_number": 28,
                "text": "gradually changes from the picture quality of the packed region to that of the spherically adjacent packed region."
            },
            {
                "line_number": 29,
                "text": "– gb_type[ i ][ j ] equal to 3 specifies that the content of the guard bands represents actual picture content that is"
            },
            {
                "line_number": 30,
                "text": "spherically adjacent to the content in the packed region and is on the surface of the packed region at the picture quality"
            },
            {
                "line_number": 31,
                "text": "of the packed region."
            },
            {
                "line_number": 32,
                "text": "– gb_type[ i ][ j ] values greater than 3 are reserved. Decoders shall ignore the value of gb_type[ i ][ j ] when the value"
            },
            {
                "line_number": 33,
                "text": "is greater than 3."
            },
            {
                "line_number": 34,
                "text": "rwp_gb_reserved_zero_3bits[ i ] shall be equal to 0 in bitstreams conforming to this version of this Specification. Other"
            },
            {
                "line_number": 35,
                "text": "values for rwp_gb_reserved_zero_3bits[ i ] are reserved for future use by ITU-T | ISO/IEC. Decoders shall ignore the value"
            },
            {
                "line_number": 36,
                "text": "of rwp_gb_reserved_zero_3bits[ i ]."
            },
            {
                "line_number": 37,
                "text": "The variables NumPackedRegions, PackedRegionLeft[ n ], PackedRegionTop[ n ], PackedRegionWidth[ n ],"
            },
            {
                "line_number": 38,
                "text": "PackedRegionHeight[ n ], ProjRegionLeft[ n ], ProjRegionTop[ n ], ProjRegionWidth[ n ], ProjRegionHeight[ n ], and"
            },
            {
                "line_number": 39,
                "text": "TrasnformType[ n ] are derived as follows:"
            },
            {
                "line_number": 40,
                "text": "- For n in the range of 0 to num_packed_regions − 1, inclusive, the following applies:"
            },
            {
                "line_number": 41,
                "text": "o PackedRegionLeft[ n ] is set equal to packed_region_left[ n ]."
            },
            {
                "line_number": 42,
                "text": "o PackedRegionTop[ n ] is set equal to packed_region_top[ n ]."
            },
            {
                "line_number": 43,
                "text": "o PackedRegionWidth[ n ] is set equal to packed_region_width[ n ]."
            },
            {
                "line_number": 44,
                "text": "o PackedRegionHeight[ n ] is set equal to packed_region_height[ n ]."
            },
            {
                "line_number": 45,
                "text": "o ProjRegionLeft[ n ] is set equal to proj_region_left[ n ]."
            },
            {
                "line_number": 46,
                "text": "o ProjRegionTop[ n ] is set equal to proj_region_top[ n ]."
            },
            {
                "line_number": 47,
                "text": "o ProjRegionWidth[ n ] is set equal to proj_region_width[ n ]."
            },
            {
                "line_number": 48,
                "text": "o ProjRegionHeight[ n ] is set equal to proj_region_height[ n ]."
            },
            {
                "line_number": 49,
                "text": "o TransformType[ n ] is set equal to transform_type[ n ]."
            },
            {
                "line_number": 50,
                "text": "- If constituent_picture_matching_flag is equal to 0, the following applies:"
            },
            {
                "line_number": 51,
                "text": "Rec. ITU-T H.264 (06/2019) 405"
            }
        ]
    },
    {
        "page_number": 428,
        "lines": [
            {
                "line_number": 1,
                "text": "o NumPackedRegions is set equal to num_packed_regions."
            },
            {
                "line_number": 2,
                "text": "- Otherwise (constituent_picture_matching_flag is equal to 1), the following applies:"
            },
            {
                "line_number": 3,
                "text": "o NumPackedRegions is set equal to 2 * num_packed_regions."
            },
            {
                "line_number": 4,
                "text": "o When TopBottomFlag is equal to 1, the following applies:"
            },
            {
                "line_number": 5,
                "text": "o projLeftOffset and packedLeftOffset are both set equal to 0."
            },
            {
                "line_number": 6,
                "text": "o projTopOffset is set equal to proj_picture_height / 2 and packedTopOffset is set equal to"
            },
            {
                "line_number": 7,
                "text": "packed_picture_height / 2."
            },
            {
                "line_number": 8,
                "text": "o When SideBySideFlag is equal to 1, the following applies:"
            },
            {
                "line_number": 9,
                "text": "o projLeftOffset is set equal to proj_picture_width / 2 and packedLeftOffset is set equal to"
            },
            {
                "line_number": 10,
                "text": "packed_picture_width / 2."
            },
            {
                "line_number": 11,
                "text": "o projTopOffset and packedTopOffset are both set equal to 0."
            },
            {
                "line_number": 12,
                "text": "o For n in the range of NumPackedRegions / 2 to NumPackedRegions − 1, inclusive, the following"
            },
            {
                "line_number": 13,
                "text": "applies:"
            },
            {
                "line_number": 14,
                "text": " nIdx is set equal to n − NumPackedRegions / 2."
            },
            {
                "line_number": 15,
                "text": " PackedRegionLeft[ n ] is set equal to packed_region_left[ nIdx ] + packedLeftOffset."
            },
            {
                "line_number": 16,
                "text": " PackedRegionTop[ n ] is set equal to packed_region_top[ nIdx ] + packedTopOffset."
            },
            {
                "line_number": 17,
                "text": " PackedRegionWidth[ n ] is set equal to packed_region_width[ nIdx ]."
            },
            {
                "line_number": 18,
                "text": " PackedRegionHeight[ n ] is set equal to packed_region_height[ nIdx ]."
            },
            {
                "line_number": 19,
                "text": " ProjRegionLeft[ n ] is set equal to proj_region_left[ nIdx ] + projLeftOffset."
            },
            {
                "line_number": 20,
                "text": " ProjRegionTop[ n ] is set equal to proj_region_top[ nIdx ] + projTopOffset."
            },
            {
                "line_number": 21,
                "text": " ProjRegionWidth[ n ] is set equal to proj_region_width[ nIdx ]."
            },
            {
                "line_number": 22,
                "text": " ProjRegionHeight[ n ] is set equal to proj_region_height[ nIdx ]."
            },
            {
                "line_number": 23,
                "text": " TransformType[ n ] is set equal to transform_type[ nIdx ]."
            },
            {
                "line_number": 24,
                "text": "For each value of n in the range of 0 to NumPackedRegions − 1, inclusive, the values of ProjRegionWidth[ n ],"
            },
            {
                "line_number": 25,
                "text": "ProjRegionHeight[ n ], ProjRegionTop[ n ], and ProjRegionLeft[ n ] are constrained as follows:"
            },
            {
                "line_number": 26,
                "text": "- ProjRegionWidth[ n ] shall be in the range of 1 to proj_picture_width, inclusive."
            },
            {
                "line_number": 27,
                "text": "- ProjRegionHeight[ n ] shall be in the range of 1 to proj_picture_height, inclusive."
            },
            {
                "line_number": 28,
                "text": "- ProjRegionLeft[ n ] shall be in the range of 0 to proj_picture_width − 1, inclusive."
            },
            {
                "line_number": 29,
                "text": "- ProjRegionTop[ n ] shall be in the range of 0 to proj_picture_height − 1, inclusive."
            },
            {
                "line_number": 30,
                "text": "- If ProjRegionTop[ n ] is less than proj_picture_height / VerDiv1, the sum of ProjRegionTop[ n ] and"
            },
            {
                "line_number": 31,
                "text": "ProjRegionHeight[ n ] shall be less than or equal to proj_picture_height / VerDiv1. Otherwise, the sum of"
            },
            {
                "line_number": 32,
                "text": "ProjRegionTop[ n ] and ProjRegionHeight[ n ] shall be less than or equal to proj_picture_height / VerDiv1 * 2."
            },
            {
                "line_number": 33,
                "text": "For each value of n in the range of 0 to NumPackedRegions − 1, inclusive, the values of PackedRegionWidth[ n ],"
            },
            {
                "line_number": 34,
                "text": "PackedRegionHeight[ n ], PackedRegionTop[ n ], and PackedRegionLeft[ n ] are constrained as follows:"
            },
            {
                "line_number": 35,
                "text": "- PackedRegionWidth[ n ] shall be in the range of 1 to packed_picture_width, inclusive."
            },
            {
                "line_number": 36,
                "text": "- ProjRegionHeight[ n ] shall be in the range of 1 to packed_picture_height, inclusive."
            },
            {
                "line_number": 37,
                "text": "- PackedRegionLeft[ n ] shall be in the range of 0 to packed_picture_width − 1, inclusive."
            },
            {
                "line_number": 38,
                "text": "- PackedRegionTop[ n ] shall be in the range of 0 to packed_picture_height − 1, inclusive."
            },
            {
                "line_number": 39,
                "text": "- If PackedRegionLeft[ n ] is less than packed_picture_width / HorDiv1, the sum of PackedRegionLeft[ n ] and"
            },
            {
                "line_number": 40,
                "text": "PackedRegionWidth[ n ] shall be less than or equal to packed_picture_width / HorDiv1. Otherwise, the sum of"
            },
            {
                "line_number": 41,
                "text": "PackedRegionLeft[ n ] and PackedRegionWidth[ n ] shall be less than or equal to"
            },
            {
                "line_number": 42,
                "text": "packed_picture_width / HorDiv1 * 2."
            },
            {
                "line_number": 43,
                "text": "- If PackedRegionTop[ n ] is less than packed_picture_height / VerDiv1, the sum of PackedRegionTop[ n ] and"
            },
            {
                "line_number": 44,
                "text": "PackedRegionHeight[ n ] shall be less than or equal to packed_picture_height / VerDiv1. Otherwise, the sum of"
            },
            {
                "line_number": 45,
                "text": "406 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 429,
        "lines": [
            {
                "line_number": 1,
                "text": "PackedRegionTop[ n ] and PackedRegionHeight[ n ] shall be less than or equal to"
            },
            {
                "line_number": 2,
                "text": "packed_picture_height / VerDiv1 * 2."
            },
            {
                "line_number": 3,
                "text": "- When chroma_format_idc is equal to 1 (4:2:0 chroma format) or 2 (4:2:2 chroma format), PackedRegionLeft[ n ]"
            },
            {
                "line_number": 4,
                "text": "shall correspond to an even horizontal coordinate value of luma sample units, and PackedRegionWidth[ n ] shall"
            },
            {
                "line_number": 5,
                "text": "correspond to an even number of luma samples, both within the decoded picture."
            },
            {
                "line_number": 6,
                "text": "- When chroma_format_idc is equal to 1 (4:2:0 chroma format), PackedRegionTop[ n ] shall correspond to an"
            },
            {
                "line_number": 7,
                "text": "even vertical coordinate value of luma sample units, and ProjRegionHeight[ n ] shall correspond to an even"
            },
            {
                "line_number": 8,
                "text": "number of luma samples, both within the decoded picture."
            },
            {
                "line_number": 9,
                "text": "D.2.35.5 Omnidirectional viewport SEI message semantics"
            },
            {
                "line_number": 10,
                "text": "The omnidirectional viewport SEI message specifies the coordinates of one or more regions of spherical-coordinate"
            },
            {
                "line_number": 11,
                "text": "geometry, bounded by four great circles, corresponding to viewports recommended for display when the user does not"
            },
            {
                "line_number": 12,
                "text": "have control of the viewing orientation or has released control of the viewing orientation."
            },
            {
                "line_number": 13,
                "text": "When an effectively applicable frame packing arrangement SEI message, as specified in clause D.2.35.1 or D.2.35.2, that"
            },
            {
                "line_number": 14,
                "text": "applies to the picture is present, the information indicated by the omnidirectional viewport SEI message applies to both"
            },
            {
                "line_number": 15,
                "text": "views."
            },
            {
                "line_number": 16,
                "text": "omni_viewport_id contains an identifying number that may be used to identify the purpose of the one or more"
            },
            {
                "line_number": 17,
                "text": "recommended viewport regions."
            },
            {
                "line_number": 18,
                "text": "omni_viewport_id equal to 0 indicates that the recommended viewports are per \"director’s cut\", i.e., a viewport suggested"
            },
            {
                "line_number": 19,
                "text": "according to the creative intent of the content author or content provider. omni_viewport_id equal to 1 indicates that the"
            },
            {
                "line_number": 20,
                "text": "recommended viewports are selected based on measurements of viewing statistics."
            },
            {
                "line_number": 21,
                "text": "Values of omni_viewport_id from 2 to 511, inclusive, may be used as determined by the application. Values of"
            },
            {
                "line_number": 22,
                "text": "omni_viewport_id from 512 to 1023 are reserved for future use by ITU-T | ISO/IEC. Decoders encountering a value of"
            },
            {
                "line_number": 23,
                "text": "omni_viewport_id in the range of 512 to 1023, inclusive, shall ignore it."
            },
            {
                "line_number": 24,
                "text": "omni_viewport_cancel_flag equal to 1 indicates that the SEI message cancels the persistence of any previous"
            },
            {
                "line_number": 25,
                "text": "omnidirectional viewport SEI message in output order. omni_viewport_cancel_flag equal to 0 indicates that"
            },
            {
                "line_number": 26,
                "text": "omnidirectional viewport information follows."
            },
            {
                "line_number": 27,
                "text": "omni_viewport_persistence_flag specifies the persistence of the omnidirectional viewport SEI message."
            },
            {
                "line_number": 28,
                "text": "omni_viewport_persistence_flag equal to 0 specifies that the omnidirectional viewport SEI message applies to the current"
            },
            {
                "line_number": 29,
                "text": "decoded picture only."
            },
            {
                "line_number": 30,
                "text": "Let picA be the current picture. omni_viewport_persistence_flag equal to 1 specifies that the omnidirectional viewport SEI"
            },
            {
                "line_number": 31,
                "text": "message persists in output order until one or more of the following conditions are true:"
            },
            {
                "line_number": 32,
                "text": "– A new coded video sequence (CVS) begins."
            },
            {
                "line_number": 33,
                "text": "– The bitstream ends."
            },
            {
                "line_number": 34,
                "text": "– A picture picB in an access unit containing an omnidirectional viewport SEI message is output having"
            },
            {
                "line_number": 35,
                "text": "PicOrderCnt( picB ) greater than PicOrderCnt( picA )."
            },
            {
                "line_number": 36,
                "text": "When an equirectangular projection SEI message with erp_cancel_flag equal to 0 or a cubemap projection SEI message"
            },
            {
                "line_number": 37,
                "text": "with cmp_cancel_flag equal to 0 is not present in the CVS that applies to the current picture and precedes the"
            },
            {
                "line_number": 38,
                "text": "omnidirectional viewport SEI message in decoding order, an omnidirectional viewport SEI message with"
            },
            {
                "line_number": 39,
                "text": "omni_viewport_cancel_flag equal to 0 shall not be present in the CVS that applies to the current picture. Decoders shall"
            },
            {
                "line_number": 40,
                "text": "ignore omnidirectional viewport SEI messages with omni_viewport_cancel_flag equal to 0 that do not follow, in decoding"
            },
            {
                "line_number": 41,
                "text": "order, an equirectangular projection SEI message with erp_cancel_flag equal to 0 or a cubemap projection SEI message"
            },
            {
                "line_number": 42,
                "text": "with cmp_cancel_flag equal to 0 in the CVS that applies to the current picture."
            },
            {
                "line_number": 43,
                "text": "omni_viewport_cnt_minus1 plus 1 specifies the number of recommended viewport regions that are indicated by the SEI"
            },
            {
                "line_number": 44,
                "text": "message."
            },
            {
                "line_number": 45,
                "text": "When omni_viewport_cnt_minus1 is greater than 0 and there is no information provided by external means not specified"
            },
            {
                "line_number": 46,
                "text": "in this Specification on which recommended viewport is suggested to be displayed, the following applies:"
            },
            {
                "line_number": 47,
                "text": " When omni_viewport_id is equal to 0 or 1, the 0-th recommended viewport is suggested to be displayed when"
            },
            {
                "line_number": 48,
                "text": "the user does not have control of the viewing orientation or has released control of the viewing orientation."
            },
            {
                "line_number": 49,
                "text": " When omni_viewport_id is equal to 0, between any two recommended viewports per director's cut, the i-th"
            },
            {
                "line_number": 50,
                "text": "recommended viewport has higher priority than the j-th recommended viewport for any values of i and j when i"
            },
            {
                "line_number": 51,
                "text": "is less than j. The 0-th recommended viewport per director's cut has the highest priority."
            },
            {
                "line_number": 52,
                "text": "Rec. ITU-T H.264 (06/2019) 407"
            }
        ]
    },
    {
        "page_number": 430,
        "lines": [
            {
                "line_number": 1,
                "text": " When omni_viewport_id is equal to 1, between any two recommended viewports, the i-th recommended viewport"
            },
            {
                "line_number": 2,
                "text": "has higher popularity, among some selection of candidate viewports, than the j-th recommended viewport for any"
            },
            {
                "line_number": 3,
                "text": "values of i and j when i is less than j. The 0-th most-viewed recommended viewport has the highest popularity."
            },
            {
                "line_number": 4,
                "text": "The selection of the candidate viewports is outside the scope of this Specification."
            },
            {
                "line_number": 5,
                "text": "omni_viewport_azimuth_centre[ i ] and omni_viewport_elevation_centre[ i ] indicate the centre of the i-th"
            },
            {
                "line_number": 6,
                "text": "recommended viewport region, in units of 2−16 degrees relative to the global coordinate axes. The value of"
            },
            {
                "line_number": 7,
                "text": "omni_viewport_azimuth_centre[ i ] shall be in the range of −180 * 216 (i.e., −11 796 480) to 180 * 216 − 1"
            },
            {
                "line_number": 8,
                "text": "(i.e., 11 796 479), inclusive. The value of omni_viewport_elevation_centre[ i ] shall be in the range of −90 * 216"
            },
            {
                "line_number": 9,
                "text": "(i.e., −5 898 240) to 90 * 216 (i.e., 5 898 240), inclusive."
            },
            {
                "line_number": 10,
                "text": "omni_viewport_tilt_centre[ i ] indicates the tilt angle of the i-th recommended viewport region, in units of 2−16 degrees."
            },
            {
                "line_number": 11,
                "text": "The value of omni_viewport_tilt_centre[ i ] shall be in the range of −180 * 216 (i.e., −11 796 480) to 216 − 1"
            },
            {
                "line_number": 12,
                "text": "(i.e., 11 796 479), inclusive."
            },
            {
                "line_number": 13,
                "text": "omni_viewport_hor_range[ i ] indicates the azimuth range of the i-th recommended viewport region, in units of 2−16"
            },
            {
                "line_number": 14,
                "text": "degrees. The value of omni_viewport_hor_range[ i ] shall be in the range of 1 to 360 * 216 (i.e., 23 592 960), inclusive."
            },
            {
                "line_number": 15,
                "text": "omni_viewport_ver_range[ i ] indicates the elevation range of the i-th recommended viewport region, in units of 2−16"
            },
            {
                "line_number": 16,
                "text": "degrees. The value of omni_viewport_ver_range[ i ] shall be in the range of 1 to 180 * 216 (i.e., 11 796 480), inclusive."
            },
            {
                "line_number": 17,
                "text": "D.2.35.6 Sample location remapping process"
            },
            {
                "line_number": 18,
                "text": "D.2.35.6.1 General"
            },
            {
                "line_number": 19,
                "text": "To remap colour sample locations of a region-wise packed picture to a unit sphere, the following ordered steps are applied:"
            },
            {
                "line_number": 20,
                "text": "– A region-wise packed picture is obtained as the cropped decoded picture by decoding a coded picture. For purposes"
            },
            {
                "line_number": 21,
                "text": "of interpretation of chroma samples, the input to the indicated remapping process is the set of decoded sample values"
            },
            {
                "line_number": 22,
                "text": "after applying an (unspecified) upsampling conversion process to the 4:4:4 colour sampling format as necessary when"
            },
            {
                "line_number": 23,
                "text": "chroma_format_idc is equal to 1 (4:2:0 chroma format) or 2 (4:2:2 chroma format). This (unspecified) upsampling"
            },
            {
                "line_number": 24,
                "text": "process should account for the relative positioning relationship between the luma and chroma samples as indicated"
            },
            {
                "line_number": 25,
                "text": "by chroma_sample_loc_type_top_field and chroma_sample_loc_type_bottom_field, when present."
            },
            {
                "line_number": 26,
                "text": "– If region-wise packing is indicated, the sample locations of the region-wise packed picture are converted to sample"
            },
            {
                "line_number": 27,
                "text": "locations of the respective projected picture as specified in clause D.2.35.6.4. Otherwise, the projected picture is"
            },
            {
                "line_number": 28,
                "text": "identical to the region-wise packed picture."
            },
            {
                "line_number": 29,
                "text": "– If frame packing is indicated, the sample locations of the projected picture are converted to sample locations of the"
            },
            {
                "line_number": 30,
                "text": "respective constituent picture of the projected picture, as specified in clause D.2.35.6.6. Otherwise, the constituent"
            },
            {
                "line_number": 31,
                "text": "picture of the projected picture is identical to the projected picture."
            },
            {
                "line_number": 32,
                "text": "– The sample locations of a constituent picture of the projected picture are converted to sphere coordinates relative to"
            },
            {
                "line_number": 33,
                "text": "the local coordinate axes, as specified in clause D.2.35.6.2."
            },
            {
                "line_number": 34,
                "text": "– If rotation is indicated, the sphere coordinates relative to the local coordinate axes are converted to sphere coordinates"
            },
            {
                "line_number": 35,
                "text": "relative to the global coordinate axes, as specified in clause D.2.35.6.3. Otherwise, the global coordinate axes are"
            },
            {
                "line_number": 36,
                "text": "identical to the local coordinate axes."
            },
            {
                "line_number": 37,
                "text": "The overall process for mapping of luma sample locations within a region-wise packed picture to sphere coordinates"
            },
            {
                "line_number": 38,
                "text": "relative to the global coordinate axes is normatively specified in clause D.2.35.6.5."
            },
            {
                "line_number": 39,
                "text": "For each region-wise packed picture corresponding to a decoded picture, the following applies:"
            },
            {
                "line_number": 40,
                "text": "– When an equirectangular projection SEI message with erp_cancel_flag equal to 0 that applies to the picture is present,"
            },
            {
                "line_number": 41,
                "text": "ErpFlag is set equal to 1, and CmpFlag is set equal to 0."
            },
            {
                "line_number": 42,
                "text": "– When a cubemap projection SEI message with cmp_cancel_flag equal to 0 that applies to the picture is present,"
            },
            {
                "line_number": 43,
                "text": "CmpFlag is set equal to 1, and ErpFlag is set equal to 0."
            },
            {
                "line_number": 44,
                "text": "– If a sphere rotation SEI message with sphere_rotation_cancel_flag equal to 0 that applies to the picture is present,"
            },
            {
                "line_number": 45,
                "text": "RotationFlag is set equal to 1, and RotationYaw, RotationPitch, and RotationRoll are set equal to yaw_rotation ÷ 216,"
            },
            {
                "line_number": 46,
                "text": "pitch_rotation ÷ 216, and roll_rotation ÷ 216, respectively."
            },
            {
                "line_number": 47,
                "text": "– Otherwise, RotationFlag is set equal to 0."
            },
            {
                "line_number": 48,
                "text": "– If a frame packing arrangement SEI message with frame_packing_arrangement_cancel_flag equal to 0 that applies to"
            },
            {
                "line_number": 49,
                "text": "the picture is not present, StereoFlag, TopBottomFlag, and SideBySideFlag are all set equal to 0, HorDiv1 is set equal"
            },
            {
                "line_number": 50,
                "text": "to 1, and VerDiv1 is set equal to 1."
            },
            {
                "line_number": 51,
                "text": "– Otherwise, the following applies:"
            },
            {
                "line_number": 52,
                "text": "408 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 431,
        "lines": [
            {
                "line_number": 1,
                "text": "– StereoFlag is set equal to 1."
            },
            {
                "line_number": 2,
                "text": "– If the value of frame_packing_arrangement_type of the frame packing arrangement SEI message is equal to 3,"
            },
            {
                "line_number": 3,
                "text": "TopBottomFlag is set equal to 0, SideBySideFlag is set equal to 1, HorDiv1 is set equal to 2 and VerDiv1 is set"
            },
            {
                "line_number": 4,
                "text": "equal to 1."
            },
            {
                "line_number": 5,
                "text": "– Otherwise, if the value of frame_packing_arrangement_type of the frame packing arrangement SEI message is"
            },
            {
                "line_number": 6,
                "text": "equal to 4, TopBottomFlag is set equal to 1, SideBySideFlag is set equal to 0, HorDiv1 is set equal to 1, and"
            },
            {
                "line_number": 7,
                "text": "VerDiv1 is set equal to 2."
            },
            {
                "line_number": 8,
                "text": "– Otherwise, TopBottomFlag is set equal to 0, SideBySideFlag is set equal to 0, HorDiv1 is set equal to 1, and"
            },
            {
                "line_number": 9,
                "text": "VerDiv1 is set equal to 1."
            },
            {
                "line_number": 10,
                "text": "– If a region-wise packing SEI message with rwp_cancel_flag equal to 0 that applies to the picture is not present,"
            },
            {
                "line_number": 11,
                "text": "RegionWisePackingFlag is set equal to 0, and ConstituentPicWidth and ConstituentPicHeight are set to be equal to"
            },
            {
                "line_number": 12,
                "text": "cropPicWidth / HorDiv1 and cropPicHeight / VerDiv1, respectively, where cropPicWidth and cropPicHeight are the"
            },
            {
                "line_number": 13,
                "text": "width and height, respectively, of the cropped decoded picture."
            },
            {
                "line_number": 14,
                "text": "– Otherwise, RegionWisePackingFlag is set equal to 1, and ConstituentPicWidth and ConstituentPicHeight are set equal"
            },
            {
                "line_number": 15,
                "text": "to proj_picture_width / HorDiv1 and proj_picture_height / VerDiv1, respectively."
            },
            {
                "line_number": 16,
                "text": "D.2.35.6.2 Projection for a sample location"
            },
            {
                "line_number": 17,
                "text": "Inputs to this clause are:"
            },
            {
                "line_number": 18,
                "text": "– pictureWidth and pictureHeight, which are the width and height, respectively, of a monoscopic projected luma picture,"
            },
            {
                "line_number": 19,
                "text": "in relative projected picture sample units, and"
            },
            {
                "line_number": 20,
                "text": "– the centre point of a sample location (hPos, vPos) along the horizontal and vertical axes, respectively, in relative"
            },
            {
                "line_number": 21,
                "text": "projected picture sample units, where hPos and vPos may have non-integer real values."
            },
            {
                "line_number": 22,
                "text": "Outputs of this clause are:"
            },
            {
                "line_number": 23,
                "text": "– sphere coordinates (ϕ, θ) for the sample location in degrees relative to the coordinate axes specified in clause"
            },
            {
                "line_number": 24,
                "text": "D.2.35.6.1."
            },
            {
                "line_number": 25,
                "text": "The projection for a sample location is derived as follows:"
            },
            {
                "line_number": 26,
                "text": "– If ErpFlag is equal to 1, the following applies:"
            },
            {
                "line_number": 27,
                "text": "– If RegionWisePackingFlag is equal to 0 and erp_padding_flag is equal to 1, the following applies:"
            },
            {
                "line_number": 28,
                "text": "hPos′ = hPos − left_gb_erp_width (D-45)"
            },
            {
                "line_number": 29,
                "text": "pictureWidth = pictureWidth − left_gb_erp_width − right_gb_erp_width"
            },
            {
                "line_number": 30,
                "text": "– Otherwise, the following applies:"
            },
            {
                "line_number": 31,
                "text": "hPos′ = hPos (D-46)"
            },
            {
                "line_number": 32,
                "text": "– The following applies:"
            },
            {
                "line_number": 33,
                "text": "ϕ = 180 − hPos′ * ( 360 ÷ pictureWidth ) (D-47)"
            },
            {
                "line_number": 34,
                "text": "θ = 90 − vPos * ( 180 ÷ pictureHeight )"
            },
            {
                "line_number": 35,
                "text": "– Otherwise (CmpFlag is equal to 1), it is a requirement of bitstream conformance that pictureWidth shall be a multiple"
            },
            {
                "line_number": 36,
                "text": "of 3 and pictureHeight shall be a multiple of 2, and that pictureWidth / 3 shall be equal to pictureHeight / 2, and the"
            },
            {
                "line_number": 37,
                "text": "following applies:"
            },
            {
                "line_number": 38,
                "text": "lw = pictureWidth / 3"
            },
            {
                "line_number": 39,
                "text": "lh = pictureHeight / 2"
            },
            {
                "line_number": 40,
                "text": "w = Floor( hPos ÷ lw )"
            },
            {
                "line_number": 41,
                "text": "h = Floor( vPos ÷ lh )"
            },
            {
                "line_number": 42,
                "text": "tmpHorVal = hPos − w * lw"
            },
            {
                "line_number": 43,
                "text": "tmpVerVal = vPos − h * lh"
            },
            {
                "line_number": 44,
                "text": "hPos′ = −( 2 * tmpHorVal ÷ lw ) + 1"
            },
            {
                "line_number": 45,
                "text": "vPos′ = −( 2 * tmpVerVal ÷ lh ) + 1"
            },
            {
                "line_number": 46,
                "text": "if( w = = 1 && h = = 0 ) { /* positive x front face */"
            },
            {
                "line_number": 47,
                "text": "x = 1.0"
            },
            {
                "line_number": 48,
                "text": "y = hPos′"
            },
            {
                "line_number": 49,
                "text": "z = vPos′"
            },
            {
                "line_number": 50,
                "text": "} else if( w = = 1 && h = = 1 ) { /* negative x back face */"
            },
            {
                "line_number": 51,
                "text": "x = −1.0"
            },
            {
                "line_number": 52,
                "text": "Rec. ITU-T H.264 (06/2019) 409"
            }
        ]
    },
    {
        "page_number": 432,
        "lines": [
            {
                "line_number": 1,
                "text": "y = −vPos′"
            },
            {
                "line_number": 2,
                "text": "z = −hPos′"
            },
            {
                "line_number": 3,
                "text": "} else if( w = = 2 && h = = 1 ) { /* positive z top face */ (D-48)"
            },
            {
                "line_number": 4,
                "text": "x = −hPos′"
            },
            {
                "line_number": 5,
                "text": "y = −vPos′"
            },
            {
                "line_number": 6,
                "text": "z = 1.0"
            },
            {
                "line_number": 7,
                "text": "} else if( w = = 0 && h = = 1 ) { /* negative z bottom face */"
            },
            {
                "line_number": 8,
                "text": "x = hPos′"
            },
            {
                "line_number": 9,
                "text": "y = −vPos′"
            },
            {
                "line_number": 10,
                "text": "z = −1.0"
            },
            {
                "line_number": 11,
                "text": "} else if( w = = 0 && h = = 0 ) { /* positive y left face */"
            },
            {
                "line_number": 12,
                "text": "x = −hPos′"
            },
            {
                "line_number": 13,
                "text": "y = 1.0"
            },
            {
                "line_number": 14,
                "text": "z = vPos′"
            },
            {
                "line_number": 15,
                "text": "} else { /* ( w = = 2 && h = = 0 ), negative y right face */"
            },
            {
                "line_number": 16,
                "text": "x = hPos′"
            },
            {
                "line_number": 17,
                "text": "y = −1.0"
            },
            {
                "line_number": 18,
                "text": "z = vPos′"
            },
            {
                "line_number": 19,
                "text": "}"
            },
            {
                "line_number": 20,
                "text": "ϕ = Atan2( y, x ) * 180 ÷ π"
            },
            {
                "line_number": 21,
                "text": "θ = Asin( z ÷ Sqrt( x2 + y2 + z2 ) ) * 180 ÷ π"
            },
            {
                "line_number": 22,
                "text": "D.2.35.6.3 Conversion from the local coordinate axes to the global coordinate axes"
            },
            {
                "line_number": 23,
                "text": "Inputs to this clause are:"
            },
            {
                "line_number": 24,
                "text": "– rotation_yaw (α ), rotation_pitch (β ), rotation_roll (γ ), all in units of degrees, and"
            },
            {
                "line_number": 25,
                "text": "d d d"
            },
            {
                "line_number": 26,
                "text": "– sphere coordinates (ϕ , θ ) relative to the local coordinate axes."
            },
            {
                "line_number": 27,
                "text": "d d"
            },
            {
                "line_number": 28,
                "text": "Outputs of this clause are:"
            },
            {
                "line_number": 29,
                "text": "– sphere coordinates (ϕ′, θ′) relative to the global coordinate axes."
            },
            {
                "line_number": 30,
                "text": "The outputs are derived as follows:"
            },
            {
                "line_number": 31,
                "text": "ϕ = ϕ * π ÷ 180"
            },
            {
                "line_number": 32,
                "text": "d"
            },
            {
                "line_number": 33,
                "text": "θ = θ * π ÷ 180"
            },
            {
                "line_number": 34,
                "text": "d"
            },
            {
                "line_number": 35,
                "text": "α = α * π ÷ 180"
            },
            {
                "line_number": 36,
                "text": "d"
            },
            {
                "line_number": 37,
                "text": "β = β * π ÷ 180"
            },
            {
                "line_number": 38,
                "text": "d"
            },
            {
                "line_number": 39,
                "text": "γ = γ * π ÷ 180"
            },
            {
                "line_number": 40,
                "text": "d"
            },
            {
                "line_number": 41,
                "text": "x = Cos( ϕ ) * Cos( θ )"
            },
            {
                "line_number": 42,
                "text": "1"
            },
            {
                "line_number": 43,
                "text": "y = Sin( ϕ ) * Cos( θ )"
            },
            {
                "line_number": 44,
                "text": "1"
            },
            {
                "line_number": 45,
                "text": "z = Sin( θ )"
            },
            {
                "line_number": 46,
                "text": "1"
            },
            {
                "line_number": 47,
                "text": "x = Cos( β ) * Cos ( γ ) * x − Cos( β ) * Sin( γ ) * y + Sin( β ) * z (D-49)"
            },
            {
                "line_number": 48,
                "text": "2 1 1 1"
            },
            {
                "line_number": 49,
                "text": "y = ( Cos( α ) * Sin( γ ) + Sin( α ) * Sin( β ) * Cos( γ ) ) * x +"
            },
            {
                "line_number": 50,
                "text": "2 1"
            },
            {
                "line_number": 51,
                "text": "( Cos( α ) * Cos( γ ) − Sin( α ) * Sin( β ) * Sin( γ ) ) * y −"
            },
            {
                "line_number": 52,
                "text": "1"
            },
            {
                "line_number": 53,
                "text": "Sin( α ) * Cos( β ) * z"
            },
            {
                "line_number": 54,
                "text": "1"
            },
            {
                "line_number": 55,
                "text": "z = ( Sin( α ) * Sin( γ ) − Cos( α ) * Sin( β ) * Cos( γ ) ) * x +"
            },
            {
                "line_number": 56,
                "text": "2 1"
            },
            {
                "line_number": 57,
                "text": "( Sin( α ) * Cos( γ ) + Cos( α ) * Sin( β ) * Sin( γ ) ) * y +"
            },
            {
                "line_number": 58,
                "text": "1"
            },
            {
                "line_number": 59,
                "text": "Cos( α ) * Cos( β ) * z"
            },
            {
                "line_number": 60,
                "text": "1"
            },
            {
                "line_number": 61,
                "text": "ϕ′ = Atan2( y , x ) * 180 ÷ π"
            },
            {
                "line_number": 62,
                "text": "2 2"
            },
            {
                "line_number": 63,
                "text": "θ′ = Asin( z ) * 180 ÷ π"
            },
            {
                "line_number": 64,
                "text": "2"
            },
            {
                "line_number": 65,
                "text": "D.2.35.6.4 Conversion of sample locations for rectangular region-wise packing"
            },
            {
                "line_number": 66,
                "text": "Inputs to this clause are:"
            },
            {
                "line_number": 67,
                "text": "– sample location (x, y) within the packed region, where x and y are in relative packed picture sample units, while the"
            },
            {
                "line_number": 68,
                "text": "sample location is at an integer sample location within the packed picture,"
            },
            {
                "line_number": 69,
                "text": "– the width and the height (projRegWidth, projRegHeight) of the projected region, in relative projected picture sample"
            },
            {
                "line_number": 70,
                "text": "units,"
            },
            {
                "line_number": 71,
                "text": "– the width and the height (packedRegWidth, packedRegHeight) of the packed region, in relative packed picture sample"
            },
            {
                "line_number": 72,
                "text": "units,"
            },
            {
                "line_number": 73,
                "text": "– transform type (transformType), and"
            },
            {
                "line_number": 74,
                "text": "410 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 433,
        "lines": [
            {
                "line_number": 1,
                "text": "– offset values for the sampling position (offsetX, offsetY) in the range of 0, inclusive, to 1, exclusive, in horizontal"
            },
            {
                "line_number": 2,
                "text": "and vertical relative packed picture sample units, respectively."
            },
            {
                "line_number": 3,
                "text": "NOTE: offsetX and offsetY both equal to 0.5 indicate a sampling position that is in the centre point of a sample in packed"
            },
            {
                "line_number": 4,
                "text": "picture sample units."
            },
            {
                "line_number": 5,
                "text": "Outputs of this clause are:"
            },
            {
                "line_number": 6,
                "text": "– the centre point of the sample location (hPos, vPos) within the projected region in relative projected picture sample"
            },
            {
                "line_number": 7,
                "text": "units, where hPos and vPos may have non-integer real values."
            },
            {
                "line_number": 8,
                "text": "The outputs are derived as follows:"
            },
            {
                "line_number": 9,
                "text": "if( transformType = = 0 | | transformType = = 1 | | transformType = = 2 | | transformType = = 3 ) {"
            },
            {
                "line_number": 10,
                "text": "horRatio = projRegWidth ÷ packedRegWidth"
            },
            {
                "line_number": 11,
                "text": "verRatio = projRegHeight ÷ packedRegHeight"
            },
            {
                "line_number": 12,
                "text": "} else if( transformType = = 4 | | transformType = = 5 | | transformType = = 6 | |"
            },
            {
                "line_number": 13,
                "text": "transformType = = 7 ) {"
            },
            {
                "line_number": 14,
                "text": "horRatio = projRegWidth ÷ packedRegHeight"
            },
            {
                "line_number": 15,
                "text": "verRatio = projRegHeight ÷ packedRegWidth"
            },
            {
                "line_number": 16,
                "text": "}"
            },
            {
                "line_number": 17,
                "text": "if( transformType = = 0 ) {"
            },
            {
                "line_number": 18,
                "text": "hPos = horRatio * ( x + offsetX )"
            },
            {
                "line_number": 19,
                "text": "vPos = verRatio * ( y + offsetY )"
            },
            {
                "line_number": 20,
                "text": "} else if( transformType = = 1 ) {"
            },
            {
                "line_number": 21,
                "text": "hPos = horRatio * ( packedRegWidth − x − offsetX )"
            },
            {
                "line_number": 22,
                "text": "vPos = verRatio * ( y + offsetY )"
            },
            {
                "line_number": 23,
                "text": "} else if( transformType = = 2 ) {"
            },
            {
                "line_number": 24,
                "text": "hPos = horRatio * ( packedRegWidth − x − offsetX )"
            },
            {
                "line_number": 25,
                "text": "vPos = verRatio * ( packedRegHeight − y − offsetY ) (D-50)"
            },
            {
                "line_number": 26,
                "text": "} else if( transformType = = 3 ) {"
            },
            {
                "line_number": 27,
                "text": "hPos = horRatio * ( x + offsetX )"
            },
            {
                "line_number": 28,
                "text": "vPos = verRatio * ( packedRegHeight − y − offsetY )"
            },
            {
                "line_number": 29,
                "text": "} else if( transformType = = 4 ) {"
            },
            {
                "line_number": 30,
                "text": "hPos = horRatio * ( y + offsetY )"
            },
            {
                "line_number": 31,
                "text": "vPos = verRatio * ( x + offsetX )"
            },
            {
                "line_number": 32,
                "text": "} else if( transformType = = 5 ) {"
            },
            {
                "line_number": 33,
                "text": "hPos = horRatio * ( y + offsetY )"
            },
            {
                "line_number": 34,
                "text": "vPos = verRatio * ( packedRegWidth − x − offsetX )"
            },
            {
                "line_number": 35,
                "text": "} else if( transformType = = 6 ) {"
            },
            {
                "line_number": 36,
                "text": "hPos = horRatio * ( packedRegHeight − y − offsetY )"
            },
            {
                "line_number": 37,
                "text": "vPos = verRatio * ( packedRegWidth − x − offsetX )"
            },
            {
                "line_number": 38,
                "text": "} else if( transformType = = 7 ) {"
            },
            {
                "line_number": 39,
                "text": "hPos = horRatio * ( packedRegHeight − y − offsetY )"
            },
            {
                "line_number": 40,
                "text": "vPos = verRatio * ( x+ offsetX )"
            },
            {
                "line_number": 41,
                "text": "}"
            },
            {
                "line_number": 42,
                "text": "D.2.35.6.5 Mapping of luma sample locations within a cropped decoded picture to sphere coordinates relative to"
            },
            {
                "line_number": 43,
                "text": "the global coordinate axes"
            },
            {
                "line_number": 44,
                "text": "This clause specifies the semantics of luma sample locations within a cropped decoded picture to sphere coordinates"
            },
            {
                "line_number": 45,
                "text": "relative to the global coordinate axes."
            },
            {
                "line_number": 46,
                "text": "offsetX is set equal to 0.5 and offsetY is set equal to 0.5."
            },
            {
                "line_number": 47,
                "text": "If RegionWisePackingFlag is equal to 1, the following applies for each packed region n in the range of 0 to"
            },
            {
                "line_number": 48,
                "text": "NumPackedRegions − 1, inclusive:"
            },
            {
                "line_number": 49,
                "text": "– For each sample location (xPackedPicture, yPackedPicture) belonging to the n-th packed region, the following"
            },
            {
                "line_number": 50,
                "text": "applies:"
            },
            {
                "line_number": 51,
                "text": "– The corresponding sample location (xProjPicture, yProjPicture) of the projected picture is derived as follows:"
            },
            {
                "line_number": 52,
                "text": "– x is set equal to xPackedPicture − PackedRegionLeft[ n ]."
            },
            {
                "line_number": 53,
                "text": "– y is set equal to yPackedPicture − PackedRegionTop[ n ]."
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 411"
            }
        ]
    },
    {
        "page_number": 434,
        "lines": [
            {
                "line_number": 1,
                "text": "– Clause D.2.35.6.4 is invoked with x, y, PackedRegionWidth[ n ], PackedRegionHeight[ n ],"
            },
            {
                "line_number": 2,
                "text": "ProjRegionWidth[ n ], ProjRegionHeight[ n ], TransformType[ n ], offsetX, and offsetY as inputs, and the"
            },
            {
                "line_number": 3,
                "text": "output is assigned to sample location (hPos, vPos)."
            },
            {
                "line_number": 4,
                "text": "– xProjPicture is set equal to ProjRegionLeft[ n ] + hPos."
            },
            {
                "line_number": 5,
                "text": "– When StereoFlag is equal to 0 or TopBottomFlag is equal to 1, and when xProjPicture is greater than or"
            },
            {
                "line_number": 6,
                "text": "equal to proj_picture_width, xProjPicture is set equal to xProjPicture − proj_picture_width."
            },
            {
                "line_number": 7,
                "text": "– When SideBySideFlag is equal to 1, the following applies:"
            },
            {
                "line_number": 8,
                "text": "– When ProjRegionLeft[ n ] is less than proj_picture_width / 2 and xProjPicture is greater than or equal"
            },
            {
                "line_number": 9,
                "text": "to proj_picture_width / 2, xProjPicture is set equal to xProjPicture − proj_picture_width / 2."
            },
            {
                "line_number": 10,
                "text": "– When ProjRegionLeft[ n ] is greater than or equal to proj_picture_width / 2 and xProjPicture is greater"
            },
            {
                "line_number": 11,
                "text": "than or equal to proj_picture_width, xProjPicture is set equal to xProjPicture − proj_picture_width / 2."
            },
            {
                "line_number": 12,
                "text": "– yProjPicture is set equal to ProjRegionTop[ n ] + vPos."
            },
            {
                "line_number": 13,
                "text": "– Clause D.2.35.6.6 is invoked with xProjPicture, yProjPicture, ConstituentPicWidth, and ConstituentPicHeight"
            },
            {
                "line_number": 14,
                "text": "as inputs, and the outputs indicating the sphere coordinates and the constituent picture index (for frame-packed"
            },
            {
                "line_number": 15,
                "text": "stereoscopic video) for the luma sample location (xPackedPicture, yPackedPicture) belonging to the n-th packed"
            },
            {
                "line_number": 16,
                "text": "region in the decoded picture."
            },
            {
                "line_number": 17,
                "text": "Otherwise (RegionWisePackingFlag is equal 0), the following applies for each sample location (x, y) that is not an"
            },
            {
                "line_number": 18,
                "text": "equirectangular projection padded sample within the cropped decoded picture, where a sample location (x, y) is an"
            },
            {
                "line_number": 19,
                "text": "equirectangular projection padded sample when and only when ErpFlag is equal to 1, x is in the range of 0 to"
            },
            {
                "line_number": 20,
                "text": "left_gb_erp_width − 1, inclusive, or ConstituentPicWidth − right_gb_erp_width to ConstituentPicWidth − 1, inclusive,"
            },
            {
                "line_number": 21,
                "text": "and y is in the range of 0 to ConstituentPicHeight − 1, inclusive:"
            },
            {
                "line_number": 22,
                "text": "– xProjPicture is set equal to x + offsetX."
            },
            {
                "line_number": 23,
                "text": "– yProjPicture is set equal to y + offsetY."
            },
            {
                "line_number": 24,
                "text": "– If ErpFlag is equal to 0, projPicWidth is set equal to ConstituentPicWidth. Otherwise (ErpFlag is equal to 1),"
            },
            {
                "line_number": 25,
                "text": "projPicWidth is set equal to ConstituentPicWidth − ( left_gb_erp_width + right_gb_erp_width )."
            },
            {
                "line_number": 26,
                "text": "– Clause D.2.35.6.6 is invoked with xProjPicture, yProjPicture, projPicWidth, and ConstituentPicHeight as inputs, and"
            },
            {
                "line_number": 27,
                "text": "the outputs indicating the sphere coordinates and the constituent picture index (for frame-packed stereoscopic video)"
            },
            {
                "line_number": 28,
                "text": "for the sample location (x, y) within the region-wise packed picture."
            },
            {
                "line_number": 29,
                "text": "D.2.35.6.6 Conversion from a sample location in a projected picture to sphere coordinates relative to the global"
            },
            {
                "line_number": 30,
                "text": "coordinate axes"
            },
            {
                "line_number": 31,
                "text": "Inputs to this clause are:"
            },
            {
                "line_number": 32,
                "text": "– the centre point of a sample location (xProjPicture, yProjPicture) within a projected picture, where xProjPicture and"
            },
            {
                "line_number": 33,
                "text": "yProjPicture are in relative projected picture sample units and may have non-integer real values, and"
            },
            {
                "line_number": 34,
                "text": "– pictureWidth and pictureHeight, which are the width and height, respectively, of a monoscopic projected luma picture,"
            },
            {
                "line_number": 35,
                "text": "in relative projected picture sample units."
            },
            {
                "line_number": 36,
                "text": "Outputs of this clause are:"
            },
            {
                "line_number": 37,
                "text": "– sphere coordinates (azimuthGlobal, elevationGlobal), in units of degrees relative to the global coordinate axes, and"
            },
            {
                "line_number": 38,
                "text": "– when StereoFlag is equal to 1, the index of the constituent picture (constituentPicture) equal to 0 or 1."
            },
            {
                "line_number": 39,
                "text": "The outputs are derived with the following ordered steps:"
            },
            {
                "line_number": 40,
                "text": "– If xProjPicture is greater than or equal to pictureWidth or yProjPicture is greater than or equal to pictureHeight, the"
            },
            {
                "line_number": 41,
                "text": "following applies:"
            },
            {
                "line_number": 42,
                "text": "– constituentPicture is set equal to 1."
            },
            {
                "line_number": 43,
                "text": "– If xProjPicture is greater than or equal to pictureWidth, xProjPicture is set to xProjPicture − pictureWidth."
            },
            {
                "line_number": 44,
                "text": "– If yProjPicture is greater than or equal to pictureHeight, yProjPicture is set to yProjPicture − pictureHeight."
            },
            {
                "line_number": 45,
                "text": "– Otherwise, constituentPicture is set equal to 0."
            },
            {
                "line_number": 46,
                "text": "– Clause D.2.35.6.2 is invoked with pictureWidth, pictureHeight, xProjPicture, and yProjPicture as inputs, and the"
            },
            {
                "line_number": 47,
                "text": "output is assigned to azimuthLocal, elevationLocal."
            },
            {
                "line_number": 48,
                "text": "412 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 435,
        "lines": [
            {
                "line_number": 1,
                "text": "– If RotationFlag is equal to 1, clause D.2.35.6.3 is invoked with azimuthLocal, elevationLocal, RotationYaw,"
            },
            {
                "line_number": 2,
                "text": "RotationPitch, and RotationRoll as inputs, and the output is assigned to azimuthGlobal and elevationGlobal."
            },
            {
                "line_number": 3,
                "text": "– Otherwise, azimuthGlobal is set equal to azimuthLocal and elevationGlobal is set equal to elevationLocal."
            },
            {
                "line_number": 4,
                "text": "D.2.36 SEI manifest SEI message semantics"
            },
            {
                "line_number": 5,
                "text": "The SEI manifest SEI message conveys information on SEI messages that are indicated as expected (i.e., likely) to be"
            },
            {
                "line_number": 6,
                "text": "present or not present. Such information may include:"
            },
            {
                "line_number": 7,
                "text": "1) The indication that certain types of SEI messages are expected (i.e., likely) to be present (although not guaranteed"
            },
            {
                "line_number": 8,
                "text": "to be present) in the CVS."
            },
            {
                "line_number": 9,
                "text": "2) For each type of SEI message that is indicated as expected (i.e., likely) to be present in the CVS, the degree of"
            },
            {
                "line_number": 10,
                "text": "expressed necessity of interpretation of the SEI messages of this type."
            },
            {
                "line_number": 11,
                "text": "The degree of necessity of interpretation of an SEI message type may be indicated as \"necessary\", \"unnecessary\","
            },
            {
                "line_number": 12,
                "text": "or \"undetermined\"."
            },
            {
                "line_number": 13,
                "text": "An SEI message is indicated by the encoder (i.e., the content producer) as being \"necessary\" when the information"
            },
            {
                "line_number": 14,
                "text": "conveyed by the SEI message is considered as necessary for interpretation by the decoder or receiving system in"
            },
            {
                "line_number": 15,
                "text": "order to properly process the content and enable an adequate user experience; it does not mean that the bitstream"
            },
            {
                "line_number": 16,
                "text": "is required to contain the SEI message in order to be a conforming bitstream. It is at the discretion of the encoder"
            },
            {
                "line_number": 17,
                "text": "to determine which SEI messages are to be considered as necessary in a particular CVS. However, it is suggested"
            },
            {
                "line_number": 18,
                "text": "that some SEI messages, such as the frame packing arrangement, segmented rectangular frame packing"
            },
            {
                "line_number": 19,
                "text": "arrangement, and omnidirectional projection indication SEI messages, should typically be considered as"
            },
            {
                "line_number": 20,
                "text": "necessary."
            },
            {
                "line_number": 21,
                "text": "3) The indication that certain types of SEI messages are expected (i.e., likely) not to be present (although not"
            },
            {
                "line_number": 22,
                "text": "guaranteed not to be present) in the CVS."
            },
            {
                "line_number": 23,
                "text": "NOTE – An example of such a usage of an SEI manifest SEI message is to express the expectation that there are no frame"
            },
            {
                "line_number": 24,
                "text": "packing arrangement SEI messages, segmented rectangular frame packing arrangement SEI messages, display orientation"
            },
            {
                "line_number": 25,
                "text": "SEI messages, or omnidirectional projection indication SEI messages in the CVS, and therefore that the rendering of the"
            },
            {
                "line_number": 26,
                "text": "decoded video pictures for display purposes would not need any of the additional post-processing that is commonly"
            },
            {
                "line_number": 27,
                "text": "associated with the interpretation of these SEI messages."
            },
            {
                "line_number": 28,
                "text": "The content of an SEI manifest SEI message may, for example, be used by transport-layer or systems-layer processing"
            },
            {
                "line_number": 29,
                "text": "elements to determine whether the CVS is suitable for delivery to a receiving and decoding system, based on whether the"
            },
            {
                "line_number": 30,
                "text": "receiving system can properly process the CVS to enable an adequate user experience or whether the CVS satisfies the"
            },
            {
                "line_number": 31,
                "text": "application needs."
            },
            {
                "line_number": 32,
                "text": "When an SEI manifest SEI message is present in any access unit of a CVS, an SEI manifest SEI message shall be present"
            },
            {
                "line_number": 33,
                "text": "in the first access unit of the CVS. The SEI manifest SEI message persists in decoding order from the current access unit"
            },
            {
                "line_number": 34,
                "text": "until the end of the CVS. When there are multiple SEI manifest SEI messages present in a CVS, they shall have the same"
            },
            {
                "line_number": 35,
                "text": "content."
            },
            {
                "line_number": 36,
                "text": "An SEI NAL unit containing an SEI manifest SEI message shall not contain any other SEI messages other than SEI prefix"
            },
            {
                "line_number": 37,
                "text": "indication SEI messages. When present in an SEI NAL unit, the SEI manifest SEI message shall be the first SEI message"
            },
            {
                "line_number": 38,
                "text": "in the SEI NAL unit."
            },
            {
                "line_number": 39,
                "text": "manifest_num_sei_msg_types specifies the number of types of SEI messages for which information is provided in the"
            },
            {
                "line_number": 40,
                "text": "SEI manifest SEI message."
            },
            {
                "line_number": 41,
                "text": "manifest_sei_payload_type[ i ] indicates the payloadType value of the i-th type of SEI message for which information is"
            },
            {
                "line_number": 42,
                "text": "provided in the SEI manifest SEI message. The values of manifest_sei_payload_type[ m ] and"
            },
            {
                "line_number": 43,
                "text": "manifest_sei_payload_type[ n ] shall not be identical when m is not equal to n."
            },
            {
                "line_number": 44,
                "text": "manifest_sei_description[ i ] provides information on SEI messages with payloadType equal to"
            },
            {
                "line_number": 45,
                "text": "manifest_sei_payload_type[ i ] as specified in Table D-12."
            },
            {
                "line_number": 46,
                "text": "Rec. ITU-T H.264 (06/2019) 413"
            }
        ]
    },
    {
        "page_number": 436,
        "lines": [
            {
                "line_number": 1,
                "text": "Table D-12– manifest_sei_description[ i ] values"
            },
            {
                "line_number": 2,
                "text": "Value Description"
            },
            {
                "line_number": 3,
                "text": "Indicates that there is no SEI message with payloadType equal to"
            },
            {
                "line_number": 4,
                "text": "0"
            },
            {
                "line_number": 5,
                "text": "manifest_sei_payload_type[ i ] expected to be present in the CVS."
            },
            {
                "line_number": 6,
                "text": "Indicates that there are SEI messages with payloadType equal to"
            },
            {
                "line_number": 7,
                "text": "1 manifest_sei_payload_type[ i ] expected to be present in the CVS, and"
            },
            {
                "line_number": 8,
                "text": "these SEI messages are considered as necessary."
            },
            {
                "line_number": 9,
                "text": "Indicates that there are SEI messages with payloadType equal to"
            },
            {
                "line_number": 10,
                "text": "2 manifest_sei_payload_type[ i ] expected to be present in the CVS, and"
            },
            {
                "line_number": 11,
                "text": "these SEI messages are considered as unnecessary."
            },
            {
                "line_number": 12,
                "text": "Indicates that there are SEI messages with payloadType equal to"
            },
            {
                "line_number": 13,
                "text": "3 manifest_sei_payload_type[ i ] expected to be present in the CVS, and"
            },
            {
                "line_number": 14,
                "text": "the necessity of these SEI messages is undetermined."
            },
            {
                "line_number": 15,
                "text": "4-255 Reserved"
            },
            {
                "line_number": 16,
                "text": "The value of manifest_sei_description[ i ] shall be in the range of 0 to 3, inclusive, in bitstreams conforming to this version"
            },
            {
                "line_number": 17,
                "text": "of this Specification. Other values for manifest_sei_description[ i ] are reserved for future use by ITU-T | ISO/IEC."
            },
            {
                "line_number": 18,
                "text": "Decoders shall allow the value of manifest_sei_description[ i ] greater than or equal to 4 to appear in the syntax and shall"
            },
            {
                "line_number": 19,
                "text": "ignore all information for payloadType equal to manifest_sei_payload_type[ i ] signalled in the SEI manifest SEI message"
            },
            {
                "line_number": 20,
                "text": "and shall ignore all SEI prefix indication SEI messages with prefix_sei_payload_type equal to"
            },
            {
                "line_number": 21,
                "text": "manifest_sei_payload_type[ i ] when manifest_sei_description[ i ] is greater than or equal to 4."
            },
            {
                "line_number": 22,
                "text": "D.2.37 SEI prefix indication SEI message semantics"
            },
            {
                "line_number": 23,
                "text": "The SEI prefix indication SEI message carries one or more SEI prefix indications for SEI messages of a particular value"
            },
            {
                "line_number": 24,
                "text": "of payloadType. Each SEI prefix indication is a bit string that follows the SEI payload syntax of that value of payloadType"
            },
            {
                "line_number": 25,
                "text": "and contains a number of complete syntax elements starting from the first syntax element in the SEI payload."
            },
            {
                "line_number": 26,
                "text": "Each SEI prefix indication for an SEI message of a particular value of payloadType indicates that one or more SEI messages"
            },
            {
                "line_number": 27,
                "text": "of this value of payloadType are expected (i.e., likely) to be present in the CVS and to start with the provided bit string. A"
            },
            {
                "line_number": 28,
                "text": "starting bit string would typically contain only a true subset of an SEI payload of the type of SEI message indicated by the"
            },
            {
                "line_number": 29,
                "text": "payloadType, may contain a complete SEI payload, and shall not contain more than a complete SEI payload. It is not"
            },
            {
                "line_number": 30,
                "text": "prohibited for SEI messages of the indicated value of payloadType to be present that do not start with any of the indicated"
            },
            {
                "line_number": 31,
                "text": "bit strings."
            },
            {
                "line_number": 32,
                "text": "These SEI prefix indications should provide sufficient information for indicating what type of processing is needed or what"
            },
            {
                "line_number": 33,
                "text": "type of content is included. The former (type of processing) indicates decoder-side processing capability, e.g., whether"
            },
            {
                "line_number": 34,
                "text": "some type of frame unpacking is needed. The latter (type of content) indicates, for example, whether the bitstream contains"
            },
            {
                "line_number": 35,
                "text": "subtitle captions in a particular language."
            },
            {
                "line_number": 36,
                "text": "The content of an SEI prefix indication SEI message may, for example, be used by transport-layer or systems-layer"
            },
            {
                "line_number": 37,
                "text": "processing elements to determine whether the CVS is suitable for delivery to a receiving and decoding system, based on"
            },
            {
                "line_number": 38,
                "text": "whether the receiving system can properly process the CVS to enable an adequate user experience or whether the CVS"
            },
            {
                "line_number": 39,
                "text": "satisfies the application needs (as determined in some manner by external means outside the scope of this Specification)."
            },
            {
                "line_number": 40,
                "text": "In one example, when the payloadType indicates the frame packing arrangement SEI message, an SEI prefix indication"
            },
            {
                "line_number": 41,
                "text": "should include up to at least the syntax element frame_packing_arrangement_type; and when the payloadType indicates"
            },
            {
                "line_number": 42,
                "text": "the omnidirectional projection indication SEI message, an SEI prefix indication should include up to at least the syntax"
            },
            {
                "line_number": 43,
                "text": "element projection_type."
            },
            {
                "line_number": 44,
                "text": "In another example, for user data registered SEI messages that are used to carry captioning information, an SEI prefix"
            },
            {
                "line_number": 45,
                "text": "indication should include up to at least the language code; and for user data unregistered SEI messages extended for private"
            },
            {
                "line_number": 46,
                "text": "use, an SEI prefix indication should include up to at least the UUID."
            },
            {
                "line_number": 47,
                "text": "When an SEI prefix indication SEI message is present in any access unit of a CVS, an SEI prefix indication SEI message"
            },
            {
                "line_number": 48,
                "text": "shall be present in the first access unit of the CVS. The SEI prefix indication SEI message persists in decoding order from"
            },
            {
                "line_number": 49,
                "text": "the current access unit until the end of the CVS. When there are multiple SEI prefix indication SEI messages present in a"
            },
            {
                "line_number": 50,
                "text": "CVS for a particular value of payloadType, they shall have the same content."
            },
            {
                "line_number": 51,
                "text": "414 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 437,
        "lines": [
            {
                "line_number": 1,
                "text": "An SEI NAL unit containing an SEI prefix indication SEI message for a particular value of payloadType shall not contain"
            },
            {
                "line_number": 2,
                "text": "any other SEI messages other than an SEI manifest SEI message and SEI prefix indication SEI messages for other values"
            },
            {
                "line_number": 3,
                "text": "of payloadType."
            },
            {
                "line_number": 4,
                "text": "prefix_sei_payload_type indicates the payloadType value of the SEI messages for which one or more SEI prefix"
            },
            {
                "line_number": 5,
                "text": "indications are provided in the SEI prefix indication SEI message. When an SEI manifest SEI message is also present for"
            },
            {
                "line_number": 6,
                "text": "the CVS, the value of prefix_sei_payload_type shall be equal to one of the manifest_sei_payload_type[ m ] values for"
            },
            {
                "line_number": 7,
                "text": "which manifest_sei_description[ m ] is equal to 1 to 3, inclusive, as indicated by an SEI manifest SEI message that applies"
            },
            {
                "line_number": 8,
                "text": "to the CVS."
            },
            {
                "line_number": 9,
                "text": "num_sei_prefix_indications_minus1 plus 1 specifies the number of SEI prefix indications."
            },
            {
                "line_number": 10,
                "text": "num_bits_in_prefix_indication_minus1[ i ] plus 1 specifies the number of bits in the i-th SEI prefix indication."
            },
            {
                "line_number": 11,
                "text": "sei_prefix_data_bit[ i ][ j ] specifies the j-th bit of the i-th SEI prefix indication."
            },
            {
                "line_number": 12,
                "text": "The bits sei_prefix_data_bit[ i ][ j ] for j ranging from 0 to num_bits_in_prefix_indication_minus1[ i ], inclusive, follow"
            },
            {
                "line_number": 13,
                "text": "the syntax of the SEI payload with payloadType equal to prefix_sei_payload_type, and contain a number of complete"
            },
            {
                "line_number": 14,
                "text": "syntax elements starting from the first syntax element in the SEI payload syntax, and may or may not contain all the syntax"
            },
            {
                "line_number": 15,
                "text": "elements in the SEI payload syntax. The last bit of these bits (i.e., the bit"
            },
            {
                "line_number": 16,
                "text": "sei_prefix_data_bit[ i ][ num_bits_in_prefix_indication_minus1[ i ] ]) shall be the last bit of a syntax element in the SEI"
            },
            {
                "line_number": 17,
                "text": "payload syntax, unless it is a bit within an itu_t_t35_payload_byte or user_data_payload_byte."
            },
            {
                "line_number": 18,
                "text": "NOTE – The exception for itu_t_t35_payload_byte and user_data_payload_byte is provided because these syntax elements may"
            },
            {
                "line_number": 19,
                "text": "contain externally-specified syntax elements, and the determination of the boundaries of such externally-specified syntax elements"
            },
            {
                "line_number": 20,
                "text": "is a matter outside the scope of this Specification."
            },
            {
                "line_number": 21,
                "text": "D.2.38 Reserved SEI message semantics"
            },
            {
                "line_number": 22,
                "text": "This message consists of data reserved for future backward-compatible use by ITU-T | ISO/IEC. Encoders conforming to"
            },
            {
                "line_number": 23,
                "text": "this Recommendation | International Standard shall not send reserved SEI messages until and unless the use of such"
            },
            {
                "line_number": 24,
                "text": "messages has been specified by ITU-T | ISO/IEC. Decoders that encounter reserved SEI messages shall discard their"
            },
            {
                "line_number": 25,
                "text": "content without effect on the decoding process, except as specified in future Recommendations | International Standards"
            },
            {
                "line_number": 26,
                "text": "specified by ITU-T | ISO/IEC."
            },
            {
                "line_number": 27,
                "text": "reserved_sei_message_payload_byte is a byte reserved for future use by ITU-T | ISO/IEC."
            },
            {
                "line_number": 28,
                "text": "Rec. ITU-T H.264 (06/2019) 415"
            }
        ]
    },
    {
        "page_number": 438,
        "lines": [
            {
                "line_number": 1,
                "text": "Annex E"
            },
            {
                "line_number": 2,
                "text": "Video usability information"
            },
            {
                "line_number": 3,
                "text": "(This annex forms an integral part of this Recommendation | International Standard.)"
            },
            {
                "line_number": 4,
                "text": "This annex specifies syntax and semantics of the VUI parameters of the sequence parameter sets."
            },
            {
                "line_number": 5,
                "text": "VUI parameters are not required for constructing the luma or chroma samples by the decoding process. Conforming"
            },
            {
                "line_number": 6,
                "text": "decoders are not required to process this information for output order conformance to this"
            },
            {
                "line_number": 7,
                "text": "Recommendation | International Standard (see Annex C for the specification of conformance). Some VUI parameters are"
            },
            {
                "line_number": 8,
                "text": "required to check bitstream conformance and for output timing decoder conformance."
            },
            {
                "line_number": 9,
                "text": "In Annex E, specification for presence of VUI parameters is also satisfied when those parameters (or some subset of them)"
            },
            {
                "line_number": 10,
                "text": "are conveyed to decoders (or to the HRD) by other means not specified by this Recommendation | International Standard."
            },
            {
                "line_number": 11,
                "text": "When present in the bitstream, VUI parameters shall follow the syntax and semantics specified in clauses 7.3.2.1 and"
            },
            {
                "line_number": 12,
                "text": "7.4.2.1 and this annex. When the content of VUI parameters is conveyed for the application by some means other than"
            },
            {
                "line_number": 13,
                "text": "presence within the bitstream, the representation of the content of the VUI parameters is not required to use the same syntax"
            },
            {
                "line_number": 14,
                "text": "specified in this annex. For the purpose of counting bits, only the appropriate bits that are actually present in the bitstream"
            },
            {
                "line_number": 15,
                "text": "are counted."
            },
            {
                "line_number": 16,
                "text": "E.1 VUI syntax"
            },
            {
                "line_number": 17,
                "text": "E.1.1 VUI parameters syntax"
            },
            {
                "line_number": 18,
                "text": "vui_parameters( ) { C Descriptor"
            },
            {
                "line_number": 19,
                "text": "aspect_ratio_info_present_flag 0 u(1)"
            },
            {
                "line_number": 20,
                "text": "if( aspect_ratio_info_present_flag ) {"
            },
            {
                "line_number": 21,
                "text": "aspect_ratio_idc 0 u(8)"
            },
            {
                "line_number": 22,
                "text": "if( aspect_ratio_idc = = Extended_SAR ) {"
            },
            {
                "line_number": 23,
                "text": "sar_width 0 u(16)"
            },
            {
                "line_number": 24,
                "text": "sar_height 0 u(16)"
            },
            {
                "line_number": 25,
                "text": "}"
            },
            {
                "line_number": 26,
                "text": "}"
            },
            {
                "line_number": 27,
                "text": "overscan_info_present_flag 0 u(1)"
            },
            {
                "line_number": 28,
                "text": "if( overscan_info_present_flag )"
            },
            {
                "line_number": 29,
                "text": "overscan_appropriate_flag 0 u(1)"
            },
            {
                "line_number": 30,
                "text": "video_signal_type_present_flag 0 u(1)"
            },
            {
                "line_number": 31,
                "text": "if( video_signal_type_present_flag ) {"
            },
            {
                "line_number": 32,
                "text": "video_format 0 u(3)"
            },
            {
                "line_number": 33,
                "text": "video_full_range_flag 0 u(1)"
            },
            {
                "line_number": 34,
                "text": "colour_description_present_flag 0 u(1)"
            },
            {
                "line_number": 35,
                "text": "if( colour_description_present_flag ) {"
            },
            {
                "line_number": 36,
                "text": "colour_primaries 0 u(8)"
            },
            {
                "line_number": 37,
                "text": "transfer_characteristics 0 u(8)"
            },
            {
                "line_number": 38,
                "text": "matrix_coefficients 0 u(8)"
            },
            {
                "line_number": 39,
                "text": "}"
            },
            {
                "line_number": 40,
                "text": "}"
            },
            {
                "line_number": 41,
                "text": "chroma_loc_info_present_flag 0 u(1)"
            },
            {
                "line_number": 42,
                "text": "if( chroma_loc_info_present_flag ) {"
            },
            {
                "line_number": 43,
                "text": "chroma_sample_loc_type_top_field 0 ue(v)"
            },
            {
                "line_number": 44,
                "text": "chroma_sample_loc_type_bottom_field 0 ue(v)"
            },
            {
                "line_number": 45,
                "text": "}"
            },
            {
                "line_number": 46,
                "text": "416 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 439,
        "lines": [
            {
                "line_number": 1,
                "text": "timing_info_present_flag 0 u(1)"
            },
            {
                "line_number": 2,
                "text": "if( timing_info_present_flag ) {"
            },
            {
                "line_number": 3,
                "text": "num_units_in_tick 0 u(32)"
            },
            {
                "line_number": 4,
                "text": "time_scale 0 u(32)"
            },
            {
                "line_number": 5,
                "text": "fixed_frame_rate_flag 0 u(1)"
            },
            {
                "line_number": 6,
                "text": "}"
            },
            {
                "line_number": 7,
                "text": "nal_hrd_parameters_present_flag 0 u(1)"
            },
            {
                "line_number": 8,
                "text": "if( nal_hrd_parameters_present_flag )"
            },
            {
                "line_number": 9,
                "text": "hrd_parameters( ) 0"
            },
            {
                "line_number": 10,
                "text": "vcl_hrd_parameters_present_flag 0 u(1)"
            },
            {
                "line_number": 11,
                "text": "if( vcl_hrd_parameters_present_flag )"
            },
            {
                "line_number": 12,
                "text": "hrd_parameters( ) 0"
            },
            {
                "line_number": 13,
                "text": "if( nal_hrd_parameters_present_flag | | vcl_hrd_parameters_present_flag )"
            },
            {
                "line_number": 14,
                "text": "low_delay_hrd_flag 0 u(1)"
            },
            {
                "line_number": 15,
                "text": "pic_struct_present_flag 0 u(1)"
            },
            {
                "line_number": 16,
                "text": "bitstream_restriction_flag 0 u(1)"
            },
            {
                "line_number": 17,
                "text": "if( bitstream_restriction_flag ) {"
            },
            {
                "line_number": 18,
                "text": "motion_vectors_over_pic_boundaries_flag 0 u(1)"
            },
            {
                "line_number": 19,
                "text": "max_bytes_per_pic_denom 0 ue(v)"
            },
            {
                "line_number": 20,
                "text": "max_bits_per_mb_denom 0 ue(v)"
            },
            {
                "line_number": 21,
                "text": "log2_max_mv_length_horizontal 0 ue(v)"
            },
            {
                "line_number": 22,
                "text": "log2_max_mv_length_vertical 0 ue(v)"
            },
            {
                "line_number": 23,
                "text": "max_num_reorder_frames 0 ue(v)"
            },
            {
                "line_number": 24,
                "text": "max_dec_frame_buffering 0 ue(v)"
            },
            {
                "line_number": 25,
                "text": "}"
            },
            {
                "line_number": 26,
                "text": "}"
            },
            {
                "line_number": 27,
                "text": "E.1.2 HRD parameters syntax"
            },
            {
                "line_number": 28,
                "text": "hrd_parameters( ) { C Descriptor"
            },
            {
                "line_number": 29,
                "text": "cpb_cnt_minus1 0 | 5 ue(v)"
            },
            {
                "line_number": 30,
                "text": "bit_rate_scale 0 | 5 u(4)"
            },
            {
                "line_number": 31,
                "text": "cpb_size_scale 0 | 5 u(4)"
            },
            {
                "line_number": 32,
                "text": "for( SchedSelIdx = 0; SchedSelIdx <= cpb_cnt_minus1; SchedSelIdx++ ) {"
            },
            {
                "line_number": 33,
                "text": "bit_rate_value_minus1[ SchedSelIdx ] 0 | 5 ue(v)"
            },
            {
                "line_number": 34,
                "text": "cpb_size_value_minus1[ SchedSelIdx ] 0 | 5 ue(v)"
            },
            {
                "line_number": 35,
                "text": "cbr_flag[ SchedSelIdx ] 0 | 5 u(1)"
            },
            {
                "line_number": 36,
                "text": "}"
            },
            {
                "line_number": 37,
                "text": "initial_cpb_removal_delay_length_minus1 0 | 5 u(5)"
            },
            {
                "line_number": 38,
                "text": "cpb_removal_delay_length_minus1 0 | 5 u(5)"
            },
            {
                "line_number": 39,
                "text": "dpb_output_delay_length_minus1 0 | 5 u(5)"
            },
            {
                "line_number": 40,
                "text": "time_offset_length 0 | 5 u(5)"
            },
            {
                "line_number": 41,
                "text": "}"
            },
            {
                "line_number": 42,
                "text": "Rec. ITU-T H.264 (06/2019) 417"
            }
        ]
    },
    {
        "page_number": 440,
        "lines": [
            {
                "line_number": 1,
                "text": "E.2 VUI semantics"
            },
            {
                "line_number": 2,
                "text": "E.2.1 VUI parameters semantics"
            },
            {
                "line_number": 3,
                "text": "aspect_ratio_info_present_flag equal to 1 specifies that aspect_ratio_idc is present. aspect_ratio_info_present_flag equal"
            },
            {
                "line_number": 4,
                "text": "to 0 specifies that aspect_ratio_idc is not present."
            },
            {
                "line_number": 5,
                "text": "aspect_ratio_idc specifies the value of the sample aspect ratio of the luma samples. Table E-1 shows the meaning of the"
            },
            {
                "line_number": 6,
                "text": "code. When aspect_ratio_idc indicates Extended_SAR, the sample aspect ratio is represented by sar_width : sar_height."
            },
            {
                "line_number": 7,
                "text": "When the aspect_ratio_idc syntax element is not present, aspect_ratio_idc value shall be inferred to be equal to 0."
            },
            {
                "line_number": 8,
                "text": "Table E-1 – Meaning of sample aspect ratio indicator"
            },
            {
                "line_number": 9,
                "text": "aspect_ratio_idc Sample aspect (informative)"
            },
            {
                "line_number": 10,
                "text": "ratio Examples of use"
            },
            {
                "line_number": 11,
                "text": "0 Unspecified"
            },
            {
                "line_number": 12,
                "text": "1 1:1 7680x4320 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 13,
                "text": "(\"square\") 3840x2160 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 14,
                "text": "1280x720 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 15,
                "text": "1920x1080 16:9 frame without horizontal overscan (cropped from"
            },
            {
                "line_number": 16,
                "text": "1920x1088)"
            },
            {
                "line_number": 17,
                "text": "640x480 4:3 frame without horizontal overscan"
            },
            {
                "line_number": 18,
                "text": "2 12:11 720x576 4:3 frame with horizontal overscan"
            },
            {
                "line_number": 19,
                "text": "352x288 4:3 frame without horizontal overscan"
            },
            {
                "line_number": 20,
                "text": "3 10:11 720x480 4:3 frame with horizontal overscan"
            },
            {
                "line_number": 21,
                "text": "352x240 4:3 frame without horizontal overscan"
            },
            {
                "line_number": 22,
                "text": "4 16:11 720x576 16:9 frame with horizontal overscan"
            },
            {
                "line_number": 23,
                "text": "528x576 4:3 frame without horizontal overscan"
            },
            {
                "line_number": 24,
                "text": "5 40:33 720x480 16:9 frame with horizontal overscan"
            },
            {
                "line_number": 25,
                "text": "528x480 4:3 frame without horizontal overscan"
            },
            {
                "line_number": 26,
                "text": "6 24:11 352x576 4:3 frame without horizontal overscan"
            },
            {
                "line_number": 27,
                "text": "480x576 16:9 frame with horizontal overscan"
            },
            {
                "line_number": 28,
                "text": "7 20:11 352x480 4:3 frame without horizontal overscan"
            },
            {
                "line_number": 29,
                "text": "480x480 16:9 frame with horizontal overscan"
            },
            {
                "line_number": 30,
                "text": "8 32:11 352x576 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 31,
                "text": "9 80:33 352x480 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 32,
                "text": "10 18:11 480x576 4:3 frame with horizontal overscan"
            },
            {
                "line_number": 33,
                "text": "11 15:11 480x480 4:3 frame with horizontal overscan"
            },
            {
                "line_number": 34,
                "text": "12 64:33 528x576 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 35,
                "text": "13 160:99 528x480 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 36,
                "text": "14 4:3 1440x1080 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 37,
                "text": "15 3:2 1280x1080 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 38,
                "text": "16 2:1 960x1080 16:9 frame without horizontal overscan"
            },
            {
                "line_number": 39,
                "text": "17..254 Reserved"
            },
            {
                "line_number": 40,
                "text": "255 Extended_SAR"
            },
            {
                "line_number": 41,
                "text": "NOTE 1 – For the examples in Table E-1, the term \"without horizontal overscan\" refers to display processes in which the display"
            },
            {
                "line_number": 42,
                "text": "area matches the area of the cropped decoded pictures and the term \"with horizontal overscan\" refers to display processes in which"
            },
            {
                "line_number": 43,
                "text": "some parts near the left and/or right border of the cropped decoded pictures are not visible in the display area. As an example, the"
            },
            {
                "line_number": 44,
                "text": "entry \"720x576 4:3 frame with horizontal overscan\" for aspect_ratio_idc equal to 2 refers to having an area of 704x576 luma samples"
            },
            {
                "line_number": 45,
                "text": "(which has an aspect ratio of 4:3) of the cropped decoded frame (720x576 luma samples) that is visible in the display area."
            },
            {
                "line_number": 46,
                "text": "sar_width indicates the horizontal size of the sample aspect ratio (in arbitrary units)."
            },
            {
                "line_number": 47,
                "text": "sar_height indicates the vertical size of the sample aspect ratio (in the same arbitrary units as sar_width)."
            },
            {
                "line_number": 48,
                "text": "sar_width and sar_height shall be relatively prime or equal to 0. When aspect_ratio_idc is equal to 0 or sar_width is equal"
            },
            {
                "line_number": 49,
                "text": "to 0 or sar_height is equal to 0, the sample aspect ratio shall be considered unspecified by this Recommendation |"
            },
            {
                "line_number": 50,
                "text": "International Standard."
            },
            {
                "line_number": 51,
                "text": "overscan_info_present_flag equal to 1 specifies that the overscan_appropriate_flag is present. When"
            },
            {
                "line_number": 52,
                "text": "overscan_info_present_flag is equal to 0 or is not present, the preferred display method for the video signal is unspecified."
            },
            {
                "line_number": 53,
                "text": "418 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 441,
        "lines": [
            {
                "line_number": 1,
                "text": "overscan_appropriate_flag equal to 1 indicates that the cropped decoded pictures output are suitable for display using"
            },
            {
                "line_number": 2,
                "text": "overscan. overscan_appropriate_flag equal to 0 indicates that the cropped decoded pictures output contain visually"
            },
            {
                "line_number": 3,
                "text": "important information in the entire region out to the edges of the cropping rectangle of the picture, such that the cropped"
            },
            {
                "line_number": 4,
                "text": "decoded pictures output should not be displayed using overscan. Instead, they should be displayed using either an exact"
            },
            {
                "line_number": 5,
                "text": "match between the display area and the cropping rectangle, or using underscan. As used in this paragraph, the term"
            },
            {
                "line_number": 6,
                "text": "\"overscan\" refers to display processes in which some parts near the borders of the cropped decoded pictures are not visible"
            },
            {
                "line_number": 7,
                "text": "in the display area. The term \"underscan\" describes display processes in which the entire cropped decoded pictures are"
            },
            {
                "line_number": 8,
                "text": "visible in the display area, but they do not cover the entire display area. For display processes that neither use overscan nor"
            },
            {
                "line_number": 9,
                "text": "underscan, the display area exactly matches the area of the cropped decoded pictures."
            },
            {
                "line_number": 10,
                "text": "NOTE 2 – For example, overscan_appropriate_flag equal to 1 might be used for entertainment television programming, or for a live"
            },
            {
                "line_number": 11,
                "text": "view of people in a videoconference, and overscan_appropriate_flag equal to 0 might be used for computer screen capture or security"
            },
            {
                "line_number": 12,
                "text": "camera content."
            },
            {
                "line_number": 13,
                "text": "video_signal_type_present_flag equal to 1 specifies that video_format, video_full_range_flag and"
            },
            {
                "line_number": 14,
                "text": "colour_description_present_flag are present. video_signal_type_present_flag equal to 0, specify that video_format,"
            },
            {
                "line_number": 15,
                "text": "video_full_range_flag and colour_description_present_flag are not present."
            },
            {
                "line_number": 16,
                "text": "video_format indicates the representation of the pictures as specified in Table E-2, before being coded in accordance with"
            },
            {
                "line_number": 17,
                "text": "this Recommendation | International Standard. When the video_format syntax element is not present, video_format value"
            },
            {
                "line_number": 18,
                "text": "shall be inferred to be equal to 5."
            },
            {
                "line_number": 19,
                "text": "Table E-2 – Meaning of video_format"
            },
            {
                "line_number": 20,
                "text": "video_format Meaning"
            },
            {
                "line_number": 21,
                "text": "0 Component"
            },
            {
                "line_number": 22,
                "text": "1 PAL"
            },
            {
                "line_number": 23,
                "text": "2 NTSC"
            },
            {
                "line_number": 24,
                "text": "3 SECAM"
            },
            {
                "line_number": 25,
                "text": "4 MAC"
            },
            {
                "line_number": 26,
                "text": "5 Unspecified video format"
            },
            {
                "line_number": 27,
                "text": "6 Reserved"
            },
            {
                "line_number": 28,
                "text": "7 Reserved"
            },
            {
                "line_number": 29,
                "text": "video_full_range_flag indicates the black level and range of the luma and chroma signals as derived from E′ , E′ , and"
            },
            {
                "line_number": 30,
                "text": "Y PB"
            },
            {
                "line_number": 31,
                "text": "E′ or E′ , E′ , and E′ real-valued component signals."
            },
            {
                "line_number": 32,
                "text": "PR R G B"
            },
            {
                "line_number": 33,
                "text": "When the video_full_range_flag syntax element is not present, the value of video_full_range_flag shall be inferred to be"
            },
            {
                "line_number": 34,
                "text": "equal to 0."
            },
            {
                "line_number": 35,
                "text": "colour_description_present_flag equal to 1 specifies that colour_primaries, transfer_characteristics and"
            },
            {
                "line_number": 36,
                "text": "matrix_coefficients are present. colour_description_present_flag equal to 0 specifies that colour_primaries,"
            },
            {
                "line_number": 37,
                "text": "transfer_characteristics and matrix_coefficients are not present."
            },
            {
                "line_number": 38,
                "text": "colour_primaries indicates the chromaticity coordinates of the source primaries as specified in Table E-3 in terms of the"
            },
            {
                "line_number": 39,
                "text": "CIE 1931 definition of x and y as specified by ISO 11664-1."
            },
            {
                "line_number": 40,
                "text": "When the colour_primaries syntax element is not present, the value of colour_primaries shall be inferred to be equal to 2"
            },
            {
                "line_number": 41,
                "text": "(the chromaticity is unspecified or is determined by the application)."
            },
            {
                "line_number": 42,
                "text": "Rec. ITU-T H.264 (06/2019) 419"
            }
        ]
    },
    {
        "page_number": 442,
        "lines": [
            {
                "line_number": 1,
                "text": "Table E-3 – Colour primaries interpretation using colour_primaries syntax element"
            },
            {
                "line_number": 2,
                "text": "Value Primaries Informative remark"
            },
            {
                "line_number": 3,
                "text": "0 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 4,
                "text": "1 primary x y Rec. ITU-R BT.709-6"
            },
            {
                "line_number": 5,
                "text": "green 0.300 0.600 Rec. ITU-R BT.1361-0 conventional colour gamut"
            },
            {
                "line_number": 6,
                "text": "blue 0.150 0.060 system and extended colour gamut system (historical)"
            },
            {
                "line_number": 7,
                "text": "red 0.640 0.330 IEC 61966-2-1 sRGB or sYCC"
            },
            {
                "line_number": 8,
                "text": "white D65 0.3127 0.3290 IEC 61966-2-4"
            },
            {
                "line_number": 9,
                "text": "Society of Motion Picture and Television Engineers RP"
            },
            {
                "line_number": 10,
                "text": "177 (1993) Annex B"
            },
            {
                "line_number": 11,
                "text": "2 Unspecified Image characteristics are unknown or are determined by"
            },
            {
                "line_number": 12,
                "text": "the application."
            },
            {
                "line_number": 13,
                "text": "3 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 14,
                "text": "4 primary x y Rec. ITU-R BT.470-6 System M (historical)"
            },
            {
                "line_number": 15,
                "text": "green 0.21 0.71 United States National Television System Committee"
            },
            {
                "line_number": 16,
                "text": "blue 0.14 0.08 1953 Recommendation for transmission standards for"
            },
            {
                "line_number": 17,
                "text": "colour television"
            },
            {
                "line_number": 18,
                "text": "red 0.67 0.33"
            },
            {
                "line_number": 19,
                "text": "United States Federal Communications Commission"
            },
            {
                "line_number": 20,
                "text": "white C 0.310 0.316"
            },
            {
                "line_number": 21,
                "text": "Title 47 Code of Federal Regulations (2003) 73.682 (a)"
            },
            {
                "line_number": 22,
                "text": "(20)"
            },
            {
                "line_number": 23,
                "text": "5 primary x y Rec. ITU-R BT.470-6 System B, G (historical)"
            },
            {
                "line_number": 24,
                "text": "green 0.29 0.60 Rec. ITU-R BT.601-7 625"
            },
            {
                "line_number": 25,
                "text": "blue 0.15 0.06 Rec. ITU-R BT.1358-0 625 (historical)"
            },
            {
                "line_number": 26,
                "text": "red 0.64 0.33 Rec. ITU-R BT.1700-0 625 PAL and 625 SECAM"
            },
            {
                "line_number": 27,
                "text": "white D65 0.3127 0.3290"
            },
            {
                "line_number": 28,
                "text": "6 primary x y Rec. ITU-R BT.601-7 525"
            },
            {
                "line_number": 29,
                "text": "green 0.310 0.595 Rec. ITU-R BT.1358-1 525 or 625 (historical)"
            },
            {
                "line_number": 30,
                "text": "blue 0.155 0.070 Rec. ITU-R BT.1700-0 NTSC"
            },
            {
                "line_number": 31,
                "text": "red 0.630 0.340 Society of Motion Picture and Television Engineers"
            },
            {
                "line_number": 32,
                "text": "white D65 0.3127 0.3290 170M (2004)"
            },
            {
                "line_number": 33,
                "text": "(functionally the same as the value 7)"
            },
            {
                "line_number": 34,
                "text": "7 primary x y Society of Motion Picture and Television Engineers"
            },
            {
                "line_number": 35,
                "text": "green 0.310 0.595 240M (1999, historical)"
            },
            {
                "line_number": 36,
                "text": "blue 0.155 0.070 (functionally the same as the value 6)"
            },
            {
                "line_number": 37,
                "text": "red 0.630 0.340"
            },
            {
                "line_number": 38,
                "text": "white D65 0.3127 0.3290"
            },
            {
                "line_number": 39,
                "text": "8 primary x y Generic film (colour filters using Illuminant C)"
            },
            {
                "line_number": 40,
                "text": "green 0.243 0.692 (Wratten 58)"
            },
            {
                "line_number": 41,
                "text": "blue 0.145 0.049 (Wratten 47)"
            },
            {
                "line_number": 42,
                "text": "red 0.681 0.319 (Wratten 25)"
            },
            {
                "line_number": 43,
                "text": "white C 0.310 0.316"
            },
            {
                "line_number": 44,
                "text": "9 primary x y Rec. ITU-R BT.2020-2"
            },
            {
                "line_number": 45,
                "text": "green 0.170 0.797 Rec. ITU-R BT.2100-2"
            },
            {
                "line_number": 46,
                "text": "blue 0.131 0.046"
            },
            {
                "line_number": 47,
                "text": "red 0.708 0.292"
            },
            {
                "line_number": 48,
                "text": "white D65 0.3127 0.3290"
            },
            {
                "line_number": 49,
                "text": "10 primary x y Society of Motion Picture and Television Engineers ST"
            },
            {
                "line_number": 50,
                "text": "Y 0.0 1.0 428-1 (2006)"
            },
            {
                "line_number": 51,
                "text": "Z 0.0 0.0 (CIE 1931 XYZ as in ISO 11664-1)"
            },
            {
                "line_number": 52,
                "text": "X 1.0 0.0"
            },
            {
                "line_number": 53,
                "text": "centre white 1 ÷ 3 1 ÷ 3"
            },
            {
                "line_number": 54,
                "text": "11 primary x y Society of Motion Picture and Television Engineers RP"
            },
            {
                "line_number": 55,
                "text": "green 0.265 0.690 431-2 (2011)"
            },
            {
                "line_number": 56,
                "text": "blue 0.150 0.060 Society of Motion Picture and Television Engineers RP"
            },
            {
                "line_number": 57,
                "text": "ST 2113 (2019) \"P3DCI\""
            },
            {
                "line_number": 58,
                "text": "red 0.680 0.320"
            },
            {
                "line_number": 59,
                "text": "white 0.314 0.351"
            },
            {
                "line_number": 60,
                "text": "420 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 443,
        "lines": [
            {
                "line_number": 1,
                "text": "12 primary x y Society of Motion Picture and Television Engineers EG"
            },
            {
                "line_number": 2,
                "text": "green 0.265 0.690 432-1 (2010)"
            },
            {
                "line_number": 3,
                "text": "blue 0.150 0.060 Society of Motion Picture and Television Engineers ST"
            },
            {
                "line_number": 4,
                "text": "2113 (2019) \"P3D65\""
            },
            {
                "line_number": 5,
                "text": "red 0.680 0.320"
            },
            {
                "line_number": 6,
                "text": "white D65 0.3127 0.3290"
            },
            {
                "line_number": 7,
                "text": "13..21 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 8,
                "text": "22 primary x y EBU Tech. 3213-E (1975)"
            },
            {
                "line_number": 9,
                "text": "green 0.295 0.605"
            },
            {
                "line_number": 10,
                "text": "blue 0.155 0.077"
            },
            {
                "line_number": 11,
                "text": "red 0.630 0.340"
            },
            {
                "line_number": 12,
                "text": "white D65 0.3127 0.3290"
            },
            {
                "line_number": 13,
                "text": "23..255 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 14,
                "text": "transfer_characteristics, as specified in Table E-4, either indicates the reference opto-electronic transfer characteristic"
            },
            {
                "line_number": 15,
                "text": "function of the source picture as a function of a source input linear optical intensity input L with a nominal real-valued"
            },
            {
                "line_number": 16,
                "text": "c"
            },
            {
                "line_number": 17,
                "text": "range of 0 to 1 or indicates the inverse of the reference electro-optical transfer characteristic function as a function of an"
            },
            {
                "line_number": 18,
                "text": "output linear optical intensity L with a nominal real-valued range of 0 to 1. For interpretation of entries in Table E-4 that"
            },
            {
                "line_number": 19,
                "text": "o"
            },
            {
                "line_number": 20,
                "text": "are expressed in terms of multiple curve segments parameterized by the variable  over a region bounded by the variable"
            },
            {
                "line_number": 21,
                "text": " or by the variables  and , the values of  and  are defined to be the positive constants necessary for the curve segments"
            },
            {
                "line_number": 22,
                "text": "that meet at the value  to have continuity of both value and slope at the value . The value of , when applicable, is defined"
            },
            {
                "line_number": 23,
                "text": "to be the positive constant necessary for the associated curve segments to meet at the value . For example, for"
            },
            {
                "line_number": 24,
                "text": "transfer_characteristics equal to 1, 6, 11, 14, or 15,  has the value 1 + 5.5 *  = 1.099 296 826 809 442... and  has the"
            },
            {
                "line_number": 25,
                "text": "value 0.018 053 968 510 807...."
            },
            {
                "line_number": 26,
                "text": "When video_full_range_flag is equal to 1 and either or both of the following conditions apply, transfer_characteristics"
            },
            {
                "line_number": 27,
                "text": "shall not be equal to 16 or 18:"
            },
            {
                "line_number": 28,
                "text": "– BitDepth is less than 10."
            },
            {
                "line_number": 29,
                "text": "Y"
            },
            {
                "line_number": 30,
                "text": "– chroma_format_idc is not equal to 0 (monochrome) and BitDepth is less than 10."
            },
            {
                "line_number": 31,
                "text": "C"
            },
            {
                "line_number": 32,
                "text": "When the transfer_characteristics syntax element is not present, the value of transfer_characteristics shall be inferred to be"
            },
            {
                "line_number": 33,
                "text": "equal to 2 (the transfer characteristics are unspecified or are determined by the application). Values of"
            },
            {
                "line_number": 34,
                "text": "transfer_characteristics that are identified as reserved in Table E-4 are reserved for future use by ITU-T | ISO/IEC and"
            },
            {
                "line_number": 35,
                "text": "shall not be present in bitstreams conforming to this version of this Specification. Decoders shall interpret reserved values"
            },
            {
                "line_number": 36,
                "text": "of transfer_characteristics as equivalent to the value 2."
            },
            {
                "line_number": 37,
                "text": "NOTE 3 – As indicated in Table E-4, some values of transfer_characteristics are defined in terms of a reference opto-electronic"
            },
            {
                "line_number": 38,
                "text": "transfer characteristic function and others are defined in terms of a reference electro-optical transfer characteristic function,"
            },
            {
                "line_number": 39,
                "text": "according to the convention that has been applied in other Specifications. In the cases of Rec. ITU-R BT.709-6 and Rec. ITU-R"
            },
            {
                "line_number": 40,
                "text": "BT.2020-2 (which may be indicated by transfer_characteristics equal to 1, 6, 14, or 15), although the value is defined in terms of a"
            },
            {
                "line_number": 41,
                "text": "reference opto-electronic transfer characteristic function, a suggested corresponding reference electro-optical transfer characteristic"
            },
            {
                "line_number": 42,
                "text": "function for flat panel displays used in HDTV studio production has been specified in Rec. ITU-R BT.1886-0."
            },
            {
                "line_number": 43,
                "text": "Table E-4 – Transfer characteristics interpretation using transfer_characteristics syntax element"
            },
            {
                "line_number": 44,
                "text": "Value Transfer characteristic Informative remark"
            },
            {
                "line_number": 45,
                "text": "0 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 46,
                "text": "1 V =  * Lc 0.45 − (  − 1 ) for 1 >= Lc >=  Rec. ITU-R BT.709-6"
            },
            {
                "line_number": 47,
                "text": "V = 4.500 * Lc for  > Lc >= 0 Rec. ITU-R BT.1361-0 conventional"
            },
            {
                "line_number": 48,
                "text": "colour gamut system (historical)"
            },
            {
                "line_number": 49,
                "text": "(functionally the same as the value 6,"
            },
            {
                "line_number": 50,
                "text": "14, and 15)"
            },
            {
                "line_number": 51,
                "text": "2 Unspecified Image characteristics are unknown or"
            },
            {
                "line_number": 52,
                "text": "are determined by the application."
            },
            {
                "line_number": 53,
                "text": "3 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 54,
                "text": "Rec. ITU-T H.264 (06/2019) 421"
            }
        ]
    },
    {
        "page_number": 444,
        "lines": [
            {
                "line_number": 1,
                "text": "4 Assumed display gamma 2.2 Rec. ITU-R BT.470-6 System M"
            },
            {
                "line_number": 2,
                "text": "(historical)"
            },
            {
                "line_number": 3,
                "text": "United States National Television"
            },
            {
                "line_number": 4,
                "text": "System Committee 1953"
            },
            {
                "line_number": 5,
                "text": "Recommendation for transmission"
            },
            {
                "line_number": 6,
                "text": "standards for colour television"
            },
            {
                "line_number": 7,
                "text": "United States Federal"
            },
            {
                "line_number": 8,
                "text": "Communications Commission Title 47"
            },
            {
                "line_number": 9,
                "text": "Code of Federal Regulations (2003)"
            },
            {
                "line_number": 10,
                "text": "73.682 (a) (20)"
            },
            {
                "line_number": 11,
                "text": "Rec. ITU-R BT.1700-0 625 PAL and"
            },
            {
                "line_number": 12,
                "text": "625 SECAM"
            },
            {
                "line_number": 13,
                "text": "5 Assumed display gamma 2.8 Rec. ITU-R BT.470-6 System B, G"
            },
            {
                "line_number": 14,
                "text": "(historical)"
            },
            {
                "line_number": 15,
                "text": "6 V =  * Lc 0.45 − (  − 1 ) for 1 >= Lc >=  Rec. ITU-R BT.601-7 525 or 625"
            },
            {
                "line_number": 16,
                "text": "V = 4.500 * Lc for  > Lc >= 0 Rec. ITU-R BT.1358-1 525 or 625"
            },
            {
                "line_number": 17,
                "text": "(historical)"
            },
            {
                "line_number": 18,
                "text": "Rec. ITU-R BT.1700-0 NTSC"
            },
            {
                "line_number": 19,
                "text": "Society of Motion Picture and"
            },
            {
                "line_number": 20,
                "text": "Television Engineers 170M (2004)"
            },
            {
                "line_number": 21,
                "text": "(functionally the same as the value 1)"
            },
            {
                "line_number": 22,
                "text": "7 V =  * Lc 0.45 − (  − 1 ) for 1 >= Lc >=  Society of Motion Picture and"
            },
            {
                "line_number": 23,
                "text": "Television Engineers 240M (1999,"
            },
            {
                "line_number": 24,
                "text": "V = 4.0 * Lc for  > Lc >= 0"
            },
            {
                "line_number": 25,
                "text": "historical)"
            },
            {
                "line_number": 26,
                "text": "8 V = Lc for 1 > Lc >= 0 Linear transfer characteristics"
            },
            {
                "line_number": 27,
                "text": "9 V = 1.0 + Log10( Lc ) ÷ 2 for 1 >= Lc >= 0.01 Logarithmic transfer characteristic"
            },
            {
                "line_number": 28,
                "text": "(100:1 range)"
            },
            {
                "line_number": 29,
                "text": "V = 0.0 for 0.01 > Lc >= 0"
            },
            {
                "line_number": 30,
                "text": "10 V = 1.0 + Log10( Lc ) ÷ 2.5 for 1 >= Lc >= Sqrt( 10 ) ÷ 1000 Logarithmic transfer characteristic"
            },
            {
                "line_number": 31,
                "text": "(100 * Sqrt( 10 ) : 1 range)"
            },
            {
                "line_number": 32,
                "text": "V = 0.0 for Sqrt( 10 ) ÷ 1000 > Lc >= 0"
            },
            {
                "line_number": 33,
                "text": "11 V =  * Lc 0.45 − (  − 1 ) for Lc >=  IEC 61966-2-4"
            },
            {
                "line_number": 34,
                "text": "V = 4.500 * Lc for  > Lc > −"
            },
            {
                "line_number": 35,
                "text": "V = − * ( −Lc )0.45 + (  − 1 ) for − >= Lc"
            },
            {
                "line_number": 36,
                "text": "12 V =  * Lc 0.45 − (  − 1 ) for 1.33 > Lc >=  Rec. ITU-R BT.1361-0 extended"
            },
            {
                "line_number": 37,
                "text": "colour gamut system (historical)"
            },
            {
                "line_number": 38,
                "text": "V = 4.500 * Lc for  > Lc >= −"
            },
            {
                "line_number": 39,
                "text": "V = −(  * ( −4 * Lc )0.45 − (  − 1 ) ) ÷ 4 for − >= Lc >= −0.25"
            },
            {
                "line_number": 40,
                "text": "13 V =  * Lc ( 1÷2.4 ) − (  − 1 ) for 1 > Lc >=  IEC 61966-2-1 sRGB or sYCC"
            },
            {
                "line_number": 41,
                "text": "V = 12.92 * Lc for  > Lc >= 0"
            },
            {
                "line_number": 42,
                "text": "14 V =  * Lc 0.45 − (  − 1 ) for 1 >= Lc >=  Rec. ITU-R BT.2020-2 (10 bit system)"
            },
            {
                "line_number": 43,
                "text": "(functionally the same as the values 1,"
            },
            {
                "line_number": 44,
                "text": "V = 4.500 * Lc for  > Lc >= 0"
            },
            {
                "line_number": 45,
                "text": "6, and 15)"
            },
            {
                "line_number": 46,
                "text": "15 V =  * Lc 0.45 − (  − 1 ) for 1 >= Lc >=  Rec. ITU-R BT.2020-2 (12 bit system)"
            },
            {
                "line_number": 47,
                "text": "(functionally the same as the values 1,"
            },
            {
                "line_number": 48,
                "text": "V = 4.500 * Lc for  > Lc >= 0"
            },
            {
                "line_number": 49,
                "text": "6, and 15)"
            },
            {
                "line_number": 50,
                "text": "16 V = ( ( c1 + c2 * Lo n ) ÷ ( 1 + c3 * Lo n ) )m for all values of Lo Society of Motion Picture and"
            },
            {
                "line_number": 51,
                "text": "Television Engineers ST 2084 for 10,"
            },
            {
                "line_number": 52,
                "text": "c1 = c3 − c2 + 1 = 107 ÷ 128 = 0.8359375"
            },
            {
                "line_number": 53,
                "text": "12, 14, and 16-bit systems (2014)"
            },
            {
                "line_number": 54,
                "text": "c2 = 2413 ÷ 128 = 18.8515625"
            },
            {
                "line_number": 55,
                "text": "Rec. ITU-R BT.2100-2 perceptual"
            },
            {
                "line_number": 56,
                "text": "c3 = 2392 ÷ 128 = 18.6875 quantization (PQ) system"
            },
            {
                "line_number": 57,
                "text": "m = 2523 ÷ 32 = 78.84375"
            },
            {
                "line_number": 58,
                "text": "n = 653 ÷ 4096 = 0.1593017578125"
            },
            {
                "line_number": 59,
                "text": "for which Lo equal to 1 for peak white is ordinarily intended to correspond to a"
            },
            {
                "line_number": 60,
                "text": "reference output luminance level of 10 000 candelas per square metre"
            },
            {
                "line_number": 61,
                "text": "17 V = ( 48 * Lo ÷ 52.37 )( 1 ÷ 2.6 ) for all values of Lo Society of Motion Picture and"
            },
            {
                "line_number": 62,
                "text": "Television Engineers ST 428-1 (2006)"
            },
            {
                "line_number": 63,
                "text": "for which Lo equal to 1 for peak white is ordinarily intended to correspond to a"
            },
            {
                "line_number": 64,
                "text": "reference output luminance level of 48 candelas per square metre"
            },
            {
                "line_number": 65,
                "text": "422 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 445,
        "lines": [
            {
                "line_number": 1,
                "text": "18 V = a * Ln( 12 * Lc − b ) + c for 1 >= Lc > 1 ÷ 12 Association of Radio Industries and"
            },
            {
                "line_number": 2,
                "text": "V = Sqrt( 3 ) * Lc 0.5 for 1 ÷ 12 >= Lc >= 0 Businesses (ARIB) STD-B67"
            },
            {
                "line_number": 3,
                "text": "Rec. ITU-R BT.2100-2 hybrid log-"
            },
            {
                "line_number": 4,
                "text": "a = 0.17883277"
            },
            {
                "line_number": 5,
                "text": "gamma (HLG) system"
            },
            {
                "line_number": 6,
                "text": "b = 0.28466892"
            },
            {
                "line_number": 7,
                "text": "c = 0.55991073"
            },
            {
                "line_number": 8,
                "text": "19..255 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 9,
                "text": "NOTE 4 – For transfer_characteristics equal to 18, the equations given in Table E-4 are normalized for a source input linear optical"
            },
            {
                "line_number": 10,
                "text": "intensity Lc with a nominal real-valued range of 0 to 1. An alternative scaling that is mathematically equivalent is used in ARIB"
            },
            {
                "line_number": 11,
                "text": "STD-B67 with the source input linear optical intensity having a nominal real-valued range of 0 to 12."
            },
            {
                "line_number": 12,
                "text": "matrix_coefficients describes the matrix coefficients used in deriving luma and chroma signals from the green, blue, and"
            },
            {
                "line_number": 13,
                "text": "red, or Y, Z, and X primaries, as specified in Table E-5."
            },
            {
                "line_number": 14,
                "text": "matrix_coefficients shall not be equal to 0 unless both of the following conditions are true:"
            },
            {
                "line_number": 15,
                "text": "– BitDepth is equal to BitDepth ,"
            },
            {
                "line_number": 16,
                "text": "C Y"
            },
            {
                "line_number": 17,
                "text": "– chroma_format_idc is equal to 3 (4:4:4)."
            },
            {
                "line_number": 18,
                "text": "The specification of the use of matrix_coefficients equal to 0 under all other conditions is reserved for future use by"
            },
            {
                "line_number": 19,
                "text": "ITU-T | ISO/IEC."
            },
            {
                "line_number": 20,
                "text": "matrix_coefficients shall not be equal to 8 unless one of the following conditions is true:"
            },
            {
                "line_number": 21,
                "text": "– BitDepth is equal to BitDepth ,"
            },
            {
                "line_number": 22,
                "text": "C Y"
            },
            {
                "line_number": 23,
                "text": "– BitDepth is equal to BitDepth + 1 and chroma_format_idc is equal to 3 (4:4:4)."
            },
            {
                "line_number": 24,
                "text": "C Y"
            },
            {
                "line_number": 25,
                "text": "The specification of the use of matrix_coefficients equal to 8 under all other conditions is reserved for future use by"
            },
            {
                "line_number": 26,
                "text": "ITU-T | ISO/IEC."
            },
            {
                "line_number": 27,
                "text": "When the matrix_coefficients syntax element is not present, the value of matrix_coefficients is inferred to be equal to 2"
            },
            {
                "line_number": 28,
                "text": "(unspecified)."
            },
            {
                "line_number": 29,
                "text": "The interpretation of matrix_coefficients, together with colour_primaries and transfer_characteristics, is specified by the"
            },
            {
                "line_number": 30,
                "text": "equations below."
            },
            {
                "line_number": 31,
                "text": "NOTE 5 – For purposes of YZX representation when matrix_coefficients is equal to 0, the symbols R, G, and B would be substituted"
            },
            {
                "line_number": 32,
                "text": "for X, Y, and Z, respectively, in the following descriptions of Equations E-1 to E-3, E-13 to E-15, E-19 to E-21, E-28 to E-30, and"
            },
            {
                "line_number": 33,
                "text": "E-31 to E-33."
            },
            {
                "line_number": 34,
                "text": "E , E , and E are defined as \"linear-domain\" real-valued signals based on the indicated colour primaries before application"
            },
            {
                "line_number": 35,
                "text": "R G B"
            },
            {
                "line_number": 36,
                "text": "of the transfer characteristics function."
            },
            {
                "line_number": 37,
                "text": "Nominal white is specified as having E equal to 1, E equal to 1, and E equal to 1."
            },
            {
                "line_number": 38,
                "text": "R G B"
            },
            {
                "line_number": 39,
                "text": "Nominal black is specified as having E equal to 0, E equal to 0, and E equal to 0."
            },
            {
                "line_number": 40,
                "text": "R G B"
            },
            {
                "line_number": 41,
                "text": "The application of the transfer characteristics function is denoted by ( x )′ for an argument x."
            },
            {
                "line_number": 42,
                "text": "– If matrix_coefficients is not equal to 14, the signals E′ , E′ , and E′ are determined by application of the transfer"
            },
            {
                "line_number": 43,
                "text": "R G B"
            },
            {
                "line_number": 44,
                "text": "characteristics function as follows:"
            },
            {
                "line_number": 45,
                "text": "E′ = ( E )′ (E-1)"
            },
            {
                "line_number": 46,
                "text": "R R"
            },
            {
                "line_number": 47,
                "text": "E′ = ( E )′ (E-2)"
            },
            {
                "line_number": 48,
                "text": "G G"
            },
            {
                "line_number": 49,
                "text": "E′ = ( E )′ (E-3)"
            },
            {
                "line_number": 50,
                "text": "B B"
            },
            {
                "line_number": 51,
                "text": "In this case, the range of E′ , E′ , and E′ is specified as follows:"
            },
            {
                "line_number": 52,
                "text": "R G B"
            },
            {
                "line_number": 53,
                "text": "– If transfer_characteristics is not equal to 11 or 12, E′ , E′ , and E′ are real numbers with values in the range of"
            },
            {
                "line_number": 54,
                "text": "R G B"
            },
            {
                "line_number": 55,
                "text": "0 to 1."
            },
            {
                "line_number": 56,
                "text": "– Otherwise (transfer_characteristics is equal to 11 (IEC 61966-2-4) or 12 (Rec. ITU-R BT.1361-0 extended colour"
            },
            {
                "line_number": 57,
                "text": "gamut system)), E′ , E′ and E′ are real numbers with a larger range not specified in this Specification."
            },
            {
                "line_number": 58,
                "text": "R G B"
            },
            {
                "line_number": 59,
                "text": "– Otherwise (matrix_coefficients is equal to 14), the \"linear-domain\" real-valued signals E , E , and E are determined"
            },
            {
                "line_number": 60,
                "text": "L M S"
            },
            {
                "line_number": 61,
                "text": "as follows:"
            },
            {
                "line_number": 62,
                "text": "Rec. ITU-T H.264 (06/2019) 423"
            }
        ]
    },
    {
        "page_number": 446,
        "lines": [
            {
                "line_number": 1,
                "text": "E = ( 1688 * E + 2146 * E + 262 * E ) ÷ 4096 (E-4)"
            },
            {
                "line_number": 2,
                "text": "L R G B"
            },
            {
                "line_number": 3,
                "text": "E = ( 683 * E + 2951 * E + 462 * E ) ÷ 4096 (E-5)"
            },
            {
                "line_number": 4,
                "text": "M R G B"
            },
            {
                "line_number": 5,
                "text": "E = ( 99 * E + 309 * E + 3688 * E ) ÷ 4096 (E-6)"
            },
            {
                "line_number": 6,
                "text": "S R G B"
            },
            {
                "line_number": 7,
                "text": "In this case, the signals E′ , E′ , and E′ are determined by application of the transfer characteristics function as"
            },
            {
                "line_number": 8,
                "text": "L M S"
            },
            {
                "line_number": 9,
                "text": "follows:"
            },
            {
                "line_number": 10,
                "text": "E′ = ( E )′ (E-7)"
            },
            {
                "line_number": 11,
                "text": "L L"
            },
            {
                "line_number": 12,
                "text": "E′ = ( E )′ (E-8)"
            },
            {
                "line_number": 13,
                "text": "M M"
            },
            {
                "line_number": 14,
                "text": "E′ = ( E )′ (E-9)"
            },
            {
                "line_number": 15,
                "text": "S S"
            },
            {
                "line_number": 16,
                "text": "The interpretation of matrix_coefficients is specified as follows:"
            },
            {
                "line_number": 17,
                "text": "– If video_full_range_flag is equal to 0, the following applies:"
            },
            {
                "line_number": 18,
                "text": "– If matrix_coefficients is equal to 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, or 14, the following equations apply:"
            },
            {
                "line_number": 19,
                "text": "Y = Clip1 ( Round( ( 1 << ( BitDepth − 8 ) ) * ( 219 * E′ + 16 ) ) ) (E-10)"
            },
            {
                "line_number": 20,
                "text": "Y Y Y"
            },
            {
                "line_number": 21,
                "text": "Cb = Clip1 ( Round( ( 1 << ( BitDepth − 8 ) ) * ( 224 * E′ + 128 ) ) ) (E-11)"
            },
            {
                "line_number": 22,
                "text": "C C PB"
            },
            {
                "line_number": 23,
                "text": "Cr = Clip1 ( Round( ( 1 << ( BitDepth − 8 ) ) * ( 224 * E′ + 128 ) ) ) (E-12)"
            },
            {
                "line_number": 24,
                "text": "C C PR"
            },
            {
                "line_number": 25,
                "text": "– Otherwise, if matrix_coefficients is equal to 0 or 8, the following equations apply:"
            },
            {
                "line_number": 26,
                "text": "R = Clip1 ( ( 1 << ( BitDepth − 8 ) ) * ( 219 * E′ + 16 ) ) (E-13)"
            },
            {
                "line_number": 27,
                "text": "Y Y R"
            },
            {
                "line_number": 28,
                "text": "G = Clip1 ( ( 1 << ( BitDepth − 8 ) ) * ( 219 * E′ + 16 ) ) (E-14)"
            },
            {
                "line_number": 29,
                "text": "Y Y G"
            },
            {
                "line_number": 30,
                "text": "B = Clip1 ( ( 1 << ( BitDepth − 8 ) ) * ( 219 * E′ + 16 ) ) (E-15)"
            },
            {
                "line_number": 31,
                "text": "Y Y B"
            },
            {
                "line_number": 32,
                "text": "– Otherwise, if matrix_coefficients is equal to 2, the interpretation of the matrix_coefficients syntax element is"
            },
            {
                "line_number": 33,
                "text": "unknown or is determined by the application."
            },
            {
                "line_number": 34,
                "text": "– Otherwise (matrix_coefficients is not equal to 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, or 14), the interpretation of"
            },
            {
                "line_number": 35,
                "text": "the matrix_coefficients syntax element is reserved for future definition by ITU-T | ISO/IEC."
            },
            {
                "line_number": 36,
                "text": "– Otherwise (video_full_range_flag is equal to 1), the following applies:"
            },
            {
                "line_number": 37,
                "text": "– If matrix_coefficients is equal to 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, or 14, the following equations apply:"
            },
            {
                "line_number": 38,
                "text": "Y = Clip1 ( Round( ( ( 1 << BitDepth ) − 1 ) * E′ ) ) (E-16)"
            },
            {
                "line_number": 39,
                "text": "Y Y Y"
            },
            {
                "line_number": 40,
                "text": "Cb = Clip1 ( Round( ( ( 1 << BitDepth ) − 1 ) * E′ + ( 1 << ( BitDepth − 1 ) ) ) ) (E-17)"
            },
            {
                "line_number": 41,
                "text": "C C PB C"
            },
            {
                "line_number": 42,
                "text": "Cr = Clip1 ( Round( ( ( 1 << BitDepth ) − 1 ) * E′ + ( 1 << ( BitDepth − 1 ) ) ) ) (E-18)"
            },
            {
                "line_number": 43,
                "text": "C C PR C"
            },
            {
                "line_number": 44,
                "text": "– Otherwise, if matrix_coefficients is equal to 0 or 8, the following equations apply:"
            },
            {
                "line_number": 45,
                "text": "R = Clip1 ( ( ( 1 << BitDepth ) − 1 ) * E′ ) (E-19)"
            },
            {
                "line_number": 46,
                "text": "Y Y R"
            },
            {
                "line_number": 47,
                "text": "G = Clip1 ( ( ( 1 << BitDepth ) − 1 ) * E′ ) (E-20)"
            },
            {
                "line_number": 48,
                "text": "Y Y G"
            },
            {
                "line_number": 49,
                "text": "B = Clip1 ( ( ( 1 << BitDepth ) − 1 ) * E′ ) (E-21)"
            },
            {
                "line_number": 50,
                "text": "Y Y B"
            },
            {
                "line_number": 51,
                "text": "– Otherwise, if matrix_coefficients is equal to 2, the interpretation of the matrix_coefficients syntax element is"
            },
            {
                "line_number": 52,
                "text": "unknown or is determined by the application."
            },
            {
                "line_number": 53,
                "text": "– Otherwise (matrix_coefficients is not equal to 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, or 14), the interpretation of"
            },
            {
                "line_number": 54,
                "text": "the matrix_coefficients syntax element is reserved for future definition by ITU-T | ISO/IEC."
            },
            {
                "line_number": 55,
                "text": "Reserved values for matrix_coefficients shall not be present in bitstreams conforming to this version of this Specification."
            },
            {
                "line_number": 56,
                "text": "Decoders shall interpret reserved values of matrix_coefficients as equivalent to the value 2."
            },
            {
                "line_number": 57,
                "text": "424 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 447,
        "lines": [
            {
                "line_number": 1,
                "text": "It is a requirement of bitstream conformance to this version of this Specification that when colour_primaries is not equal"
            },
            {
                "line_number": 2,
                "text": "to 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, or 22, matrix_coefficients shall not be equal to 12 or 13."
            },
            {
                "line_number": 3,
                "text": "When matrix_coefficients is equal to 1, 4, 5, 6, 7, 9, 10, 11, 12, or 13, the constants K and K are specified as follows:"
            },
            {
                "line_number": 4,
                "text": "R B"
            },
            {
                "line_number": 5,
                "text": "– If matrix_coefficients is not equal to 12 or 13, the constants K and K are specified in Table E-5."
            },
            {
                "line_number": 6,
                "text": "R B"
            },
            {
                "line_number": 7,
                "text": "– Otherwise (matrix_coefficients is equal to 12 or 13), the constants K and K are computed as follows, using the"
            },
            {
                "line_number": 8,
                "text": "R B"
            },
            {
                "line_number": 9,
                "text": "chromaticity coordinates (x , y ), (x , y ), (x , y ), and (x , y ) specified by Table E-3 for the colour_primaries"
            },
            {
                "line_number": 10,
                "text": "R R G G B B W W"
            },
            {
                "line_number": 11,
                "text": "syntax element for the red, green, blue, and white colour primaries, respectively:"
            },
            {
                "line_number": 12,
                "text": "K ="
            },
            {
                "line_number": 13,
                "text": "y"
            },
            {
                "line_number": 14,
                "text": "R"
            },
            {
                "line_number": 15,
                "text": "*(x"
            },
            {
                "line_number": 16,
                "text": "W"
            },
            {
                "line_number": 17,
                "text": "*(y"
            },
            {
                "line_number": 18,
                "text": "G"
            },
            {
                "line_number": 19,
                "text": "*z"
            },
            {
                "line_number": 20,
                "text": "B"
            },
            {
                "line_number": 21,
                "text": "y"
            },
            {
                "line_number": 22,
                "text": "B"
            },
            {
                "line_number": 23,
                "text": "*z"
            },
            {
                "line_number": 24,
                "text": "G"
            },
            {
                "line_number": 25,
                "text": ")y"
            },
            {
                "line_number": 26,
                "text": "W"
            },
            {
                "line_number": 27,
                "text": "*(x"
            },
            {
                "line_number": 28,
                "text": "B"
            },
            {
                "line_number": 29,
                "text": "*z"
            },
            {
                "line_number": 30,
                "text": "G"
            },
            {
                "line_number": 31,
                "text": "x"
            },
            {
                "line_number": 32,
                "text": "G"
            },
            {
                "line_number": 33,
                "text": "*z"
            },
            {
                "line_number": 34,
                "text": "B"
            },
            {
                "line_number": 35,
                "text": ")z"
            },
            {
                "line_number": 36,
                "text": "W"
            },
            {
                "line_number": 37,
                "text": "*(x"
            },
            {
                "line_number": 38,
                "text": "G"
            },
            {
                "line_number": 39,
                "text": "*y"
            },
            {
                "line_number": 40,
                "text": "B"
            },
            {
                "line_number": 41,
                "text": "x"
            },
            {
                "line_number": 42,
                "text": "B"
            },
            {
                "line_number": 43,
                "text": "*y"
            },
            {
                "line_number": 44,
                "text": "G"
            },
            {
                "line_number": 45,
                "text": "))"
            },
            {
                "line_number": 46,
                "text": "(E-22)"
            },
            {
                "line_number": 47,
                "text": "R"
            },
            {
                "line_number": 48,
                "text": "y *(x *(y *z y *z )x *(y *z y *z )x *(y *z y *z ))"
            },
            {
                "line_number": 49,
                "text": "W R G B B G G B R R B B R G G R"
            },
            {
                "line_number": 50,
                "text": "K ="
            },
            {
                "line_number": 51,
                "text": "y"
            },
            {
                "line_number": 52,
                "text": "B"
            },
            {
                "line_number": 53,
                "text": "*(x"
            },
            {
                "line_number": 54,
                "text": "W"
            },
            {
                "line_number": 55,
                "text": "*(y"
            },
            {
                "line_number": 56,
                "text": "R"
            },
            {
                "line_number": 57,
                "text": "*z"
            },
            {
                "line_number": 58,
                "text": "G"
            },
            {
                "line_number": 59,
                "text": "y"
            },
            {
                "line_number": 60,
                "text": "G"
            },
            {
                "line_number": 61,
                "text": "*z"
            },
            {
                "line_number": 62,
                "text": "R"
            },
            {
                "line_number": 63,
                "text": ")y"
            },
            {
                "line_number": 64,
                "text": "W"
            },
            {
                "line_number": 65,
                "text": "*(x"
            },
            {
                "line_number": 66,
                "text": "G"
            },
            {
                "line_number": 67,
                "text": "*z"
            },
            {
                "line_number": 68,
                "text": "R"
            },
            {
                "line_number": 69,
                "text": "x"
            },
            {
                "line_number": 70,
                "text": "R"
            },
            {
                "line_number": 71,
                "text": "*z"
            },
            {
                "line_number": 72,
                "text": "G"
            },
            {
                "line_number": 73,
                "text": ")z"
            },
            {
                "line_number": 74,
                "text": "W"
            },
            {
                "line_number": 75,
                "text": "*(x"
            },
            {
                "line_number": 76,
                "text": "R"
            },
            {
                "line_number": 77,
                "text": "*y"
            },
            {
                "line_number": 78,
                "text": "G"
            },
            {
                "line_number": 79,
                "text": "x"
            },
            {
                "line_number": 80,
                "text": "G"
            },
            {
                "line_number": 81,
                "text": "*y"
            },
            {
                "line_number": 82,
                "text": "R"
            },
            {
                "line_number": 83,
                "text": "))"
            },
            {
                "line_number": 84,
                "text": "(E-23)"
            },
            {
                "line_number": 85,
                "text": "B"
            },
            {
                "line_number": 86,
                "text": "y *(x *(y *z y *z )x *(y *z y *z )x *(y *z y *z ))"
            },
            {
                "line_number": 87,
                "text": "W R G B B G G B R R B B R G G R"
            },
            {
                "line_number": 88,
                "text": "where the values of z , z , z , and z , are given by."
            },
            {
                "line_number": 89,
                "text": "R G B W"
            },
            {
                "line_number": 90,
                "text": "z = 1 − ( x + y ) (E-24)"
            },
            {
                "line_number": 91,
                "text": "R R R"
            },
            {
                "line_number": 92,
                "text": "z = 1 − ( x + y ) (E-25)"
            },
            {
                "line_number": 93,
                "text": "G G G"
            },
            {
                "line_number": 94,
                "text": "z = 1 − ( x + y ) (E-26)"
            },
            {
                "line_number": 95,
                "text": "B B B"
            },
            {
                "line_number": 96,
                "text": "z = 1 − ( x + y ) (E-27)"
            },
            {
                "line_number": 97,
                "text": "W W W"
            },
            {
                "line_number": 98,
                "text": "The variables E′ , E′ , and E′ (for matrix_coefficients not equal to 0 or 8) or Y, Cb, and Cr (for matrix_coefficients"
            },
            {
                "line_number": 99,
                "text": "Y PB PR"
            },
            {
                "line_number": 100,
                "text": "equal to 0 or 8) are specified as follows:"
            },
            {
                "line_number": 101,
                "text": "– If matrix_coefficients is not equal to 0, 8, 10, 11, 13, or 14, the following equations apply:"
            },
            {
                "line_number": 102,
                "text": "E′ = K * E′ + ( 1 − K − K ) * E′ + K * E′"
            },
            {
                "line_number": 103,
                "text": "Y R R R B G B B"
            },
            {
                "line_number": 104,
                "text": "(E-28)"
            },
            {
                "line_number": 105,
                "text": "E′ = 0.5 * ( E′ − E′ ) ÷ ( 1 − K ) (E-29)"
            },
            {
                "line_number": 106,
                "text": "PB B Y B"
            },
            {
                "line_number": 107,
                "text": "E′ = 0.5 * ( E′ − E′ ) ÷ ( 1 − K ) (E-30)"
            },
            {
                "line_number": 108,
                "text": "PR R Y R"
            },
            {
                "line_number": 109,
                "text": "E′ is a real number with the value 0 associated with nominal black and the value 1 associated with nominal white."
            },
            {
                "line_number": 110,
                "text": "Y"
            },
            {
                "line_number": 111,
                "text": "E′ and E′ are real numbers with the value 0 associated with both nominal black and nominal white. When"
            },
            {
                "line_number": 112,
                "text": "PB PR"
            },
            {
                "line_number": 113,
                "text": "transfer_characteristics is not equal to 11 or 12, E′ is a real number with values in the range of 0 to 1. When"
            },
            {
                "line_number": 114,
                "text": "Y"
            },
            {
                "line_number": 115,
                "text": "transfer_characteristics is not equal to 11 or 12, E′ and E′ are real numbers with values in the range of −0.5 to 0.5."
            },
            {
                "line_number": 116,
                "text": "PB PR"
            },
            {
                "line_number": 117,
                "text": "When transfer_characteristics is equal to 11, or 12, E′ , E′ and E′ are real numbers with a larger range not specified"
            },
            {
                "line_number": 118,
                "text": "Y PB PR"
            },
            {
                "line_number": 119,
                "text": "in this Specification."
            },
            {
                "line_number": 120,
                "text": "– Otherwise, if matrix_coefficients is equal to 0, the following equations apply:"
            },
            {
                "line_number": 121,
                "text": "Y = Round( G ) (E-31)"
            },
            {
                "line_number": 122,
                "text": "Cb = Round( B ) (E-32)"
            },
            {
                "line_number": 123,
                "text": "Cr = Round( R ) (E-33)"
            },
            {
                "line_number": 124,
                "text": "– Otherwise, if matrix_coefficients is equal to 8, the following applies:"
            },
            {
                "line_number": 125,
                "text": "– If BitDepth is equal to BitDepth , the following equations apply:"
            },
            {
                "line_number": 126,
                "text": "C Y"
            },
            {
                "line_number": 127,
                "text": "Y = Round( 0.5 * G + 0.25 * ( R + B ) ) (E-34)"
            },
            {
                "line_number": 128,
                "text": "Cb = Round( 0.5 * G − 0.25 * ( R + B ) ) + ( 1 << ( BitDepth − 1 ) ) (E-35)"
            },
            {
                "line_number": 129,
                "text": "C"
            },
            {
                "line_number": 130,
                "text": "Cr = Round( 0.5 * ( R − B ) ) + ( 1 << ( BitDepth − 1 ) ) (E-36)"
            },
            {
                "line_number": 131,
                "text": "C"
            },
            {
                "line_number": 132,
                "text": "Rec. ITU-T H.264 (06/2019) 425"
            }
        ]
    },
    {
        "page_number": 448,
        "lines": [
            {
                "line_number": 1,
                "text": "NOTE 6 – In this case, for purposes of the YCgCo nomenclature used in Table E-5, Cb and Cr of Equations E-35 and E-36"
            },
            {
                "line_number": 2,
                "text": "would be referred to as Cg and Co, respectively. An appropriate inverse conversion for Equations E-34 to E-36 is as follows:"
            },
            {
                "line_number": 3,
                "text": "t = Y − ( Cb − ( 1 << ( BitDepthC − 1 ) ) ) (E-37)"
            },
            {
                "line_number": 4,
                "text": "G = Clip1Y( Y + ( Cb − ( 1 << ( BitDepthC − 1 ) ) ) ) (E-38)"
            },
            {
                "line_number": 5,
                "text": "B = Clip1Y( t − ( Cr − ( 1 << ( BitDepthC − 1 ) ) ) ) (E-39)"
            },
            {
                "line_number": 6,
                "text": "R = Clip1Y( t + ( Cr − ( 1 << ( BitDepthC − 1 ) ) ) ) (E-40)"
            },
            {
                "line_number": 7,
                "text": "– Otherwise (BitDepth is not equal to BitDepth ), the following equations apply:"
            },
            {
                "line_number": 8,
                "text": "C Y"
            },
            {
                "line_number": 9,
                "text": "Cr = Round( R ) − Round( B ) + ( 1 << ( BitDepth − 1 ) ) (E-41)"
            },
            {
                "line_number": 10,
                "text": "C"
            },
            {
                "line_number": 11,
                "text": "t = Round( B ) + ( ( Cr − ( 1 << ( BitDepth − 1 ) ) ) >> 1 ) (E-42)"
            },
            {
                "line_number": 12,
                "text": "C"
            },
            {
                "line_number": 13,
                "text": "Cb = Round( G ) − t + ( 1 << ( BitDepth − 1 ) ) (E-43)"
            },
            {
                "line_number": 14,
                "text": "C"
            },
            {
                "line_number": 15,
                "text": "Y = t + ( ( Cb − ( 1 << ( BitDepth − 1 ) ) ) >> 1 ) (E-44)"
            },
            {
                "line_number": 16,
                "text": "C"
            },
            {
                "line_number": 17,
                "text": "NOTE 7 – In this case, for purposes of the YCgCo nomenclature used in Table E-5, Cb and Cr of Equations E-43 and E-41"
            },
            {
                "line_number": 18,
                "text": "would be referred to as Cg and Co, respectively. An appropriate inverse conversion for Equations E-41 to E-44 is as follows:"
            },
            {
                "line_number": 19,
                "text": "t = Y − ( ( Cb − ( 1 << ( BitDepthC − 1 ) ) ) >> 1 ) (E-45)"
            },
            {
                "line_number": 20,
                "text": "G = Clip1Y( t + ( Cb − ( 1 << ( BitDepthC − 1 ) ) ) ) (E-46)"
            },
            {
                "line_number": 21,
                "text": "B = Clip1Y( t − ( ( Cr − ( 1 << ( BitDepthC − 1 ) ) ) >> 1 ) ) (E-47)"
            },
            {
                "line_number": 22,
                "text": "R = Clip1Y( B + ( Cr − ( 1 << ( BitDepthC − 1 ) ) ) ) (E-48)"
            },
            {
                "line_number": 23,
                "text": "– Otherwise, if matrix_coefficients is equal to 10 or 13, the signal E′ is determined by application of the transfer"
            },
            {
                "line_number": 24,
                "text": "Y"
            },
            {
                "line_number": 25,
                "text": "characteristics function as follows:"
            },
            {
                "line_number": 26,
                "text": "E = K * E + ( 1 − K − K ) * E + K * E (E-49)"
            },
            {
                "line_number": 27,
                "text": "Y R R R B G B B"
            },
            {
                "line_number": 28,
                "text": "E′ = ( E )′ (E-50)"
            },
            {
                "line_number": 29,
                "text": "Y Y"
            },
            {
                "line_number": 30,
                "text": "In this case, E is defined from the \"linear-domain\" signals for E , E , and E , prior to application of the transfer"
            },
            {
                "line_number": 31,
                "text": "Y R G B"
            },
            {
                "line_number": 32,
                "text": "characteristics function, which is then applied to produce the signal E′ . E and E′ are real values with the value 0"
            },
            {
                "line_number": 33,
                "text": "Y Y Y"
            },
            {
                "line_number": 34,
                "text": "associated with nominal black and the value 1 associated with nominal white."
            },
            {
                "line_number": 35,
                "text": "In this case, the signals E′ and E′ are determined as follows:"
            },
            {
                "line_number": 36,
                "text": "PB PR"
            },
            {
                "line_number": 37,
                "text": "E′ = ( E′ − E′ ) ÷ ( 2 * N ) for −N <= E′ − E′ <= 0 (E-51)"
            },
            {
                "line_number": 38,
                "text": "PB B Y B B B Y"
            },
            {
                "line_number": 39,
                "text": "E′ = ( E′ − E′ ) ÷ ( 2 * P ) for 0 < E′ − E′ <= P (E-52)"
            },
            {
                "line_number": 40,
                "text": "PB B Y B B Y B"
            },
            {
                "line_number": 41,
                "text": "E′ = ( E′ − E′ ) ÷ ( 2 * N ) for −N <= E′ − E′ <= 0 (E-53)"
            },
            {
                "line_number": 42,
                "text": "PR R Y R R R Y"
            },
            {
                "line_number": 43,
                "text": "E′ = ( E′ − E′ ) ÷ ( 2 * P ) for 0 < E′ − E′ <= P (E-54)"
            },
            {
                "line_number": 44,
                "text": "PR R Y R R Y R"
            },
            {
                "line_number": 45,
                "text": "where the constants N , P , N , and P are determined by application of the transfer characteristics function to"
            },
            {
                "line_number": 46,
                "text": "B B R R"
            },
            {
                "line_number": 47,
                "text": "expressions involving the constants K and K as follows:"
            },
            {
                "line_number": 48,
                "text": "B R"
            },
            {
                "line_number": 49,
                "text": "N = ( 1 − K )′ (E-55)"
            },
            {
                "line_number": 50,
                "text": "B B"
            },
            {
                "line_number": 51,
                "text": "P = 1 − ( K )′ (E-56)"
            },
            {
                "line_number": 52,
                "text": "B B"
            },
            {
                "line_number": 53,
                "text": "N = ( 1 − K )′ (E-57)"
            },
            {
                "line_number": 54,
                "text": "R R"
            },
            {
                "line_number": 55,
                "text": "P = 1 − ( K )′ (E-58)"
            },
            {
                "line_number": 56,
                "text": "R R"
            },
            {
                "line_number": 57,
                "text": "– Otherwise, if matrix_coefficients is equal to 11, the following equations apply:"
            },
            {
                "line_number": 58,
                "text": "E′ = E′ (E-59)"
            },
            {
                "line_number": 59,
                "text": "Y G"
            },
            {
                "line_number": 60,
                "text": "E′ = ( 0.986566 * E′ − E′ ) ÷ 2 (E-60)"
            },
            {
                "line_number": 61,
                "text": "PB B Y"
            },
            {
                "line_number": 62,
                "text": "E′ = ( E′ − 0.991902 * E′ ) ÷ 2 (E-61)"
            },
            {
                "line_number": 63,
                "text": "PR R Y"
            },
            {
                "line_number": 64,
                "text": "NOTE 8 – In this case, for purposes of the Y′D′ZD′X nomenclature used in Table E-5, E′PB and E′PR of Equations E-60 and E-61"
            },
            {
                "line_number": 65,
                "text": "would be referred to as D′Z and D′X, respectively."
            },
            {
                "line_number": 66,
                "text": "426 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    },
    {
        "page_number": 449,
        "lines": [
            {
                "line_number": 1,
                "text": "– Otherwise (matrix_coefficients is equal to 14), the following applies:"
            },
            {
                "line_number": 2,
                "text": "– If transfer_characteristics is not equal to 18, the following equations apply:"
            },
            {
                "line_number": 3,
                "text": "E′ = 0.5 * ( E′ + E′ ) (E-62)"
            },
            {
                "line_number": 4,
                "text": "Y L M"
            },
            {
                "line_number": 5,
                "text": "E′ = ( 6610 * E′ − 13613 * E′ + 7003 * E′ ) ÷ 4096 (E-63)"
            },
            {
                "line_number": 6,
                "text": "PB L M S"
            },
            {
                "line_number": 7,
                "text": "E′ = ( 17933 * E′ − 17390 * E′ − 543 * E′ ) ÷ 4096 (E-64)"
            },
            {
                "line_number": 8,
                "text": "PR L M S"
            },
            {
                "line_number": 9,
                "text": "– Otherwise, the following equations apply:"
            },
            {
                "line_number": 10,
                "text": "E′ = 0.5 * ( E′ + E′ ) (E-65)"
            },
            {
                "line_number": 11,
                "text": "Y L M"
            },
            {
                "line_number": 12,
                "text": "E′ = ( 3625 * E′ − 7465 * E′ + 3840 * E′ ) ÷ 4096 (E-66)"
            },
            {
                "line_number": 13,
                "text": "PB L M S"
            },
            {
                "line_number": 14,
                "text": "E′ = ( 9500 * E′ − 9212 * E′ − 288 * E′ ) ÷ 4096 (E-67)"
            },
            {
                "line_number": 15,
                "text": "PR L M S"
            },
            {
                "line_number": 16,
                "text": "NOTE 9 – In this case, for purposes of the ICTCP nomenclature used in Table E-5, E′Y, E′PB, and E′PR of Equations E-62, E-63 and"
            },
            {
                "line_number": 17,
                "text": "E-64 may be referred to as I, CT, and CP, respectively. Equations E-62 through E-64 were designed specifically for use with"
            },
            {
                "line_number": 18,
                "text": "transfer_characteristics equal to 16 (PQ), and Equations E-65 through E-67 were designed specifically for use with"
            },
            {
                "line_number": 19,
                "text": "transfer_characteristics equal to 18 (HLG)."
            },
            {
                "line_number": 20,
                "text": "Rec. ITU-T H.264 (06/2019) 427"
            }
        ]
    },
    {
        "page_number": 450,
        "lines": [
            {
                "line_number": 1,
                "text": "Table E-5 – Matrix coefficients interpretation using matrix_coefficients syntax element"
            },
            {
                "line_number": 2,
                "text": "Value Matrix Informative remark"
            },
            {
                "line_number": 3,
                "text": "0 GBR The identity matrix."
            },
            {
                "line_number": 4,
                "text": "Typically used for GBR (often referred to as RGB); however, may also be"
            },
            {
                "line_number": 5,
                "text": "used for YZX (often referred to as XYZ)"
            },
            {
                "line_number": 6,
                "text": "IEC 61966-2-1 (sRGB)"
            },
            {
                "line_number": 7,
                "text": "Society of Motion Picture and Television Engineers ST 428-1 XYZ (2006)"
            },
            {
                "line_number": 8,
                "text": "See Equations E-1 to E-3"
            },
            {
                "line_number": 9,
                "text": "1 K = 0.2126; K = 0.0722 Rec. ITU-R BT.709-6"
            },
            {
                "line_number": 10,
                "text": "R B"
            },
            {
                "line_number": 11,
                "text": "Rec. ITU-R BT.1361-0 conventional colour gamut system and extended"
            },
            {
                "line_number": 12,
                "text": "colour gamut system (historical)"
            },
            {
                "line_number": 13,
                "text": "IEC 61966-2-1 (sYCC)"
            },
            {
                "line_number": 14,
                "text": "IEC 61966-2-4 xvYCC"
            },
            {
                "line_number": 15,
                "text": "709"
            },
            {
                "line_number": 16,
                "text": "Society of Motion Picture and Television Engineers RP 177 (1993)"
            },
            {
                "line_number": 17,
                "text": "Annex B"
            },
            {
                "line_number": 18,
                "text": "See Equations E-28 to E-30"
            },
            {
                "line_number": 19,
                "text": "2 Unspecified Image characteristics are unknown or are determined by the application."
            },
            {
                "line_number": 20,
                "text": "3 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 21,
                "text": "4 K = 0.30; K = 0.11 United States Federal Communications Commission Title 47 Code of"
            },
            {
                "line_number": 22,
                "text": "R B"
            },
            {
                "line_number": 23,
                "text": "Federal Regulations (2003) 73.682 (a) (20)"
            },
            {
                "line_number": 24,
                "text": "See Equations E-28 to E-30"
            },
            {
                "line_number": 25,
                "text": "5 K = 0.299; K = 0.114 Rec. ITU-R BT.470-6 System B, G (historical)"
            },
            {
                "line_number": 26,
                "text": "R B"
            },
            {
                "line_number": 27,
                "text": "Rec. ITU-R BT.601-7 625"
            },
            {
                "line_number": 28,
                "text": "Rec. ITU-R BT.1358-0 625 (historical)"
            },
            {
                "line_number": 29,
                "text": "Rec. ITU-R BT.1700-0 625 PAL and 625 SECAM"
            },
            {
                "line_number": 30,
                "text": "IEC 61966-2-4 xvYCC"
            },
            {
                "line_number": 31,
                "text": "601"
            },
            {
                "line_number": 32,
                "text": "(functionally the same as the value 6)"
            },
            {
                "line_number": 33,
                "text": "See Equations E-28 to E-30"
            },
            {
                "line_number": 34,
                "text": "6 K = 0.299; K = 0.114 Rec. ITU-R BT.601-7 525"
            },
            {
                "line_number": 35,
                "text": "R B"
            },
            {
                "line_number": 36,
                "text": "Rec. ITU-R BT.1358-1 525 or 625"
            },
            {
                "line_number": 37,
                "text": "Rec. ITU-R BT.1700-0 NTSC"
            },
            {
                "line_number": 38,
                "text": "Society of Motion Picture and Television Engineers 170M (2004)"
            },
            {
                "line_number": 39,
                "text": "(functionally the same as the value 5)"
            },
            {
                "line_number": 40,
                "text": "See Equations E-28 to E-30"
            },
            {
                "line_number": 41,
                "text": "7 K = 0.212; K = 0.087 Society of Motion Picture and Television Engineers 240M (1999, historical)"
            },
            {
                "line_number": 42,
                "text": "R B"
            },
            {
                "line_number": 43,
                "text": "See Equations E-28 to E-30"
            },
            {
                "line_number": 44,
                "text": "8 YCgCo See Equations E-34 to E-48"
            },
            {
                "line_number": 45,
                "text": "9 K = 0.2627; K = 0.0593 Rec. ITU-R BT.2020-2 non-constant luminance system"
            },
            {
                "line_number": 46,
                "text": "R B"
            },
            {
                "line_number": 47,
                "text": "Rec. ITU-R BT.2100-2 Y′CbCr"
            },
            {
                "line_number": 48,
                "text": "See Equations E-28 to E-30"
            },
            {
                "line_number": 49,
                "text": "10 K = 0.2627; K = 0.0593 Rec. ITU-R BT.2020-2 constant luminance system"
            },
            {
                "line_number": 50,
                "text": "R B"
            },
            {
                "line_number": 51,
                "text": "See Equations E-49 to E-58"
            },
            {
                "line_number": 52,
                "text": "11 Y′D′ D′ Society of Motion Picture and Television Engineers ST 2085 (2015)"
            },
            {
                "line_number": 53,
                "text": "Z X"
            },
            {
                "line_number": 54,
                "text": "See Equations E-59 to E-61"
            },
            {
                "line_number": 55,
                "text": "12 See Equations E-22 to E-27. Chromaticity-derived non-constant luminance system"
            },
            {
                "line_number": 56,
                "text": "See Equations E-28 to E-30."
            },
            {
                "line_number": 57,
                "text": "13 See Equations E-22 to E-27. Chromaticity-derived constant luminance system"
            },
            {
                "line_number": 58,
                "text": "See Equations E-49 to E-58."
            },
            {
                "line_number": 59,
                "text": "14 IC T C P Rec. ITU-R BT.2100-2 IC T C P"
            },
            {
                "line_number": 60,
                "text": "See Equations E-62 to E-64. for transfer_characteristics value 16 (PQ)"
            },
            {
                "line_number": 61,
                "text": "See Equations E-65 to E-67 for transfer_characteristics value 18 (HLG)"
            },
            {
                "line_number": 62,
                "text": "15..255 Reserved For future use by ITU-T | ISO/IEC"
            },
            {
                "line_number": 63,
                "text": "428 Rec. ITU-T H.264 (06/2019)"
            }
        ]
    }
]